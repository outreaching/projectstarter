{"version":3,"sources":["utils/ApiURL.js","redux/action/index.js","state/toasts/index.js","state/hooks.js","utils/getRpcUrl.js","utils/web3React.js","utils/wallet.js","hooks/useAuth.js","utils/web3.js","hooks/useWeb3.js","utils/contractHelpers.js","utils/formatBalance.js","utils/Environment.js","hooks/dataFetcher.js","components/landing/header/Navbar.js","components/landing/faqs/Faqs.js","components/landing/footer/Footer.js","components/landing/Landing.js","hooks/tierInfoFetchers.js","components/projects/Comingsoon.js","components/projects/Opennow.js","components/projects/Closednow.js","components/projects/Projects.js","components/roundPresale/presale.js","hooks/claimStaking.js","components/staking/Staking.js","components/projects/Project-detail.js","components/idoform/IdoForm.js","components/footerSecondary/FooterSecondary.js","components/admin/Admin.js","components/kyc.js","components/admin/AdminDetail.js","components/kyc-verification/components/steppers/step1.js","components/kyc-verification/components/steppers/step2.js","components/kyc-verification/components/steppers/step3.js","components/kyc-verification/components/steppers/step4.js","components/kyc-verification/components/steppers/step5.js","components/kyc-verification/components/steppers/step7.js","components/kyc-verification/components/steppers/step8.js","Assets/spinner.svg","components/kyc-verification/components/steppers/step9.js","components/kyc-verification/components/steppers/step10.js","components/kyc-verification/components/profile.js","hooks/VerificationWallet.js","components/kyc-verification/components/verifyWallet.js","components/kyc-verification/Verification.js","hooks/useEagerConnect.js","components/main-banner1/Banner1.js","App.js","redux/Reducers/Index.js","redux/store/rootReducer.js","redux/store/index.js","index.js"],"names":["API_URL","userTheme","theme","dispatch","a","type","payload","GetStatus","account","console","log","data","JSON","stringify","walletAddress","config","method","url","headers","axios","then","response","statusOfApplication","catch","error","toastsSlice","createSlice","name","initialState","reducers","push","state","action","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","toastTypes","nodes","process","getNodeUrl","randomIndex","random","length","ConnectorNames","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","setupNetwork","provider","window","ethereum","request","params","toString","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","useAuth","useWeb3React","activate","deactivate","toastError","useDispatch","useMemo","pushToast","title","description","kebabCase","toastInfo","toastSuccess","toastWarning","removeToast","clearToast","useToast","login","useCallback","connectorID","connector","UnsupportedChainIdError","walletConnectProvider","undefined","message","logout","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","useWeb3","library","refEth","useRef","useState","web3","setweb3","useEffect","current","getContract","abi","address","eth","Contract","TokenContract","tokenAbi","getContractStake","PrjtStrterAbi","getPoolContract","poolContract","getIERC20Contract","IERC20Abi","getPoolContract2","PoolAbi","getSeed","SeedAbi","getBalanceNumber","balance","BigNumber","dividedBy","pow","toNumber","Environment","tokenAddress","contractAddress","deployerContractAddress","seedContractAddress","stakeContract","tokenContract","GetPartApprove","userPartApprove","value","tier","contractApp","val","methods","approve","utils","toWei","send","from","on","tx","transactionHash","err","approved","GetParticipated","contract","userParticipating","participateAndPay","GetClaim","userClaim","claim","UserPackages","CheckPackages","buyInOneTier","call","tallow","buyInTwoTier","tallow1","buyInThreeTier","tallow2","dumVal","package1","package2","package3","CheckPack","UseTokenBalance","setBalance","fetchBalance","balanceOf","Navbar","React","setTheme","dark","useSelector","UserReducer","status","setStatus","kycStatus","setKycStatus","responseFromBlockPass","connectMetaMask","localStorage","setItem","close","e","$","modal","themo","getItem","getUserStatus","className","to","href","src","alt","class","style","borderRadius","onClick","slice","substr","toFixed","tabIndex","role","Faqs","For","TextField","required","variant","fullWidth","placeholder","margin","Footer","Landing","BusdInAllTier","TotalBusdInAllTier","addr","totalBUSDReceivedInAllTier","TotalMaxCap","Maxcap","numberOfIdoTokensToSell","TokenPriceBUSD","Price","tokenPriceInBUSD","TotalBusdalltier","Altierbusd","ComingSoon","item","startTime","setStartTime","setNumberOfIdoTokensToSell","totalBusdAllTier","setTotalBusdAllTier","TokenPriceBusd","setTokenPriceBusd","Totalalltierprice","setTotalalltierprice","totalpercentage","Time","saleStartTime","PresaleStart","day","setDay","hour","setHour","min","setMin","sec","setSec","time","Date","setInterval","now","diff","getTime","days","Math","floor","hours","mins","h","m","s","timer","contractAddressDeployed","resR","res2","res3","res4","res5","_id","projectName","width","preSaleStartDateAndTime","tokenPriceInBNB","OpenNow","saleEndTime","PresaleStartEnd","preSaleEndDateAndTime","ClosedNow","Projects","setOpens","openProject","setOpenProject","closedProject","setClosedProject","upcommingProject","setUpcommingProject","GetOpenProject","post","warning","position","autoClose","GetcloseProject","GetupcommingProject","map","index","Rounde","ClaimWithdrawal","environment","Withdraw","amount","claimStaking","details","Staking","opens","totalsupply","totalSupply","TotalSupply","totalstakers","gettotalStakers","GetTotalStakersha","totalStaked","userInfo","StakedAmount","totalUnStaked","claimInfo","UnStakedAmount","withdrawIndex","setWithdrawIndex","txstatus","setTxstatus","stackbalance","setstackbalance","unstackbalance","setunstackbalance","checkbox1","setCheckbox1","ApproveTokens","useApprove","Stake","enterStaking","useStake","UnStakeToken","leaveStaking","useUnStake","setindex","indexs","setindexs","reward","totalReward","StakedAmountReward","withdrawTerms","setWithdrawTerms","userbalance","setUserBalance","allowance","CheckAllowance","account1","getBalance","userbalance1","handleChangeCHeckbox","target","checked","Stake_token","location","reload","Approve_Fun","UnStake_Token","userWithdrawal","res","code","Backdrop","sx","color","open","scope","onChange","input","disabled","ProjectDetail","setDetails","swapped","setSwapped","stake","StakedPoolAmount","Tiers","setTiers","myTier","setMyTier","remAllo","setRemAllo","approveAmount","setApproveAmount","allowencess","setallowencess","allocation","setAllocation","vestingPercentages","alreadyClaimed","claimeddata","setclaimeddata","useParams","Tier","stacked","amountRequiredTier1","amountRequiredTier2","amountRequiredTier3","tallow3","amountRequiredTier4","tallow4","amountRequiredTier5","tallow5","amountRequiredTier6","tallow6","t1","t2","t3","t4","t5","t6","UserTier","RAllocation","Tier1","URL","RemainingAllocation","TierSwap","Swapped","ClaimCall","ClaimToken","getProjectById","Getclaimeddata","statusOfProject","res1","res0","claimfailed","approvetoken","success","Claimctc","JoinPool","detaillottery","setdetaillottery","logoURL","height","contactPersonName","projectDescription","split","FCFSStartdate","FCFSEnddate","vestingUnlockTimes","finalizeStatus","IdoForm","photo","setPhoto","photo1","setPhoto1","uploadImage","updateuploadImage","uploadImage1","updateuploadImage1","priceproject","history","useHistory","VestingPercentages","VestingUnlockTimes","inputList","setInputList","handleInputChange","list","handleAddClick","file","files","createObjectURL","CreatePool","arg","deployProjectOnLaunchpad","validationSchema","Yup","shape","Projectname","max","PContractAddress","ContactPersonName","ContactPersonEmail","TotalTokenSupply","AmountAllocatedPresale","Decimals","PresalePriceBNB","preStartdate","preEnddate","SoftCapPercentage","OwnerFname","OwnerLname","MinAllocation1","typeError","MaxAllocation1","moreThan","MinAllocation2","MaxAllocation2","MinAllocation3","MaxAllocation3","MinAllocation4","MaxAllocation4","MinAllocation5","MaxAllocation5","MinAllocation6","MaxAllocation6","NoofVesting","Tier1MaxCap","Tier2MaxCap","Tier3MaxCap","Tier4MaxCap","Tier5MaxCap","Tier6MaxCap","onSubmit","dummArr","toUTCString","b","c","d","vestingtime","vestPer","data1","FormData","append","website","Twitter","Telegram","epochpreStartTime","epochpreEndTime","epochpFSFCStartTime","epochpFSFCEndTime","minALLocation1","multiply","maxALLocation1","minALLocation2","maxALLocation2","minALLocation3","maxALLocation3","minALLocation4","maxALLocation4","minALLocation5","maxALLocation5","minALLocation6","maxALLocation6","maxteir1","maxteir2","maxteir3","maxteir4","maxteir5","maxteir6","tokenPrice","amountallocated","amountToSend","softCapPer","nameOfProject","_saleStartTime","_fcfsStartTime","_fcfsEndTime","_saleEndTime","_projectOwner","_tokenSender","maxAllocTierOne","maxAllocTierTwo","maxAllocTierThree","maxAllocTierFour","maxAllocTierFive","maxAllocTierSix","minAllocTierOne","minAllocTierTwo","minAllocTierThree","minAllocTierFour","minAllocTierFive","minAllocTierSix","tokenToIDO","tokenDecimals","_numberOfIdoTokensToSell","_tokenPriceInBUSD","_tierOneMaxCap","_tierTwoMaxCap","_tierThreeMaxCap","_tierFourMaxCap","_tierFiveMaxCap","_tierSixMaxCap","_softCapPercentage","_numberOfVestings","_vestingPercentages","_vestingUnlockTimes","deployer","events","OwnershipTransferred","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","Typography","multiline","rows","readonly","onWheel","blur","fontSize","x","i","trait_type","handleRemoveClick","for","accept","autoComplet","FooterSecondary","Admin","allprojectss","setallprojectss","searchTerm","setsearchTerm","itemlength","setitemlength","allproj","filter","elem","toLowerCase","includes","hgf","Welcome","props","loadBlockpassWidget","blockpass","BlockpassKYCConnect","refId","startKYCConnect","date","this","setState","toLocaleTimeString","html","Component","ReactDOM","render","document","getElementById","AdminDetail","setFinalizestatus","FSale","finalizeSale","Finilzeee","contactPersonWalletAddress","contactPersonEmail","Website","totalSupplyOfToken","amountAllocatedForPresale","maxAllocation1","maxAllocation2","maxAllocation3","maxAllocation4","maxAllocation5","maxAllocation6","minAllocation1","minAllocation2","minAllocation3","minAllocation4","minAllocation5","minAllocation6","noofVesting","tier1MaxCap","tier2MaxCap","tier3MaxCap","tier4MaxCap","tier5MaxCap","tier6MaxCap","softCapPercentage","kycFirstName","kycSecondName","singleproject","setsingleproject","FinalizeSale","Finaliz","Step","setStep","inp","setInp","setDocumentName","moveNext","setCountry","country","options","countryList","getData","catchImage","catchBackside","passbackside","getKyc","loader","Spinner","backgroundColor","Profile","tab","setTab","email","setEmail","setUsername","username","preventDefault","Signature","Web3Provider","getLibraryForSign","givenProvider","userSign","signing","getSigner","signMessage","signature","substring","Wallet","sign","setSign","Verification","loadjs","require","setPassBackSide","step","setLoader","resend","setResend","rend","setRend","documentName","label","display","useEagerConnect","Banner1","packag","setPackage","setTier","busdBalance","setbusdBalance","participate","setParticipate","chAppr","setChAppr","getPackages","BalanceBusd","selectPack","getParticipated","alert","letsParticipate","getClaimed","App","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggabless","pauseOnHover","exact","path","component","Car","initState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getLibrary"],"mappings":"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","file":"static/js/main.d30823ec.chunk.js","sourcesContent":["// export const API_URL = 'https://api.new-coins.app'\n// export const API_URL = 'http://192.168.18.80:3001'\n// export const API_URL = 'http://192.168.18.10:3001'\nexport const API_URL = 'https://api.projectstarter.io'\n// export const API_URL = 'http://34.209.245.84:3001'\n","import axios from \"axios\";\nimport { API_URL } from \"../../utils/ApiURL\";\n\nexport const ContarctAction =\n  (Useraccount, txiContract, amount, recipt) => async (dispatch) => {\n    txiContract.methods\n      .balanceOf(Useraccount)\n      .call()\n      .then((balance) => {\n        // console.log(\"balance\",balance);\n        dispatch({\n          type: \"BALANCE\",\n          payload: balance,\n        });\n      });\n    txiContract.methods\n      .calculateBNBReward(Useraccount)\n      .call()\n      .then((reward) => {\n        // console.log(\"reward\",reward);\n        dispatch({\n          type: \"USER_REWARD\",\n          payload: reward,\n        });\n      });\n\n    // txiContract.methods.disruptiveTransfer(amount,recipt).send(\n    //   {\n    //   from: Useraccount,\n    //   amount,\n    //   recipt\n    // }).then((amount)=>{\n    //   dispatch({\n    //     type: \"\",\n    //     payload: amount,\n    //   })\n    // })\n  };\n\nexport const userTheme = (theme) => async (dispatch) => {\n  dispatch({\n    type: \"USER_THEME\",\n    payload: theme,\n  });\n};\n\nexport const GetStatus = (account) => async (dispatch) => {\n  console.log(\"redux\",account)\n \n  if (account) {\n    var data = JSON.stringify({\n      walletAddress: account,\n    });\n\n    var config = {\n      method: \"post\",\n      url: `${API_URL}/v1/Kyc/getDetailOfSingleKyc`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n    axios(config)\n      .then(function (response) {\n        if (response.data.data.statusOfApplication) {\n          dispatch({\n            type: \"GET_USER\",\n            payload: response.data.data.statusOfApplication,\n          });\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        // dispatch({\n        //   type: \"GET_USER\",\n        //   payload: null,\n        // });\n      });\n  } else {\n    console.log(\"error in kyc api\")\n    // dispatch({\n    //   type: \"GET_USER\",\n    //   payload: null,\n    // });\n  }\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state, action) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state, action) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import { useMemo } from 'react'\nimport { kebabCase } from 'lodash'\n// import { Toast, toastTypes } from '@babefinance/uikit'\nimport { useDispatch } from 'react-redux'\nimport {\n    push as pushToast,\n    remove as removeToast,\n    clear as clearToast,\n} from './actions'\n\nconst toastTypes = {\n    SUCCESS: \"string\",\n    DANGER: \"string\",\n    WARNING: \"string\",\n    INFO: \"string\",\n};\n\n\nexport const useToast = () => {\n    const dispatch = useDispatch()\n    const helpers = useMemo(() => {\n        const push = (toast) => dispatch(pushToast(toast))\n\n        return {\n            toastError: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n            },\n            toastInfo: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n            },\n            toastSuccess: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n            },\n            toastWarning: (title, description) => {\n                return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n            },\n            push,\n            remove: (id) => dispatch(removeToast(id)),\n            clear: () => dispatch(clearToast()),\n        }\n    }, [dispatch])\n\n    return helpers\n}","import random from 'lodash/random'\n\n// Array of available nodes to connect to\n// export const nodes = [\"https://bsc-dataseed.binance.org/\", \"https://bsc-dataseed.binance.org/\", \"https://bsc-dataseed.binance.org/\"]\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport getNodeUrl from './getRpcUrl'\nimport { Web3Provider } from \"@ethersproject/providers\"\nconst ConnectorNames = {\n    Injected: \"injected\",\n    WalletConnect: \"walletconnect\",\n    BSC: \"bsc\"\n}\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(56)\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\nconst walletconnect = new WalletConnectConnector({\n    rpc: { [chainId]: rpcUrl },\n    bridge: 'https://bridge.walletconnect.org',\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL,\n})\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\nexport const connectorsByName = {\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.BSC]: bscConnector,\n}\nexport const getLibrary = (provider) => {\n    return provider\n}\nexport const getLibraryForSign = (provider) => {\n    try {\n        const library = new Web3Provider(provider);\n        return library\n    } catch (error) {\n        console.log(\"web3 provider not found\", error)\n    }\n}","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window).ethereum\n  if (provider) {\n    // const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    const chainId = 56\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://bscscan.com/'],\n            // blockExplorerUrls: ['https://testnet.bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress,\n  tokenSymbol,\n  tokenDecimals,\n  tokenImage,\n) => {\n  const tokenAdded = await (window).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { useToast } from '../state/hooks'\nimport { connectorsByName } from '../utils/web3React'\nimport { setupNetwork } from '../utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  \n  const login = useCallback((connectorID) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n      activate(connector, async (error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          connector.walletConnectProvider = undefined\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import Web3 from 'web3'\nimport getRpcUrl from './getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from '../utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import web3NoAccount from './web3'\nimport tokenAbi from './tokenAbi.json'\nimport PrjtStrterAbi from './PrjtStrterAbi.json'\nimport poolContract from './poolContarct.json'\nimport IERC20Abi from './IERC20Abi.json'\nimport PoolAbi from './poolsAbi.json'\nimport TierAbi from './tierAbi.json'\nimport SeedAbi from \"./seedAbi.json\"\n\nconst getContract = (abi, address, web3) => {\n    const _web3 = web3 ?? web3NoAccount;\n    // console.log('_web3',_web3);\n    return new _web3.eth.Contract(abi, address)\n}\n\nexport const TokenContract = (address, web3) => {\n    return getContract(tokenAbi, address, web3)\n}\n\nexport const getContractStake= (address, web3) => {\n    return getContract(PrjtStrterAbi, address, web3)\n}\n\nexport const getPoolContract= (address, web3) => {\n    return getContract(poolContract, address, web3)\n}\n\nexport const getIERC20Contract= (address, web3) => {\n    return getContract(IERC20Abi, address, web3)\n}\n\nexport const getPoolContract2 = (address, web3) => {\n    return getContract(PoolAbi, address, web3)\n}\n\nexport const getPoolTier = (address, web3) => {\n    return getContract(TierAbi, address, web3)\n}\n// export default TokenContract;\n\nexport const getSeed = (address, web3) => {\n    return getContract(SeedAbi, address, web3)\n}","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance, decimals) => {\n    const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n    return displayBalance.toNumber()\n}\n// console.log(\"getBalanceNumber\",getBalanceNumber());\n\nexport const getFullDisplayBalance = (balance, decimals) => {\n    return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","let Environment = {\n    tokenAddress: \"0x2aAca69245363661E53d18f35dbc0bCf87Ed1BB8\",\n    contractAddress: \"0x66d2B5B165507c98e10b4aC36b836A56112273dC\",\n    deployerContractAddress: \"0x90643C0b4265Eae3C610BdE6F43eF05e005fb9bf\",\n    seedContractAddress: \"0xA4761EfeAFad549fa717A87144697AfC04270556\"\n  };\n  export default Environment;\n","import { useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useCallback } from \"react\";\nimport useWeb3 from \"./useWeb3\";\nimport {\n  getContractStake,\n  TokenContract,\n  getSeed,\n} from \"../utils/contractHelpers.js\";\nimport {\n  getFullDisplayBalance,\n  getBalanceNumber,\n} from \"../utils/formatBalance\";\nimport useRefresh from \"./useRefresh\";\nimport Environment from \"../utils/Environment\";\n\nimport axios from \"axios\";\n\nlet stakeContract = Environment.contractAddress;\nconst tokenContract = Environment.tokenAddress;\n\nconst test = {\n  nameOfProject: \"init\",\n  _saleStartTime: 1644394020,\n  _saleEndTime: 1644437220,\n  _projectOwner: \"0x53780eDC8E2a5236aD7aeBA183C60672C602438A\",\n  _tokenSender: \"0x53780eDC8E2a5236aD7aeBA183C60672C602438A\",\n  maxAllocTierOne: \"400000000000000000000\",\n  maxAllocTierTwo: \"400000000000000000000\",\n  maxAllocTierThree: \"400000000000000000000\",\n  minAllocTierOne: \"1\",\n  minAllocTierTwo: \"1\",\n  minAllocTierThree: \"1\",\n  minBUSDvalue_TierOne: 1,\n  minBUSDvalue_TierTwo: 1,\n  minBUSDvalue_TierThree: 1,\n  tokenToIDO: \"0xb7809ada6ef0cb220886c8a8d997eab72becbe4d\",\n  tokenDecimals: 18,\n  _numberOfIdoTokensToSell: \"90000000000000000000000\",\n  _tokenPriceInBUSD: 1,\n  _tierOneMaxCap: \"10000000000000000000000\",\n  _tierTwoMaxCap: \"30000000000000000000000\",\n  _tierThreeMaxCap: \"50000000000000000000000\",\n  _softCapPercentage: \"1\",\n  _numberOfVestings: \"1\",\n  _vestingPercentages: [50],\n  _vestingUnlockTimes: [1644437881],\n};\n\nconst useApprove = () => {\n  const web3 = useWeb3();\n  try {\n    const ApproveTokens = useCallback(async (account) => {\n      const contract = TokenContract(tokenContract, web3);\n      const approved = await contract.methods\n        .approve(\n          stakeContract,\n          web3.utils.toWei(\"100000000000000000000\", \"ether\")\n        )\n        .send({ from: account })\n        .on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        });\n      return approved;\n    });\n    return { ApproveTokens };\n  } catch (err) {\n    console.log(\"approve err\", err);\n    throw err;\n  }\n};\n\nconst CheckAllowance = () => {\n  const [balance, setBalance] = useState();\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const contract = TokenContract(tokenContract, web3);\n  useEffect(() => {\n    const fetchBalance = async () => {\n      if (!account) {\n        setBalance(0);\n        return;\n      }\n      let tallow = await contract.methods\n        .allowance(account, stakeContract)\n        .call();\n      let allowance = getBalanceNumber(parseInt(tallow), 18);\n      // setBalance(new BigNumber(balance))\n      await setBalance(allowance);\n    };\n    if (account) {\n      fetchBalance();\n    }\n  }, [account, contract]);\n  return balance;\n};\n\nconst StakedAmount = () => {\n  const web3 = useWeb3();\n  const [balance, setBalance] = useState(0);\n  const contract = getContractStake(stakeContract, web3);\n  const { account } = useWeb3React();\n  useEffect(async () => {\n    try {\n      if (!account) {\n        setBalance(0);\n        return;\n      }\n      const tallow = await contract.methods.userInfo(0, account).call();\n      setBalance((tallow.amount / 10 ** 18).toFixed(3));\n    } catch (err) {\n      setBalance(0);\n    }\n  }, [account, contract]);\n  return balance;\n};\n\nconst GetPartApprove = () => {\n  const web3 = useWeb3();\n  try {\n    const userPartApprove = useCallback(async (account, value, tier) => {\n      const contractApp = TokenContract(\"0x55d398326f99059ff775485246999027b3197955\", web3);\n      let val = value * 30;\n      const approved = await contractApp.methods\n        .approve(\n          Environment.seedContractAddress,\n          web3.utils.toWei(web3.utils.toWei(val.toString()), \"ether\")\n        )\n        .send({ from: account }).on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        })\n        .catch((err) => {\n          return err;\n        });\n      return approved;\n    });\n    return { userPartApprove };\n  } catch (err) {\n    console.log(\"approve err\", err);\n    throw err;\n  }\n};\n\nconst GetParticipated = () => {\n  const web3 = useWeb3();\n  const contractAddress = Environment.seedContractAddress;\n  const contract = getSeed(contractAddress, web3);\n  try {\n    const userParticipating = useCallback(async (account, value, tier) => {\n      console.log(\"we have value\",value, tier)\n      // console.log(\"value\", value)\n      const approved = await contract.methods\n        .participateAndPay(web3.utils.toWei(value.toString(), \"ether\"), tier)\n        .send({\n          from: account,\n        })\n        .on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        })\n        .catch((err) => {\n          return err;\n        });\n      return approved;\n    });\n    return { userParticipating };\n  } catch (err) {\n    console.log(\"approve err\", err);\n    throw err;\n  }\n};\n\nconst GetClaim = () => {\n  const web3 = useWeb3();\n  const contractAddress = Environment.seedContractAddress;\n  const contract = getSeed(contractAddress, web3);\n  try {\n    const userClaim = useCallback(async (account) => {\n      const approved = await contract.methods\n        .claim()\n        .send({\n          from: account,\n        })\n        .on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        })\n        .catch((err) => {\n          return err;\n        });\n      return approved;\n    });\n    return { userClaim };\n  } catch (err) {\n    console.log(\"approve err\", err);\n    throw err;\n  }\n};\n\nconst UserPackages = () => {\n  const web3 = useWeb3();\n  const seedContract = Environment.seedContractAddress;\n  const contract = getSeed(seedContract, web3);\n  const CheckPackages = useCallback(\n    async (account) => {\n      const tallow = await contract.methods.buyInOneTier(account).call();\n      const tallow1 = await contract.methods.buyInTwoTier(account).call();\n      const tallow2 = await contract.methods.buyInThreeTier(account).call();\n      let dumVal = {\n        package1: parseInt(tallow2),\n        package2: parseInt(tallow1),\n        package3: parseInt(tallow),\n      };\n      console.log(\"dumVal\", dumVal)\n      return dumVal;\n    },\n    [contract]\n  );\n    \n  return { CheckPack: CheckPackages };\n};\n\nconst StakedAmountReward = () => {\n  const web3 = useWeb3();\n  const [balance, setBalance] = useState(0);\n  const contract = getContractStake(stakeContract, web3);\n  const { account } = useWeb3React();\n  useEffect(async () => {\n    try {\n      if (!account) {\n        setBalance(0);\n        return;\n      }\n      const tallow = await contract.methods.userInfo(0, account).call();\n      console.log(\"rewardddddddd\", tallow);\n      setBalance(tallow.totalReward / 10 ** 18);\n    } catch (err) {\n      setBalance(0);\n    }\n  }, [account, contract]);\n  return balance;\n};\n\n// export default StakedAmount;\n\nconst UnStakedAmount = () => {\n  const web3 = useWeb3();\n  const [balance, setBalance] = useState(0);\n  const contract = getContractStake(stakeContract, web3);\n  const { account } = useWeb3React();\n  useEffect(async () => {\n    try {\n      if (!account) {\n        setBalance(0);\n        return;\n      }\n      const tallow = await contract.methods.claimInfo(0, account).call();\n      setBalance((tallow.amount / 10 ** 18).toFixed(3));\n    } catch (error) {\n      setBalance(0);\n    }\n  }, [account, contract]);\n  return balance;\n};\n// React.useEffect(() => {\n//     if (stakeContract) {\n//         UnStakedAmount();\n//         // getStakedbalance();\n//     }\n// }, [stakeContract]);\n// export default UnStakedAmount;\n\nconst UseTokenBalance = () => {\n  const [balance, setBalance] = useState(0);\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const contract = TokenContract(tokenContract, web3);\n  useEffect(() => {\n    if (!account) {\n      setBalance(0);\n      return;\n    }\n    const fetchBalance = async () => {\n      try {\n        let balance = await contract.methods.balanceOf(account).call();\n        await setBalance(parseInt(balance) / 10 ** 18);\n      } catch (error) {\n        setBalance(0);\n      }\n    };\n    // if (account) {\n    fetchBalance();\n    // }\n  }, [account, contract]);\n  return balance;\n};\n\nconst useStake = (amount) => {\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const contract = getContractStake(stakeContract, web3);\n  // const ammnt= amount.toString()\n  // const amount1 = web3.utils.toWei(amount,'ether');\n  // const amount1 = new BigNumber(amount).multipliedBy(\n  //     new BigNumber(10).pow(18)\n  //   );\n  // const amount1 = (amount * (10 ** 18))\n  // console.log(\"amounnnttt\", amount, account)\n  const StakePsr = useCallback(async () => {\n    try {\n      const approved = await contract.methods\n        .enterStaking(web3.utils.toWei(amount.toString(), \"ether\"))\n        .send({ from: account })\n        .on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        })\n        .on(\"error\", () => {\n          return false;\n        });\n      return approved;\n    } catch (error) {\n      console.log(\"error:÷:::::\", error);\n      throw error;\n    }\n  }, [account, amount]);\n\n  return { Stake: StakePsr };\n};\nconst useUnStake = (amount) => {\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const contract = getContractStake(stakeContract, web3);\n  const UnStakePsr = useCallback(async () => {\n    try {\n      const approved = await contract.methods\n        .leaveStaking(web3.utils.toWei(amount.toString(), \"ether\"))\n        .send({ from: account })\n        .on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        });\n      return approved;\n    } catch (error) {\n      console.log(\"error::::::\", error);\n      throw error;\n    }\n  }, [account, amount]);\n  return { UnStakeToken: UnStakePsr };\n};\n// export default UseTokenBalance\n\nexport {\n  useStake,\n  useUnStake,\n  useApprove,\n  CheckAllowance,\n  UnStakedAmount,\n  StakedAmount,\n  UseTokenBalance,\n  StakedAmountReward,\n  UserPackages,\n  GetParticipated,\n  GetClaim,\n  GetPartApprove\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../../utils/ApiURL\";\nimport \"./navbar.scss\";\nimport { userTheme, GetStatus } from \"../../../redux/action/index\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport { UseTokenBalance } from \"../../../hooks/dataFetcher\";\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const { account } = useWeb3React();\n  const { login, logout } = useAuth();\n  const [theme, setTheme] = React.useState(null);\n  const dark = useSelector((state) => state.UserReducer.theme);\n  const call = useSelector((state) => state.UserReducer.status);\n  const [status, setStatus] = useState(null);\n  const [kycStatus, setKycStatus] = useState(null);\n  const balance = UseTokenBalance();\n\n  // console.log(\"balance\", kycStatus);\n\n  useEffect(() => {\n    setStatus(call);\n  }, [call, account]);\n\n  useEffect(() => {\n    if (account) {\n      console.log(\"asdaesfasdfsdafsddasfas\")\n      var data = JSON.stringify({\n        walletAddress: account,\n      });\n\n      var config = {\n        method: \"post\",\n        url: `${API_URL}/v1/Kyc/getDetailOfSingleKyc`,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n      axios(config)\n        .then(function (response) {\n          if (response.data.data?.responseFromBlockPass) {\n            setKycStatus(response.data.data.responseFromBlockPass);\n            // dispatch(GetStatus(data));\n            console.log(\"response\", response.data.data);\n          } else {\n            setKycStatus(null);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          // dispatch({\n          //   type: \"GET_USER\",\n          //   payload: null,\n          // });\n        });\n    }\n  }, [account]);\n\n  const connectMetaMask = async () => {\n    try {\n      localStorage.setItem(\"injected\", \"injected\");\n      if (account) {\n        logout();\n        close();\n      } else {\n        login(\"injected\");\n        close();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const Connect = () => {\n    if (account) {\n      logout();\n      close();\n      localStorage.setItem(\"flag\", false);\n    } else {\n      login(\"walletconnect\");\n      close();\n      // localStorage.setItem('flag',true)\n      // localStorage.setItem('walletconnect',\"walletconnect\")\n    }\n  };\n\n  const close = () => {\n    window.$(\"#exampleModalconnect\").modal(\"hide\");\n  };\n  const opeeennn = () => {\n    window.$(\"#exampleModalconnect\").modal(\"show\");\n  };\n\n  // console.log(\"account\", account)\n\n  const setVersion = () => {\n    if (theme === \"light\") {\n      localStorage.setItem(\"wtTheme\", \"dark\");\n      setTheme(\"dark\");\n      dispatch(userTheme(\"dark\"));\n    } else {\n      localStorage.setItem(\"wtTheme\", \"light\");\n      setTheme(\"light\");\n      dispatch(userTheme(\"light\"));\n    }\n  };\n  useEffect(() => {\n    let themo = localStorage.getItem(\"wtTheme\");\n    if (themo === null) {\n      localStorage.setItem(\"wtTheme\", \"dark\");\n      setTheme(\"dark\");\n      dispatch(userTheme(\"dark\"));\n    } else {\n      setTheme(themo);\n      dispatch(userTheme(themo));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (account) {\n      if (status === null) {\n        getUserStatus();\n      }\n    } else {\n      setStatus(null);\n    }\n  }, [account]);\n\n  const getUserStatus = () => {\n    dispatch(GetStatus(account));\n  };\n\n  return (\n    <>\n      <div className={dark}>\n        <section className=\"main-navbar\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 m-auto\">\n                <nav className=\"navbar ptb20 navbar-expand-xl\">\n                  <Link to=\"/\">\n                    <a className=\"navbar-brand\" href=\"#\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"/projectstarter-dark/logo-white.svg\"\n                            : \"/projectstarter/logo-blue.svg\"\n                        }\n                        className=\"img-fluid mainLogos\"\n                        alt=\"\"\n                      />\n                    </a>\n                  </Link>\n                  <button\n                    className=\"navbar-toggler \"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                  >\n                    <div class=\"style-bar\"></div>\n                    <div class=\"style-bar\"></div>\n                    <div class=\"style-bar\"></div>\n                  </button>\n                  <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarSupportedContent\"\n                  >\n                    <ul className=\"navbar-nav navbar-nav1 navTabsWidth mr-auto \">\n                      {/* <li className=\"nav-item\">\n                        <Link className=\"nav-link active btn-white\" to=\"/\">\n                          Home\n                        </Link>\n                      </li> */}\n                      <li className=\"nav-item\">\n                        <Link className=\"nav-link btn-white bg_trans\" to=\"/projects\">\n                          Projects\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link btn-white bg_trans\">\n                          Staking\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link btn-white bg_trans\">\n                        NFTs\n                        <div className=\"badge\">Coming Soon</div>\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link btn-white bg_trans\">\n                        NFT Marketplace\n                        <div className=\"badge\">Coming Soon</div>\n                        </Link>\n                      </li>\n                      {/* {account && (\n                        <a\n                          href={\n                            \"https://project-starter-kyc.netlify.app/?account=\" +\n                            account?.toString()\n                          }\n                          className=\"nav-link btn-green bg-info text-light\"\n                        >\n                          <li className=\"nav-item\">\n                            <i class=\"fa-solid pr-1 fa-x\"></i> KYC\n                          </li>\n                        </a>\n                      )} */}\n\n                      {/* // old kyc code */}\n                      {account && (\n                        <li className=\"nav-item\">\n                          {kycStatus === null && (\n                            <a\n                              href={\n                                \"https://project-starter-kyc.netlify.app/?account=\" +\n                                account?.toString()\n                              }\n                              className=\"nav-link btn-green bg-info text-light\"\n                            >\n                              <li className=\"nav-item\">\n                                <i class=\"fa-solid pr-1 fa-x\"></i> KYC\n                              </li>\n                            </a>\n                          )}\n                          {kycStatus === \"approved\" && (\n                            <div className=\"nav-link btn-green text-light\">\n                              <i class=\"fas pr-1 fa-check\"></i> KYC\n                            </div>\n                          )}\n                          {kycStatus === \"created\" && (\n                            <div\n                              style={{ borderRadius: \"25px\" }}\n                              className=\"nav-link btn-warning text-light\"\n                            >\n                              <i class=\"fas pr-1 fa-question\"></i> Pending\n                            </div>\n                          )}\n                          {kycStatus === \"rejected\" && (\n                            <a\n                              href={\n                                \"https://project-starter-kyc.netlify.app/?account=\" +\n                                account?.toString()\n                              }\n                              className=\"nav-link btn-green bg-info text-light\"\n                            >\n                              <li className=\"nav-item\">\n                                <i class=\"fa-solid pr-1 fa-x\"></i> KYC\n                              </li>\n                            </a>\n                          )}\n                        </li>\n                      )}\n                    </ul>\n                    <form className=\"form-inline mt-0 my-lg-0 my_class_style_form\">\n                      {/* <button type=\"button\" onClick={setVersion} className='imgButton mb-md-0 mb-2'>{dark === 'dark' ? <img src=\"projectstarter/moon-icon.svg\" className='img-fluid darklightImg' alt=\"\" /> : <img src=\"projectstarter/sun-icon.svg\" className='img-fluid darklightImg' alt=\"\" />}</button>\n                                    <button type='button' data-toggle=\"modal\" data-target=\"#exampleModalconnect\" className=\"nav-link btn-white\">\n                                        Connect Wallet\n                                    </button> */}\n                      <button\n                        type=\"button\"\n                        onClick={setVersion}\n                        className=\"imgButton mb-md-0 mb-2\"\n                      >\n                        {dark === \"dark\" ? (\n                          <img\n                            src=\"projectstarter/moon-icon.svg\"\n                            className=\"img-fluid darklightImg\"\n                            alt=\"\"\n                          />\n                        ) : (\n                          <img\n                            src=\"projectstarter/sun-icon.svg\"\n                            className=\"img-fluid darklightImg\"\n                            alt=\"\"\n                          />\n                        )}\n                      </button>\n                      <button className=\"ahshdhbas shadow\">\n                        <Link className=\" btn-white\" to=\"/admin\">\n                          Your Projects\n                        </Link>\n                      </button>\n                      {account ? (\n                        <button\n                          className=\"nav-link btn-white1 btn-common-clear\"\n                          onClick={connectMetaMask}\n                        >\n                          {/* Disconnect */}\n                          {account.slice(0, 5) +\n                            \"............\" +\n                            account.substr(account.length - 3)}\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          data-toggle=\"modal\"\n                          onClick={opeeennn}\n                          className=\"nav-link btn-white my_class_style\"\n                        >\n                          Connect\n                        </button>\n                      )}\n                      {account && (\n                        <button className=\"nav-link btn-white px-2\">\n                          {balance\n                            ? parseInt(balance)?.toFixed(2)\n                            : \"0.00\"}{\" \"}\n                          PSR\n                        </button>\n                      )}\n                    </form>\n                    {/* {account ?  <button  className=\"nav-link btn-white1\" onClick={connectMetaMask}>Disconnect Wallet</button> \n                                   :   <button className=\"nav-link btn-white\" onClick={connectMetaMask}> Connect Wallet </button> } */}\n                    {/* second single btn nav */}\n                    <button className=\"ml-md-auto  d-none btn-common btn-common-clear \">\n                      Logout\n                    </button>\n                    {/* second single btn nav */}\n                    {/* kyc nav */}\n                    <div className=\"d-none\">\n                      <ul className=\"navbar-nav mr-auto ml-auto d-flex align-items-center d-none \">\n                        <li className=\"nav-item\">\n                          <Link className=\"nav-link \" to=\"/\">\n                            <button className=\"btn-white\">\n                              Go to Launchpad\n                            </button>\n                          </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                          <button className=\"btn-common\">Connect Wallet</button>\n                        </li>\n                        <li className=\"nav-item\">\n                          <Link to=\"/staking\" className=\"nav-link\">\n                            <button className=\"btn-common btn-common-clear\">\n                              Logout\n                            </button>\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                    {/* kyc nav */}\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n          {/* modal */}\n          <div\n            className=\"modal fade\"\n            id=\"exampleModalconnect\"\n            tabIndex=\"-1\"\n            role=\"dialog\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n          >\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modalHeader\">\n                  <div className=\"form-img\">\n                    <p>Connect Wallet</p>\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span className=\"modalCloser\" aria-hidden=\"true\">\n                      &times;\n                    </span>\n                  </button>\n                </div>\n                <div className=\"modal-body text-left\">\n                  <div className=\"adminCard \">\n                    <div className=\"adminCard-inner-inputs\">\n                      <div className=\"form-group \">\n                        <button\n                          className=\"btn-common w-100\"\n                          onClick={connectMetaMask}\n                        >\n                          <img\n                            src=\"/projectstarter/socials/metamask-logo.svg\"\n                            alt=\"\"\n                          />\n                          <p>Metamask</p>\n                        </button>\n                      </div>\n                      <div className=\"form-group \">\n                        <button className=\"btn-common w-100\" onClick={Connect}>\n                          <img\n                            src=\"/projectstarter/socials/walletconnect-logo-1.svg\"\n                            alt=\"\"\n                            className=\"imgFilto\"\n                          />\n                          <p>Wallet Connect</p>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport './faqs.scss';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport {\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux'\nconst Faqs = () => {\n    const dark = useSelector(state => state.UserReducer.theme);\n    return (\n        <>\n            <div className={dark}>\n                <section className=\"main-faqs ptb\" id=\"faqs\">\n                    <div className=\"container\">\n                        <div className=\"row \">\n                            <div className=\"col-sm-2\"></div>\n                            <div className=\"col-sm-8\">\n                                <div className=\"inner-content text-center ptb20\">\n                                    <h3 className=\"\">The Projectstarter Protocol. <span className=\"common\"><strong>People First.</strong></span></h3>\n                                    <img src=\"\\projectstarter\\header\\line.png\" className=\"img-fluid\" alt=\"\" />\n                                </div>\n                                <div className='bg-img text-center'>\n                                    <h3 className=\"white ptb20\"><strong>Get Alerts For New Pools</strong></h3>\n                                    <ul>\n                                        <li>\n                                            <div className=\"inside-btn\">\n                                                <button className=\"btn-black\" data-toggle=\"modal\" data-target=\"#exampleModal\">Sign Up</button>\n                                                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                                        <div className=\"modal-content\">\n                                                            <div className=\"modalHeader\">\n                                                                <div className='form-img'>\n                                                                    <p>Welcome to the Future of Fundraising</p>\n                                                                </div>\n                                                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                                    <span className='modalCloser' aria-hidden=\"true\">&times;</span>\n                                                                </button>\n                                                            </div>\n                                                            <div className=\"modal-body text-left\">\n                                                                <ValidatorForm className=\"form-contact\">\n                                                                    <div className='adminCard '>\n                                                                        {/* <div className='form-img'>\n                                                                        <p>Welcome to the Future of Fundraising</p>\n                                                                    </div> */}\n                                                                        <div className='adminCard-inner-inputs'>\n                                                                            <div className=\"form-group \">\n                                                                                <label className='p-main' For=\"name\">Your Name </label>\n                                                                                <TextField\n                                                                                    type='text'\n                                                                                    required\n                                                                                    id=\"name\"\n                                                                                    name=\"name\"\n                                                                                    variant='outlined'\n                                                                                    fullWidth\n                                                                                    placeholder='Enter your username'\n                                                                                    margin=\"dense\"\n                                                                                />\n                                                                            </div>\n                                                                            <div className=\"form-group \">\n                                                                                <label className='p-main' For=\"name\">Email Address</label>\n                                                                                <TextField\n                                                                                    required\n                                                                                    type='email'\n                                                                                    id=\"name\"\n                                                                                    name=\"name\"\n                                                                                    variant='outlined'\n                                                                                    fullWidth\n                                                                                    placeholder='Enter your email'\n                                                                                    margin=\"dense\"\n                                                                                />\n\n                                                                            </div>\n                                                                            <div className=\"form-group \">\n                                                                                <button className='btn-common w-100'>Subscribe</button>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </ValidatorForm>\n                                                            </div>\n                                                            {/* <div className=\"modal-footer text-center\">\n                                                            <button type=\"button\" className=\"btn btn-common w-100\">Subscribe</button>\n                                                        </div> */}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2\"></div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n        </>\n    )\n}\n\nexport default Faqs;\n","import React from 'react';\nimport './footer.scss';\nimport { useSelector } from 'react-redux'\nconst Footer = () => {\n    const dark = useSelector(state => state.UserReducer.theme);\n    return (\n        <>\n            <div className={dark}>\n                <section className=\"main-footer ptb\">\n\n                    <div className=\"container\">\n                        <p className='footer_para'>ProjectStarter © Copyright 2022. All rights reserved.</p>\n                        <p className='footer_para_bottom'>All trademarks and copyrights belong to their respective owners.</p>\n                        {/* <div className=\"row\">\n                            <div className=\"col-sm-3 text-center\">\n                                <div className=\"inner-icon\">\n                                    <a className=\"navbar-brand\" href=\"/\">\n                                        <img src={dark==='dark'?\"/projectstarter-dark/logo-footer.svg\":'/projectstarter/footer-logo.svg'} className=\"img-fluid\" alt=\"\" />\n                                    </a>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2 text-center\">\n                                <div className=\"inner-icon\">\n                                    <h4><strong className='text-uppercase'>Social</strong></h4>\n                                    <ul>\n                                        <li>\n                                            <a>Medium</a>\n                                        </li>\n                                        <li>\n                                            <a>Telegram Community</a>\n                                        </li>\n                                        <li>\n                                            <a>Telegram Announcements</a>\n                                        </li>\n                                        <li>\n                                            <a>Twitter</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2 text-center\">\n                                <div className=\"inner-icon\">\n                                    <h4><strong className='text-uppercase'>Token</strong></h4>\n                                    <ul>\n                                        <li>\n                                            <a>CoinGecko</a>\n                                        </li>\n                                        <li>\n                                            <a>CoinMarketCap</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2 text-center\">\n                                <div className=\"inner-icon\">\n                                    <h4><strong className='text-uppercase'>Help</strong></h4>\n                                    <ul>\n                                        <li>\n                                            <a>Terms of Services</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-3 text-center\">\n                                <div className=\"inner-icon\">\n                                    <h4><strong className='text-uppercase'>Smart Contracts</strong></h4>\n                                    <ul>\n                                        <li>\n                                            <a>Github</a>\n                                        </li>\n                                        <li>\n                                            <a>Smart Contracts Audit (Coming Soon)</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div> */}\n\n                    </div>\n                </section>\n            </div>\n\n        </>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\n// import logo from './logo.svg';\nimport '../../App.scss';\n// import Navbar from './header/Navbar.js';\nimport Banner from './main-banner/Banner.js';\nimport About from './aboutus/About.js';\nimport Features from './features/Features.js';\nimport Roadmap from './roadmap/Roadmap.js';\nimport Faqs from './faqs/Faqs.js';\nimport Footer from './footer/Footer.js';\nimport MeatTeam from './meetteam/MeetTeam..js';\nimport TrustedPartner from './trustedpartner/TrustedPartner.js';\n// import Community from './community/Community.js';\n\nfunction Landing() {\n  return (\n    <>\n\n       <Banner/>\n       <About/>\n       <Features/>\n       <Roadmap/>\n       <MeatTeam/>\n       <TrustedPartner/>\n       <Faqs/>\n       <Footer/>\n    </>\n  );\n}\n\nexport default Landing;","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCallback } from 'react'\nimport useWeb3 from './useWeb3'\nimport { getContractStake, TokenContract, getPoolContract2, getPoolTier } from '../utils/contractHelpers.js'\nimport { getFullDisplayBalance, getBalanceNumber } from '../utils/formatBalance'\nimport Environment from '../utils/Environment';\nimport { ClickAwayListener } from '@material-ui/core'\n\nconst stakeContract = Environment.contractAddress;\nconst tokenContract = Environment.tokenAddress;\n\n\nconst StakedPoolAmount = () => {\n    const [balance, setBalance] = useState()\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const contract = getContractStake(stakeContract, web3);\n    useEffect(async () => {\n        try {\n            if (!account) {\n                setBalance(0);\n                return;\n            }\n            // console.log(\"&&&&&&&&&&&&&&&&&\")\n            const tallow = await contract.methods.userInfo(0, account).call()\n            await setBalance((tallow.amount / 10 ** 18).toFixed(0))\n            //    await console.log(\"stacked amount we have \",stackedamount)\n        }\n        catch (err) {\n            setBalance(0)\n        }\n\n    }, [account, contract])\n    return balance\n}\n\nconst UserTier = () => {\n    // const [stackedaount, setstackedaount] = useState(''\n    const web3 = useWeb3()\n\n    const { account } = useWeb3React();\n    const Tier = useCallback(async (addr, stacked) => {\n        // console.log(\"contract deployed address\", addr)\n        const contract = getPoolContract2(addr, web3);\n        try {\n            const tallow1 = await contract.methods.amountRequiredTier1().call();\n            const tallow2 = await contract.methods.amountRequiredTier2().call();\n            const tallow3 = await contract.methods.amountRequiredTier3().call();\n            const tallow4 = await contract.methods.amountRequiredTier4().call();\n            const tallow5 = await contract.methods.amountRequiredTier5().call();\n            const tallow6 = await contract.methods.amountRequiredTier6().call();\n            const t1 = tallow1 / (10 ** 18)\n            const t2 = tallow2 / (10 ** 18)\n            const t3 = tallow3 / (10 ** 18)\n            const t4 = tallow4 / (10 ** 18)\n            const t5 = tallow5 / (10 ** 18)\n            const t6 = tallow6 / (10 ** 18)\n            console.log(\"tier\", t1)\n            console.log(\"tier\", t2)\n            console.log(\"tier\", t3)\n            console.log(\"tier\", t4)\n            console.log(\"tier\", t5)\n            console.log(\"tier\", t6)\n            if (stacked >= t6 && stacked < t5) {\n                let tier1 = 1\n                return tier1;\n            } else if (stacked >= t5 && stacked < t4) {\n                let tier2 = 2\n                return tier2;\n            }\n            else if (stacked >= t4 && stacked < t3) {\n                let tier3 = 3\n                return tier3;\n            }\n            else if (stacked >= t3 && stacked < t2) {\n                let tier4 = 4\n                return tier4;\n            }\n            else if (stacked >= t2 && stacked < t1) {\n                let tier5 = 5\n                return tier5;\n            }\n            else if (stacked >= t1) {\n                let tier6 = 6\n                return tier6;\n            }\n            else {\n                return 0;\n            }\n        } catch (err) {\n            console.log(\"tier error\", err)\n            throw err\n        }\n    }, [account])\n    return { Tier }\n}\n\n\n// const UserTier = (addr, stacked) => {\n//     console.log(\"-------------------\", addr, stacked)\n//     const [stackedaount, setstackedaount] = useState()\n//     const web3 = useWeb3()\n//     const { account } = useWeb3React();\n//     const contract = getPoolContract2(addr, web3);\n//     useEffect(async () => {\n//         try {\n//             if (!account) {\n//                 setstackedaount(200);\n//                 return;\n//             }\n//             const tallow1 = await contract.methods.amountRequiredTier1().call();\n//             const tallow2 = await contract.methods.amountRequiredTier2().call();\n//             const tallow3 = await contract.methods.amountRequiredTier3().call();\n//             const tallow4 = await contract.methods.amountRequiredTier4().call();\n//             const tallow5 = await contract.methods.amountRequiredTier5().call();\n//             const tallow6 = await contract.methods.amountRequiredTier6().call();\n//             const t1 = await tallow1 / (10 ** 18)\n//             const t2 = await tallow2 / (10 ** 18)\n//             const t3 = await tallow3 / (10 ** 18)\n//             const t4 = await tallow4 / (10 ** 18)\n//             const t5 = await tallow5 / (10 ** 18)\n//             const t6 = await tallow6 / (10 ** 18)\n//             if (stacked >= t1 && stacked < t2) {\n//                 let tier1 = 1\n//                 setstackedaount(tier1)\n//             } else if (stacked >= t2 && stacked < t3) {\n//                 let tier2 = 2\n//                 setstackedaount(tier2)\n//             }\n//             else if (stacked >= t3 && stacked < t4) {\n//                 let tier3 = 3\n//                 setstackedaount(tier3)\n//             }\n//             else if (stacked >= t4 && stacked < t5) {\n//                 let tier4 = 4\n//                 setstackedaount(tier4)\n//             }\n//             else if (stacked >= t5 && stacked < t6) {\n//                 let tier5 = 5\n//                 setstackedaount(tier5)\n//             }\n//             else if (stacked >= t6) {\n//                 let tier6 = 6\n//                 setstackedaount(tier6)\n//             }\n//             else {\n//                 setstackedaount(0);\n//             }\n//         }\n//         catch (err) {\n//             setstackedaount(300)\n//         }\n\n//     }, [account,contract])\n//     return stackedaount\n// }\n\nconst Swapped = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const TierSwap = useCallback(async (addr, Tier) => {\n        let URL\n        let Tier1 = Tier.toString()\n        if (Tier1 == '6') {\n            URL = 'buyInOneTier';\n        } else if (Tier1 == '5') {\n            URL = 'buyInTwoTier';\n        } else if (Tier1 == '4') {\n            URL = 'buyInThreeTier';\n        } else if (Tier1 == '3') {\n            URL = 'buyInFourTier';\n        } else if (Tier1 == '2') {\n            URL = 'buyInFiveTier';\n        } else if (Tier1 == '1') {\n            URL = 'buyInSixTier';\n        }\n\n        console.log(\"urllll maaaa\", URL)\n        const contract = getPoolContract2(addr, web3);\n        try {\n            const tallow = await contract.methods[`${URL}`](account).call()\n            console.log(\"swapped amount\", tallow)\n            return tallow;\n\n        } catch (err) {\n            console.log(\"swapped error\", err)\n            throw err\n        }\n    })\n    return { TierSwap }\n}\n\nconst RemainingAllocation = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const RAllocation = useCallback(async (addr, Tier) => {\n        const contract = getPoolContract2(addr, web3);\n        let URL\n        let Tier1 = Tier.toString()\n        if (Tier1 == '1') {\n            URL = 'maxAllocaPerUserTierOne';\n        } else if (Tier1 == '2') {\n            URL = 'maxAllocaPerUserTierTwo';\n        } else if (Tier1 == '3') {\n            URL = 'maxAllocaPerUserTierThree';\n        } else if (Tier1 == '4') {\n            URL = 'maxAllocaPerUserTierFour';\n        } else if (Tier1 == '5') {\n            URL = 'maxAllocaPerUserTierFive';\n        } else if (Tier1 == '6') {\n            URL = 'maxAllocaPerUserTierSix';\n        }\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods[`${URL}`]().call()\n            return tallow;\n        } catch (err) {\n            console.log(\"remaing error\", err)\n            throw err\n        }\n    })\n    return { RAllocation }\n\n}\n\nconst BusdInAllTier = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const TotalBusdInAllTier = useCallback(async (addr) => {\n        const contract = getPoolContract2(addr, web3);\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods.totalBUSDReceivedInAllTier().call()\n            return tallow;\n        } catch (err) {\n            // console.log(\"TotalBusdInAllTier error\", err)\n            throw err\n        }\n    })\n    return { TotalBusdInAllTier }\n}\n\nconst ClaimToken = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const ClaimCall = useCallback(async (addr) => {\n        const contract = getPoolContract2(addr, web3);\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods.claim().send({ from: account });\n            return tallow;\n        } catch (err) {\n            // console.log(\"ClaimToken error\", err)\n            throw err\n        }\n    })\n    return { ClaimCall }\n}\n\n\nconst TotalMaxCap = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const Maxcap = useCallback(async (addr) => {\n        const contract = getPoolContract2(addr, web3);\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods.numberOfIdoTokensToSell().call()\n            return tallow;\n        } catch (err) {\n            // console.log(\"Maxcap error\", err)\n            throw err\n        }\n    })\n    return { Maxcap }\n}\n\nconst PresaleStart = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const Time = useCallback((addr) => {\n        const contract = getPoolContract2(addr, web3);\n\n        try {\n            const tallow = contract.methods.saleStartTime().call()\n            // console.log(\"timmer we get hee\", tallow)\n            return tallow;\n\n        } catch (err) {\n            // console.log(\"Maxcap error\", err)\n            throw err\n        }\n    })\n    return { Time }\n}\n\nconst PresaleStartEnd = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const Time = useCallback((addr) => {\n        const contract = getPoolContract2(addr, web3);\n        try {\n            const tallow = contract.methods.saleEndTime().call()\n            // console.log(\"timmer we get hee\", tallow)\n            return tallow;\n\n        } catch (err) {\n            // console.log(\"Maxcap error\", err)\n            throw err\n        }\n    })\n    return { Time }\n}\n\nconst TokenPriceBUSD = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const Price = useCallback(async (addr) => {\n        const contract = getPoolContract2(addr, web3);\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods.tokenPriceInBUSD().call()\n            return tallow;\n        } catch (err) {\n            // console.log(\"Maxcap error\", err)\n            throw err\n        }\n    })\n    return { Price }\n}\n\nconst TotalBusdalltier = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const Altierbusd = useCallback(async (addr) => {\n        const contract = getPoolContract2(addr, web3);\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods.totalBUSDReceivedInAllTier().call()\n            return tallow;\n        } catch (err) {\n            // console.log(\"Total Busd error\", err)\n            throw err\n        }\n    })\n    return { Altierbusd }\n}\n\nconst CheckPoolAllowance = (addr) => {\n    const [balance, setBalance] = useState(0)\n    const { account } = useWeb3React()\n    const web3 = useWeb3()\n    const contract = TokenContract(tokenContract, web3)\n    useEffect(() => {\n        const fetchBalance = async () => {\n            let tallow = await contract.methods.allowance(account, Environment.deployerContractAddress).call()\n            let allowance = getBalanceNumber(parseInt(tallow), 18)\n            // setBalance(new BigNumber(balance))\n            await setBalance(allowance)\n        }\n        if (account) {\n            fetchBalance()\n        }\n    }, [account, contract])\n    return balance\n}\n\nconst TotalSupply = () => {\n    const web3 = useWeb3()\n    const [balance, setBalance] = useState()\n    const { account } = useWeb3React();\n\n\n    useEffect(async () => {\n        try {\n            if (!account) {\n                setBalance(0);\n                return;\n            }\n            const contract = getContractStake(Environment.contractAddress, web3);\n            const tallow = await contract.methods.totalSupply().call()\n            setBalance((tallow / 10 ** 18).toFixed(0));\n        } catch (err) {\n            // console.log(\"Total totalsupply error\", err)\n            setBalance(0)\n        }\n    }, [web3]);\n    return balance\n}\n\nconst GetTotalStakersha = () => {\n    const web3 = useWeb3()\n    const [balance, setBalance] = useState(0);\n    const { account } = useWeb3React();\n\n    useEffect(async () => {\n        try {\n            if (!account) {\n                setBalance(0);\n                return;\n            }\n            const contract = getContractStake(Environment.contractAddress, web3);\n            const tallow = await contract.methods.gettotalStakers().call()\n            setBalance(tallow);\n        } catch (err) {\n            // console.log(\"Total TotalStakers error\", err)\n            setBalance(0);\n        }\n    }, [web3])\n    return balance\n}\n\nconst Finilzeee = () => {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const FSale = useCallback(async (addr) => {\n        const contract = getPoolContract2(addr, web3);\n        // await console.log(\"addrrrrrrrrrrrrrrrrrrrrr11111\", addr)\n        try {\n            const tallow = await contract.methods.finalizeSale().send({ from: account });\n            return tallow;\n        } catch (err) {\n            // console.log(\"ClaimToken error\", err)\n            throw err\n        }\n    })\n    return { FSale }\n}\n\nexport { UserTier, Swapped, CheckPoolAllowance, StakedPoolAmount, RemainingAllocation, BusdInAllTier, TotalMaxCap, TokenPriceBUSD, PresaleStart, PresaleStartEnd, TotalBusdalltier, Finilzeee, TotalSupply, GetTotalStakersha, ClaimToken };\n","import React, { useEffect, useState } from \"react\";\nimport \"./projects.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport GetApprovedTok from \"../../hooks/getPooldata\";\nimport { PresaleStart,BusdInAllTier, TotalMaxCap, TokenPriceBUSD, TotalBusdalltier } from \"../../hooks/tierInfoFetchers\";\n\nconst ComingSoon = ({ item }) => {\n  const dark = useSelector((state) => state.UserReducer.theme);\n  const [startTime,setStartTime]=useState(null)\n  // const { getApproved } = GetApprovedTok();\n  const [numberOfIdoTokensToSell, setNumberOfIdoTokensToSell] = useState(0);\n  const [totalBusdAllTier, setTotalBusdAllTier] = useState(0);\n  const [TokenPriceBusd, setTokenPriceBusd] = useState(0);\n  const [Totalalltierprice, setTotalalltierprice] = useState(0);\n  const { Maxcap } = TotalMaxCap()\n  const { TotalBusdInAllTier } = BusdInAllTier()\n  const { Price } = TokenPriceBUSD()\n  const { account } = useWeb3React();\n  const { Altierbusd } = TotalBusdalltier()\n  let totalpercentage = totalBusdAllTier / numberOfIdoTokensToSell * 100\n  const { Time } = PresaleStart();\n  const [day, setDay] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [min, setMin] = useState(0);\n  const [sec, setSec] = useState(0);\n  // for(let elem of item){\n  //   let tokenaddres = elem.contractAddressDeployed\n  //   // console.log(\"deployed addresss are \",tokenaddres)\n  // }\n  var time = new Date(startTime * 1000)\n  // console.log(\"timeeeeee\", time)\n  function timer() {\n    var now = new Date()\n    var diff = time.getTime() - now.getTime()\n    if (diff <= 0) {\n      return;\n    }\n    var days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(diff / (1000 * 60 * 60));\n    var mins = Math.floor(diff / (1000 * 60));\n    var secs = Math.floor(diff / 1000);\n    var d = days;\n    var h = hours - days * 24;\n    var m = mins - hours * 60;\n    var s = secs - mins * 60;\n    setDay(d);\n    setHour(h);\n    setMin(m);\n    setSec(s)\n  }\n  setInterval(() => {\n    timer()\n  }, 1000);\n\n  useEffect(async () => {\n    // console.log(\"-----\");\n    // const res = await getApproved();\n    const resR = await Time(item.contractAddressDeployed)\n    await console.log(\"timerr\",resR)\n    setStartTime(resR)\n    // console.log(\"res\", res);\n  }, [item]);\n\n  useEffect(async () => {\n    if (account && item) {\n      const res2 = await TotalBusdInAllTier(item.contractAddressDeployed)\n      const res3 = await Maxcap(item.contractAddressDeployed);\n      const res4 = await Price(item.contractAddressDeployed);\n      const res5 = await Altierbusd(item.contractAddressDeployed);\n      setTotalBusdAllTier(res2 / 10 ** 18)\n      setNumberOfIdoTokensToSell(res3)\n      setTokenPriceBusd(res4 / 10 ** 18)\n      setTotalalltierprice(res5 / 10 ** 18)\n      // console.log(\"Total BUSD in all Tier\",res2)\n      // console.log(\"Total MAXCAP in all Tier\",res3)\n      // console.log(\"Total Price in all Tier\",res4)\n    }\n  }, [account, item]);\n\n  return (\n    <div className={dark}>\n      <div className=\"opennnn\">\n        <h4>Opens In</h4>\n      </div>\n      <div className=\"calender\">\n        <div className=\"clesaa d-flex justify-content-center\">\n          <div className=\"gg text-center\">\n            <h6>{day}</h6>\n            <span className=\"\" >DAYS</span>\n          </div>\n          <div className=\"gg text-center\">\n            <h6>{hour}</h6>\n            <span className=\"\">HRS</span>\n          </div>\n          <div className=\"gg text-center\">\n            <h6>{min}</h6>\n            <span className=\"\">MIN</span>\n          </div>\n          <div className=\"gg text-center\">\n            <h6>{sec}</h6>\n            <span>SEC</span>\n          </div>\n        </div>\n        <div className=\"main-calender d-flex\">\n        </div>\n        {/* <p>{item.preSaleStartDateAndTime.toUTCString()}</p> */}\n      </div>\n      <Link to={`/projectdetail/${item?._id}`}>\n        <div className=\"inner-card\">\n\n          <div className=\"row\">\n            <div className=\"col-9 text-left p-0\">\n              <ul className=\"list-inline d-flex align-items-center\">\n                <li className=\"list-inline-item \">\n                  <div className=\"inner-img\">\n                    <img\n                      src=\"\\projectstarter\\project-card\\project-logo.png\"\n                      className=\"img-fluid\"\n                      alt=\"\"\n                    />\n                  </div>\n                </li>\n                <li className=\"list-inline-item\">\n                  <div className=\"inner-img\">\n                    <h5>{item?.projectName}</h5>\n                    {/* <p className=\"grey\">\n                      <small>1 YAY = 12.23131 PSR</small>\n                    </p> */}\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-3 text-right p-0\">\n              <div className=\"inner-btn\">\n                <button className=\"project-coming\">\n                 ComingSoon\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"progress-div\">\n            <div className=\"row mb-1 mt-3\">\n              <div className=\"col-11 p-0\">\n                <h5 className=\"grey\">Pool Progress</h5>\n              </div>\n              <div className=\"col-1 p-0\">\n                <div className=\"inner-btn\">\n                <p className=\"grey font-weight-bold \" >{\n                          totalpercentage ?\n                            totalpercentage.toFixed(2)\n                            :\n                            0\n\n                        }%</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12 p-0\">\n                <div className=\"progress\">\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    style={{ width: `${totalpercentage}%` }}\n                    aria-valuenow=\"70\"\n                    aria-valuemin=\"20\"\n                    aria-valuemax=\"100\"\n                  ></div>\n                </div>\n                <h5 className=\"common mt-1\">BUSD \n                {totalBusdAllTier} / ${numberOfIdoTokensToSell && TokenPriceBusd ? numberOfIdoTokensToSell * TokenPriceBusd : 0}\n                </h5>\n              </div>\n            </div>\n          </div>\n          <div className=\"brdr\"></div>\n          <div className=\"ptb10 inner-small-cards\">\n            <div className=\"row\">\n              {/* <div className=\"col-sm-4 col-6 p-0\">\n                            <ul className='list-inline small-cards-ul d-flex align-items-center'>\n                                <li className='list-inline-item'>\n                                    <img src={dark === 'dark' ? \"/projectstarter/project-card/perticipants-icon-dark.svg\" : \"/projectstarter/project-card/perticipants-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n                                </li>\n                                <div className=\"list-inline-item small-cards-ul-li2\">\n                                    <p>Participants</p>\n                                    <p>20,250</p>\n                                </div>\n                            </ul>\n                        </div> */}\n              <div className=\"col-sm-6 col-6 p-0\">\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/start-date-icon-dark.svg\"\n                          : \"/projectstarter/project-card/start-date-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2\">\n                    <p>Start-date</p>\n                    <p>{item?.preSaleStartDateAndTime.slice(0, 10)}</p>\n                  </div>\n                </ul>\n              </div>\n              <div className=\"col-sm-6 col-6 p-0\">\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/token-price-icon-dark.svg\"\n                          : \"/projectstarter/project-card/token-price-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2\">\n                    <p>Token Price</p>\n                    <p>{item?.tokenPriceInBNB}</p>\n                  </div>\n                </ul>\n              </div>\n\n              {/* <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n                <div className=\"bgb d-md-block d-none\"></div>\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/access-icon-dark.svg\"\n                          : \"/projectstarter/project-card/access-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                    <p>Access</p>\n                    <p>Private</p>\n                  </div>\n                </ul>\n              </div> */}\n              <div className=\"col-sm-4 mt-sm-4 mt-0 col-6 p-0\">\n                <div className=\"bgb d-md-block d-none\"></div>\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/token-sold-icon-dark.svg\"\n                          : \"/projectstarter/project-card/token-sold-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                    <p>Token Sold</p>\n                    <p>\n                    {Totalalltierprice && \n                      Totalalltierprice ?\n                      Totalalltierprice\n                      :\n                      0\n                      }\n                    </p>\n                  </div>\n                </ul>\n              </div>\n              {/* <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n                <div className=\"bgb d-md-block d-none\"></div>\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/token-distribution-icon-dark.svg\"\n                          : \"/projectstarter/project-card/token-distribution-icon.svg\"\n                      }\n                      className=\" smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                    <p className=\" text-truncate w-75\">\n                      Token Distribution\n                    </p>\n                    <p>20</p>\n                  </div>\n                </ul>\n              </div> */}\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n\n  );\n\n  //   return (\n  //     <>\n  //       <div className={dark}>\n  //         <section className=\"main-coming main-open\">\n  //           <div className=\"container\">\n  //             <div className=\"row\">\n  //               <div className=\"col-sm-12\">\n  //                 <div className=\"inner-content\">\n  //                   <h2>\n  //                     <strong>Projects Coming Soon</strong>{\" \"}\n  //                   </h2>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //             <div className=\"row ptb\">\n  //               {/* {commingData} */}\n\n  //               {/* <div className=\"col-lg-6\">\n  //                                 <div className={dark}>\n  //                                     <div className=\"inner-card\">\n  //                                         <div className=\"row\">\n  //                                             <div className=\"col-9 text-left p-0\">\n  //                                                 <ul className=\"list-inline d-flex align-items-center\">\n  //                                                     <li className=\"list-inline-item \">\n  //                                                         <div className=\"inner-img\">\n  //                                                             <img src=\"\\projectstarter\\project-card\\project-logo.png\" className=\"img-fluid\" alt=\"\" />\n  //                                                         </div>\n  //                                                     </li>\n  //                                                     <li className=\"list-inline-item\">\n  //                                                         <div className=\"inner-img\">\n  //                                                             <h5>Yay Games</h5>\n  //                                                             <p className=\"grey\"><small>1 YAY = 12.23131 PSR</small></p>\n  //                                                         </div>\n  //                                                     </li>\n  //                                                 </ul>\n  //                                             </div>\n  //                                             <div className=\"col-3 text-right p-0\">\n  //                                                 <div className=\"inner-btn\">\n  //                                                     <button className=\"project-closed\">Open</button>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                         <div className=\"progress-div\">\n  //                                             <div className=\"row mb-1 mt-3\">\n  //                                                 <div className=\"col-11 p-0\">\n  //                                                     <h5 className=\"grey\">Pool Progress</h5>\n  //                                                 </div>\n  //                                                 <div className=\"col-1 p-0\">\n  //                                                     <div className=\"inner-btn\">\n  //                                                         <p className=\"grey\">50%</p>\n  //                                                     </div>\n  //                                                 </div>\n  //                                             </div>\n  //                                             <div className=\"row\">\n  //                                                 <div className=\"col-sm-12 p-0\">\n  //                                                     <div className=\"progress\">\n  //                                                         <div className=\"progress-bar\" role=\"progressbar\" style={{ width: \"30%\" }} aria-valuenow=\"70\"\n  //                                                             aria-valuemin=\"20\" aria-valuemax=\"100\">\n\n  //                                                         </div>\n  //                                                     </div>\n  //                                                     <h5 className=\"common mt-1\">BUSD 500,000/$1,000,000</h5>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                         <div className=\"brdr\"></div>\n  //                                         <div className=\"ptb10 inner-small-cards\">\n  //                                             <div className=\"row\">\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/perticipants-icon-dark.svg\" : \"/projectstarter/project-card/perticipants-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Participants</p>\n  //                                                             <p>20,250</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/start-date-icon-dark.svg\" : \"/projectstarter/project-card/start-date-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Start-date</p>\n  //                                                             <p>17-Dec-2021</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-price-icon-dark.svg\" : \"/projectstarter/project-card/token-price-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Token Price</p>\n  //                                                             <p>$0.30</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n\n  //                                                 <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/access-icon-dark.svg\" : \"/projectstarter/project-card/access-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p>Access</p>\n  //                                                             <p>Private</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-sold-icon-dark.svg\" : \"/projectstarter/project-card/token-sold-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p>Token Sold</p>\n  //                                                             <p>1M</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-distribution-icon-dark.svg\" : \"/projectstarter/project-card/token-distribution-icon.svg\"} className=' smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p className=' text-truncate w-75'>Token Distribution</p>\n  //                                                             <p>20</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                     </div>\n  //                                 </div>\n  //                             </div> */}\n  //             </div>\n  //           </div>\n  //         </section>\n  //       </div>\n  //     </>\n  //   );\n};\n\nexport default ComingSoon;\n","import React, { useEffect, useState } from \"react\";\nimport \"./projects.scss\";\nimport { Link } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector } from \"react-redux\";\nimport GetApprovedTok from \"../../hooks/getPooldata\";\nimport { PresaleStartEnd, BusdInAllTier, TotalMaxCap, TokenPriceBUSD, TotalBusdalltier } from \"../../hooks/tierInfoFetchers\";\n\nconst OpenNow = ({ item }) => {\n  // console.log(\"dataa date start\", item);\n  const nowTime = Math.floor(Date.now() / 1000)\n  const dark = useSelector((state) => state.UserReducer.theme);\n  const [startTime,setStartTime]=useState(null)\n  // const { getApproved } = GetApprovedTok();\n  const [numberOfIdoTokensToSell, setNumberOfIdoTokensToSell] = useState(0);\n  const [totalBusdAllTier, setTotalBusdAllTier] = useState(0);\n  const [TokenPriceBusd, setTokenPriceBusd] = useState(0);\n  const [Totalalltierprice, setTotalalltierprice] = useState(0);\n  const { Maxcap } = TotalMaxCap()\n  const { TotalBusdInAllTier } = BusdInAllTier()\n  const { Price } = TokenPriceBUSD()\n  const { Altierbusd } = TotalBusdalltier()\n  const { account } = useWeb3React();\n  let totalpercentage = totalBusdAllTier / numberOfIdoTokensToSell * 100\n  const [day, setDay] = useState(0);\n  const { Time } = PresaleStartEnd();\n  const [hour, setHour] = useState(0);\n  const [min, setMin] = useState(0);\n  const [sec, setSec] = useState(0);\n  var time = new Date(item.preSaleEndDateAndTime)\n  // console.log(\"timeeeeee\", time)\n  function timer() {\n    var now = new Date()\n    var diff = time.getTime() - now.getTime()\n    if (diff <= 0) {\n      return;\n    }\n    var days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(diff / (1000 * 60 * 60));\n    var mins = Math.floor(diff / (1000 * 60));\n    var secs = Math.floor(diff / 1000);\n    var d = days;\n    var h = hours - days * 24;\n    var m = mins - hours * 60;\n    var s = secs - mins * 60;\n    setDay(d);\n    setHour(h);\n    setMin(m);\n    setSec(s)\n  }\n  setInterval(() => {\n    timer()\n  }, 1000);\n\n  useEffect(async () => {\n    // console.log(\"-----\");\n    // const res = await getApproved();\n    const resR = await Time(item.contractAddressDeployed)\n    await console.log(\"timerr\",resR)\n    setStartTime(resR)\n    // console.log(\"res\", res);\n  }, [item]);\n\n  useEffect(async () => {\n    if (account && item) {\n      const res2 = await TotalBusdInAllTier(item.contractAddressDeployed)\n      const res3 = await Maxcap(item.contractAddressDeployed);\n      const res4 = await Price(item.contractAddressDeployed);\n      const res5 = await Altierbusd(item.contractAddressDeployed);\n      setTotalBusdAllTier(res2 / 10 ** 18)\n      setNumberOfIdoTokensToSell(res3)\n      setTokenPriceBusd(res4 / 10 ** 18)\n      setTotalalltierprice(res5 / 10 ** 18)\n      // console.log(\"Total BUSD in all Tier\",res2)\n      // console.log(\"Total MAXCAP in all Tier\",res3)\n      // console.log(\"Total Price in all Tier\",res4)\n    }\n  }, [account, item]);\n\n  return (\n\n    <div className={dark}>\n      <div className=\"opennnn\">\n        <h4>Closes In</h4>\n      </div>\n      <div className=\"calender\">\n        <div className=\"clesaa d-flex justify-content-center\">\n          <div className=\"gg text-center\">\n            <h6>{day}</h6>\n            <span className=\"\" >DAYS</span>\n          </div>\n          <div className=\"gg text-center\">\n            <h6>{hour}</h6>\n            <span className=\"\">HRS</span>\n          </div>\n          <div className=\"gg text-center\">\n            <h6>{min}</h6>\n            <span className=\"\">MIN</span>\n          </div>\n          <div className=\"gg text-center\">\n            <h6>{sec}</h6>\n            <span>SEC</span>\n          </div>\n        </div>\n        <div className=\"main-calender d-flex\">\n        </div>\n        {/* <p>{item.preSaleStartDateAndTime.toUTCString()}</p> */}\n      </div>\n      <Link to={`/projectdetail/${item?._id}`}>\n        <div className=\"inner-card\">\n          <div className=\"row\">\n            <div className=\"col-9 text-left p-0\">\n              <ul className=\"list-inline d-flex align-items-center\">\n                <li className=\"list-inline-item \">\n                  <div className=\"inner-img\">\n                    <img\n                      src=\"\\projectstarter\\project-card\\project-logo.png\"\n                      className=\"img-fluid\"\n                      alt=\"\"\n                    />\n                  </div>\n                </li>\n                <li className=\"list-inline-item\">\n                  <div className=\"inner-img\">\n                    <h5>{item?.projectName}</h5>\n                    {/* <p className=\"grey\">\n                      <small>1 YAY = 12.23131 PSR</small>\n                    </p> */}\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-3 text-right p-0\">\n              <div className=\"inner-btn\">\n                <button className=\"project-coming\">\n                  Open\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"progress-div\">\n            <div className=\"row mb-1 mt-3\">\n              <div className=\"col-11 p-0\">\n                <h5 className=\"grey\">Pool Progress</h5>\n              </div>\n              <div className=\"col-1 p-0\">\n                <div className=\"inner-btn\">\n                  <p className=\"grey\">\n                  {\n                          totalpercentage ?\n                            totalpercentage.toFixed(2)\n                            :\n                            0\n                        }%</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm-12 p-0\">\n                <div className=\"progress\">\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    style={{ width: `${totalpercentage}%` }}\n                    aria-valuenow=\"70\"\n                    aria-valuemin=\"20\"\n                    aria-valuemax=\"100\"\n                  ></div>\n                </div>\n                <h5 className=\"common mt-1\">BUSD \n                {totalBusdAllTier} / ${numberOfIdoTokensToSell && TokenPriceBusd ? numberOfIdoTokensToSell * TokenPriceBusd : 0}\n                </h5>\n              </div>\n            </div>\n          </div>\n          <div className=\"brdr\"></div>\n          <div className=\"ptb10 inner-small-cards\">\n            <div className=\"row\">\n              {/* <div className=\"col-sm-4 col-6 p-0\">\n                            <ul className='list-inline small-cards-ul d-flex align-items-center'>\n                                <li className='list-inline-item'>\n                                    <img src={dark === 'dark' ? \"/projectstarter/project-card/perticipants-icon-dark.svg\" : \"/projectstarter/project-card/perticipants-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n                                </li>\n                                <div className=\"list-inline-item small-cards-ul-li2\">\n                                    <p>Participants</p>\n                                    <p>20,250</p>\n                                </div>\n                            </ul>\n                        </div> */}\n              <div className=\"col-sm-6 col-6 p-0\">\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/start-date-icon-dark.svg\"\n                          : \"/projectstarter/project-card/start-date-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2\">\n                    <p>Start-date</p>\n                    <p>{item?.preSaleStartDateAndTime.slice(0, 10)}</p>\n                  </div>\n                </ul>\n              </div>\n              <div className=\"col-sm-6 col-6 p-0\">\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/token-price-icon-dark.svg\"\n                          : \"/projectstarter/project-card/token-price-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2\">\n                    <p>Token Price</p>\n                    <p>{item?.tokenPriceInBNB}</p>\n                  </div>\n                </ul>\n              </div>\n              {/* <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n                <div className=\"bgb d-md-block d-none\"></div>\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/access-icon-dark.svg\"\n                          : \"/projectstarter/project-card/access-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                    <p>Access</p>\n                    <p>Private</p>\n                  </div>\n                </ul>\n              </div> */}\n              <div className=\"col-sm-4 mt-sm-4 mt-0 col-6 p-0\">\n                <div className=\"bgb d-md-block d-none\"></div>\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/token-sold-icon-dark.svg\"\n                          : \"/projectstarter/project-card/token-sold-icon.svg\"\n                      }\n                      className=\"img-fluid smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                    <p>Token Sold</p>\n                    <p>\n                    {Totalalltierprice && \n                      Totalalltierprice ?\n                      Totalalltierprice\n                      :\n                      0\n                      }\n                    </p>\n                  </div>\n                </ul>\n              </div>\n              {/* <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n                <div className=\"bgb d-md-block d-none\"></div>\n                <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"/projectstarter/project-card/token-distribution-icon-dark.svg\"\n                          : \"/projectstarter/project-card/token-distribution-icon.svg\"\n                      }\n                      className=\" smallLogo\"\n                      alt=\"\"\n                    />\n                  </li>\n                  <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                    <p className=\" text-truncate w-75\">\n                      Token Distribution\n                    </p>\n                    <p>20</p>\n                  </div>\n                </ul>\n              </div> */}\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n\n  );\n\n  //   return (\n  //     <>\n  //       <div className={dark}>\n  //         <section className=\"main-coming main-open\">\n  //           <div className=\"container\">\n  //             <div className=\"row\">\n  //               <div className=\"col-sm-12\">\n  //                 <div className=\"inner-content\">\n  //                   <h2>\n  //                     <strong>Projects Coming Soon</strong>{\" \"}\n  //                   </h2>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //             <div className=\"row ptb\">\n  //               {/* {commingData} */}\n\n  //               {/* <div className=\"col-lg-6\">\n  //                                 <div className={dark}>\n  //                                     <div className=\"inner-card\">\n  //                                         <div className=\"row\">\n  //                                             <div className=\"col-9 text-left p-0\">\n  //                                                 <ul className=\"list-inline d-flex align-items-center\">\n  //                                                     <li className=\"list-inline-item \">\n  //                                                         <div className=\"inner-img\">\n  //                                                             <img src=\"\\projectstarter\\project-card\\project-logo.png\" className=\"img-fluid\" alt=\"\" />\n  //                                                         </div>\n  //                                                     </li>\n  //                                                     <li className=\"list-inline-item\">\n  //                                                         <div className=\"inner-img\">\n  //                                                             <h5>Yay Games</h5>\n  //                                                             <p className=\"grey\"><small>1 YAY = 12.23131 PSR</small></p>\n  //                                                         </div>\n  //                                                     </li>\n  //                                                 </ul>\n  //                                             </div>\n  //                                             <div className=\"col-3 text-right p-0\">\n  //                                                 <div className=\"inner-btn\">\n  //                                                     <button className=\"project-closed\">Open</button>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                         <div className=\"progress-div\">\n  //                                             <div className=\"row mb-1 mt-3\">\n  //                                                 <div className=\"col-11 p-0\">\n  //                                                     <h5 className=\"grey\">Pool Progress</h5>\n  //                                                 </div>\n  //                                                 <div className=\"col-1 p-0\">\n  //                                                     <div className=\"inner-btn\">\n  //                                                         <p className=\"grey\">50%</p>\n  //                                                     </div>\n  //                                                 </div>\n  //                                             </div>\n  //                                             <div className=\"row\">\n  //                                                 <div className=\"col-sm-12 p-0\">\n  //                                                     <div className=\"progress\">\n  //                                                         <div className=\"progress-bar\" role=\"progressbar\" style={{ width: \"30%\" }} aria-valuenow=\"70\"\n  //                                                             aria-valuemin=\"20\" aria-valuemax=\"100\">\n\n  //                                                         </div>\n  //                                                     </div>\n  //                                                     <h5 className=\"common mt-1\">BUSD 500,000/$1,000,000</h5>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                         <div className=\"brdr\"></div>\n  //                                         <div className=\"ptb10 inner-small-cards\">\n  //                                             <div className=\"row\">\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/perticipants-icon-dark.svg\" : \"/projectstarter/project-card/perticipants-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Participants</p>\n  //                                                             <p>20,250</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/start-date-icon-dark.svg\" : \"/projectstarter/project-card/start-date-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Start-date</p>\n  //                                                             <p>17-Dec-2021</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-price-icon-dark.svg\" : \"/projectstarter/project-card/token-price-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Token Price</p>\n  //                                                             <p>$0.30</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n\n  //                                                 <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/access-icon-dark.svg\" : \"/projectstarter/project-card/access-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p>Access</p>\n  //                                                             <p>Private</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-sold-icon-dark.svg\" : \"/projectstarter/project-card/token-sold-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p>Token Sold</p>\n  //                                                             <p>1M</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-distribution-icon-dark.svg\" : \"/projectstarter/project-card/token-distribution-icon.svg\"} className=' smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p className=' text-truncate w-75'>Token Distribution</p>\n  //                                                             <p>20</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                     </div>\n  //                                 </div>\n  //                             </div> */}\n  //             </div>\n  //           </div>\n  //         </section>\n  //       </div>\n  //     </>\n  //   );\n};\n\nexport default OpenNow;\n","import React, { useEffect, useState } from \"react\";\nimport \"./projects.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport GetApprovedTok from \"../../hooks/getPooldata\";\nimport { BusdInAllTier, TotalMaxCap, TokenPriceBUSD, TotalBusdalltier } from \"../../hooks/tierInfoFetchers\";\nconst ClosedNow = ({ item }) => {\n  // console.log(\"dataa date start\", item);\n  const dark = useSelector((state) => state.UserReducer.theme);\n  // const { getApproved } = GetApprovedTok();\n  const [numberOfIdoTokensToSell, setNumberOfIdoTokensToSell] = useState(0);\n  const [totalBusdAllTier, setTotalBusdAllTier] = useState(0);\n  const [TokenPriceBusd, setTokenPriceBusd] = useState(0);\n  const [Totalalltierprice, setTotalalltierprice] = useState(0);\n  const { Maxcap } = TotalMaxCap()\n  const { TotalBusdInAllTier } = BusdInAllTier()\n  const { Price } = TokenPriceBUSD()\n  const { Altierbusd } = TotalBusdalltier()\n  const { account } = useWeb3React();\n  let totalpercentage = totalBusdAllTier / numberOfIdoTokensToSell * 100\n\n  // useEffect(async () => {\n  //   // console.log(\"called\");\n  //   const res = await getApproved();\n  //   // console.log(\"res\", res);\n  // }, []);\n\n  useEffect(async () => {\n    if (account && item) {\n      const res2 = await TotalBusdInAllTier(item.contractAddressDeployed)\n      const res3 = await Maxcap(item.contractAddressDeployed);\n      const res4 = await Price(item.contractAddressDeployed);\n      const res5 = await Altierbusd(item.contractAddressDeployed);\n      setTotalBusdAllTier(res2 / 10 ** 18)\n      setNumberOfIdoTokensToSell(res3)\n      setTokenPriceBusd(res4 / 10 ** 18)\n      setTotalalltierprice(res5 / 10 ** 18)\n      // console.log(\"Total BUSD in all Tier\",res2)\n      // console.log(\"Total MAXCAP in all Tier\",res3)\n      // console.log(\"Total All Tier Prixce we have here is \",res5)\n    }\n  }, [account, item]);\n  return (\n      <div className={dark}>\n        <Link to={`/projectdetail/${item?._id}`}>\n          <div className=\"inner-card\">\n            <div className=\"row\">\n              <div className=\"col-9 text-left p-0\">\n                <ul className=\"list-inline d-flex align-items-center\">\n                  <li className=\"list-inline-item\">  \n                    <div className=\"inner-img\">\n                      <img\n                        src=\"\\projectstarter\\project-card\\project-logo.png\"\n                        className=\"img-fluid\"\n                        alt=\"\"\n                      />\n                    </div>\n                  </li>\n                  <li className=\"list-inline-item\">\n                    <div className=\"inner-img\">\n                      <h5>{item?.projectName}</h5>\n                      {/* <p className=\"grey\">\n                        <small>1 YAY = 12.23131 PSR</small>\n                      </p> */}\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-3 text-right p-0\">\n                <div className=\"inner-btn\">\n                  <button className=\"project-coming\">\n                   Closed\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"progress-div\">\n              <div className=\"row mb-1 mt-3\">\n                <div className=\"col-11 p-0\">\n                  <h5 className=\"grey\">Pool Progress</h5>\n                </div>\n                <div className=\"col-1 p-0\">\n                  <div className=\"inner-btn\">\n                  <p className=\"grey font-weight-bold \" >{\n                          totalpercentage ?\n                            totalpercentage.toFixed(2)\n                            :\n                            0\n\n                        }%</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-12 p-0\">\n                  <div className=\"progress\">\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      style={{ width: `${totalpercentage}%` }}\n                      aria-valuenow=\"70\"\n                      aria-valuemin=\"20\"\n                      aria-valuemax=\"100\"\n                    ></div>\n                  </div>\n                  <h5 className=\"common mt-1\">BUSD \n                  {totalBusdAllTier} / ${numberOfIdoTokensToSell && TokenPriceBusd ? numberOfIdoTokensToSell * TokenPriceBusd : 0}\n                  </h5>\n                </div>\n              </div>\n            </div>\n            <div className=\"brdr\"></div>\n            <div className=\"ptb10 inner-small-cards\">\n              <div className=\"row\">\n                {/* <div className=\"col-sm-4 col-6 p-0\">\n                            <ul className='list-inline small-cards-ul d-flex align-items-center'>\n                                <li className='list-inline-item'>\n                                    <img src={dark === 'dark' ? \"/projectstarter/project-card/perticipants-icon-dark.svg\" : \"/projectstarter/project-card/perticipants-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n                                </li>\n                                <div className=\"list-inline-item small-cards-ul-li2\">\n                                    <p>Participants</p>\n                                    <p>20,250</p>\n                                </div>\n                            </ul>\n                        </div> */}\n                <div className=\"col-sm-6 col-6 p-0\">\n                  <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                    <li className=\"list-inline-item\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"/projectstarter/project-card/start-date-icon-dark.svg\"\n                            : \"/projectstarter/project-card/start-date-icon.svg\"\n                        }\n                        className=\"img-fluid smallLogo\"\n                        alt=\"\"\n                      />\n                    </li>\n                    <div className=\"list-inline-item small-cards-ul-li2\">\n                      <p>End-Date</p>\n                      <p>{item?.preSaleEndDateAndTime.slice(0, 10)}</p>\n                    </div>\n                  </ul>\n                </div>\n                <div className=\"col-sm-6 col-6 p-0\">\n                  <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                    <li className=\"list-inline-item\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"/projectstarter/project-card/token-price-icon-dark.svg\"\n                            : \"/projectstarter/project-card/token-price-icon.svg\"\n                        }\n                        className=\"img-fluid smallLogo\"\n                        alt=\"\"\n                      />\n                    </li>\n                    <div className=\"list-inline-item small-cards-ul-li2\">\n                      <p>Token Price</p>\n                      <p>{item?.tokenPriceInBNB}</p>\n                    </div>\n                  </ul>\n                </div>\n\n                {/* <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n                  <div className=\"bgb d-md-block d-none\"></div>\n                  <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                    <li className=\"list-inline-item\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"/projectstarter/project-card/access-icon-dark.svg\"\n                            : \"/projectstarter/project-card/access-icon.svg\"\n                        }\n                        className=\"img-fluid smallLogo\"\n                        alt=\"\"\n                      />\n                    </li>\n                    <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                      <p>Access</p>\n                      <p>Private</p>\n                    </div>\n                  </ul>\n                </div> */}\n                <div className=\"col-sm-4 mt-sm-4 mt-0 col-6 p-0\">\n                  <div className=\"bgb d-md-block d-none\"></div>\n                  <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                    <li className=\"list-inline-item\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"/projectstarter/project-card/token-sold-icon-dark.svg\"\n                            : \"/projectstarter/project-card/token-sold-icon.svg\"\n                        }\n                        className=\"img-fluid smallLogo\"\n                        alt=\"\"\n                      />\n                    </li>\n                    <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                      <p>Token Sold</p>\n                      <p>{Totalalltierprice && \n                      Totalalltierprice ?\n                      Totalalltierprice\n                      :\n                      0\n                      }</p>\n                    </div>\n                  </ul>\n                </div>\n                {/* <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n                  <div className=\"bgb d-md-block d-none\"></div>\n                  <ul className=\"list-inline small-cards-ul d-flex align-items-center\">\n                    <li className=\"list-inline-item\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"/projectstarter/project-card/token-distribution-icon-dark.svg\"\n                            : \"/projectstarter/project-card/token-distribution-icon.svg\"\n                        }\n                        className=\" smallLogo\"\n                        alt=\"\"\n                      />\n                    </li>\n                    <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n                      <p className=\" text-truncate w-75\">\n                        Token Distribution\n                      </p>\n                      <p>20</p>\n                    </div>\n                  </ul>\n                </div> */}\n              </div>\n            </div>\n          </div>\n    \n        </Link>\n      \n      </div>\n  );\n\n  //   return (\n  //     <>\n  //       <div className={dark}>\n  //         <section className=\"main-coming main-open\">\n  //           <div className=\"container\">\n  //             <div className=\"row\">\n  //               <div className=\"col-sm-12\">\n  //                 <div className=\"inner-content\">\n  //                   <h2>\n  //                     <strong>Projects Coming Soon</strong>{\" \"}\n  //                   </h2>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //             <div className=\"row ptb\">\n  //               {/* {commingData} */}\n\n  //               {/* <div className=\"col-lg-6\">\n  //                                 <div className={dark}>\n  //                                     <div className=\"inner-card\">\n  //                                         <div className=\"row\">\n  //                                             <div className=\"col-9 text-left p-0\">\n  //                                                 <ul className=\"list-inline d-flex align-items-center\">\n  //                                                     <li className=\"list-inline-item \">\n  //                                                         <div className=\"inner-img\">\n  //                                                             <img src=\"\\projectstarter\\project-card\\project-logo.png\" className=\"img-fluid\" alt=\"\" />\n  //                                                         </div>\n  //                                                     </li>\n  //                                                     <li className=\"list-inline-item\">\n  //                                                         <div className=\"inner-img\">\n  //                                                             <h5>Yay Games</h5>\n  //                                                             <p className=\"grey\"><small>1 YAY = 12.23131 PSR</small></p>\n  //                                                         </div>\n  //                                                     </li>\n  //                                                 </ul>\n  //                                             </div>\n  //                                             <div className=\"col-3 text-right p-0\">\n  //                                                 <div className=\"inner-btn\">\n  //                                                     <button className=\"project-closed\">Open</button>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                         <div className=\"progress-div\">\n  //                                             <div className=\"row mb-1 mt-3\">\n  //                                                 <div className=\"col-11 p-0\">\n  //                                                     <h5 className=\"grey\">Pool Progress</h5>\n  //                                                 </div>\n  //                                                 <div className=\"col-1 p-0\">\n  //                                                     <div className=\"inner-btn\">\n  //                                                         <p className=\"grey\">50%</p>\n  //                                                     </div>\n  //                                                 </div>\n  //                                             </div>\n  //                                             <div className=\"row\">\n  //                                                 <div className=\"col-sm-12 p-0\">\n  //                                                     <div className=\"progress\">\n  //                                                         <div className=\"progress-bar\" role=\"progressbar\" style={{ width: \"30%\" }} aria-valuenow=\"70\"\n  //                                                             aria-valuemin=\"20\" aria-valuemax=\"100\">\n\n  //                                                         </div>\n  //                                                     </div>\n  //                                                     <h5 className=\"common mt-1\">BUSD 500,000/$1,000,000</h5>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                         <div className=\"brdr\"></div>\n  //                                         <div className=\"ptb10 inner-small-cards\">\n  //                                             <div className=\"row\">\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/perticipants-icon-dark.svg\" : \"/projectstarter/project-card/perticipants-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Participants</p>\n  //                                                             <p>20,250</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/start-date-icon-dark.svg\" : \"/projectstarter/project-card/start-date-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Start-date</p>\n  //                                                             <p>17-Dec-2021</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 col-6 p-0\">\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-price-icon-dark.svg\" : \"/projectstarter/project-card/token-price-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2\">\n  //                                                             <p>Token Price</p>\n  //                                                             <p>$0.30</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n\n  //                                                 <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/access-icon-dark.svg\" : \"/projectstarter/project-card/access-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p>Access</p>\n  //                                                             <p>Private</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4 mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-sold-icon-dark.svg\" : \"/projectstarter/project-card/token-sold-icon.svg\"} className='img-fluid smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p>Token Sold</p>\n  //                                                             <p>1M</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                                 <div className=\"col-sm-4  mt-sm-4 mt-0 col-6 p-0\">\n  //                                                     <div className='bgb d-md-block d-none'></div>\n  //                                                     <ul className='list-inline small-cards-ul d-flex align-items-center'>\n  //                                                         <li className='list-inline-item'>\n  //                                                             <img src={dark === 'dark' ? \"/projectstarter/project-card/token-distribution-icon-dark.svg\" : \"/projectstarter/project-card/token-distribution-icon.svg\"} className=' smallLogo' alt=\"\" />\n  //                                                         </li>\n  //                                                         <div className=\"list-inline-item small-cards-ul-li2 small-cards-ul-li2-2\">\n  //                                                             <p className=' text-truncate w-75'>Token Distribution</p>\n  //                                                             <p>20</p>\n  //                                                         </div>\n  //                                                     </ul>\n  //                                                 </div>\n  //                                             </div>\n  //                                         </div>\n  //                                     </div>\n  //                                 </div>\n  //                             </div> */}\n  //             </div>\n  //           </div>\n  //         </section>\n  //       </div>\n  //     </>\n  //   );\n};\n\nexport default ClosedNow;\n","\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './projects.scss';\nimport Navbar from '../landing/header/Navbar.js';\nimport Footer from '../landing/footer/Footer.js';\nimport Faqs from '../landing/faqs/Faqs.js'\nimport axios from 'axios';\nimport { API_URL } from '../../utils/ApiURL';\nimport { toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector } from 'react-redux'\nimport ComingSoon from './Comingsoon';\nimport OpenNow from './Opennow';\nimport ClosedNow from './Closednow';\n\nconst Projects = () => {\n    const dark = useSelector(state => state.UserReducer.theme);\n    const [opens, setOpens] = useState(false);\n\n    const [openProject, setOpenProject] = useState([]);\n    const [closedProject, setClosedProject] = useState([]);\n    const [upcommingProject, setUpcommingProject] = useState([]);\n    const GetOpenProject = async () => {\n        try {\n            setOpens(true)\n            axios.post(`${API_URL}/v1/project/getAllOpenProject`)\n                .then((response) => {\n                    setOpens(false)\n                    setOpenProject(response.data.data);\n                    // toast.success('Project Added Successfully, Your Project will be Displayed Once admin approve', {\n                    //     position: \"top-right\",\n                    //     autoClose: 2000,\n                    // });\n                    // history.push(\"/\");\n                    // console.log(\"success response\", response)\n                }).catch((err) => {\n                    setOpens(false)\n                    toast.warning('Error While Adding Project', {\n                        position: \"top-right\",\n                        autoClose: 2000,\n                    });\n                    // console.log(\"error responce\", err)\n                })\n        }\n        catch (e) {\n            console.log(e)\n        }\n    };\n\n    const GetcloseProject = async () => {\n        try {\n            setOpens(true)\n            axios.post(`${API_URL}/v1/project/getAllClosedProject`)\n                .then((response) => {\n                    setOpens(false);\n                    setClosedProject(response.data.data);\n                    // toast.success('Project Added Successfully, Your Project will be Displayed Once admin approve', {\n                    //     position: \"top-right\",\n                    //     autoClose: 2000,\n                    // });\n                    // history.push(\"/\");\n                    // console.log(\"success response\", response)\n                }).catch((err) => {\n                    setOpens(false)\n                    toast.warning('Error While Adding Project', {\n                        position: \"top-right\",\n                        autoClose: 2000,\n                    });\n                    // console.log(\"error responce\", err)\n                })\n        }\n        catch (e) {\n            console.log(e)\n        }\n    };\n\n    // console.log(\"data in projects:::::\",upcommingProject)\n\n    const GetupcommingProject = async () => {\n        try {\n            setOpens(true)\n            axios.post(`${API_URL}/v1/project/getAllComingSoonPresaleProject`)\n                .then((response) => {\n                    setOpens(false)\n                    // console.log(\"dataaaa\",response.data.data)\n                    setUpcommingProject(response.data.data)\n                }).catch((err) => {\n                    setOpens(false)\n                    toast.warning('Error While Adding Project', {\n                        position: \"top-right\",\n                        autoClose: 2000,\n                    });\n                    // console.log(\"error responce\", err)\n                })\n        }\n        catch (e) {\n            console.log(e)\n        }\n    };\n    useEffect(() => {\n        GetOpenProject()\n        GetcloseProject()\n        GetupcommingProject()\n    }, [])\n    return (\n        <>\n            <div className={dark}>\n                <section className='projects-main '>\n                    <Navbar />\n                    {/* <OpenNow upcommingProject={openProject} />\n                    <ClosedNow upcommingProject={closedProject} /> */}\n                    <div className={dark}>\n                        <section className=\"main-coming main-open\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12\">\n                                        <div className=\"inner-content\">\n                                            <h2 className='inner_project_text'>\n                                                Open Now\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row ptb\">\n                                    {/* <div className=\"col-sm-12\"> */}\n                                        {/* <div className=\"row\"> */}\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"upcoming_lock\"><img src=\"./coming-soon-placeholder.png\" alt=\"img\" className='img-fluid'/></div>\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"upcoming_lock\"><img src=\"./coming-soon-placeholder.png\" alt=\"img\" className='img-fluid'/></div>\n                                        </div>\n                                            {openProject?.map((item, index) => {\n                                                return (\n                                                    // <div className=\"row\">\n                                                    <div className=\"col-sm-6\">\n                                                        <div key={index}>\n                                                            <OpenNow item={item} />\n                                                        </div>\n                                                    </div>\n                                                    // </div>\n                                                )\n                                            })}\n                                        {/* </div> */}\n                                    {/* </div> */}\n                                </div>\n                            </div>\n                        </section>\n\n                        <section className=\"main-coming main-open\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12\">\n                                        <div className=\"inner-content\">\n                                            <h2 className='inner_project_text'>\n                                               Projects Closed\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row ptb\">\n                                    {/* <div className=\"col-sm-12\">\n                                        <div className=\"row\"> */}\n                                       <div className=\"col-sm-6\">\n                                        <div className=\"upcoming_lock\"><img src=\"./coming-soon-placeholder.png\" alt=\"img\" className='img-fluid'/></div>\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"upcoming_lock\"><img src=\"./coming-soon-placeholder.png\" alt=\"img\" className='img-fluid'/></div>\n                                        </div>\n                                            {closedProject?.map((item, index) => {\n                                                return (\n\n                                                    <div className=\"col-sm-6\">\n                                                        <div key={index}>\n                                                            <ClosedNow item={item} />\n                                                        </div>\n                                                    </div>\n\n                                                )\n                                            })}\n                                        {/* </div>\n                                    </div> */}\n                                </div>\n                            </div>\n                        </section>\n\n                        <section className=\"main-coming main-open\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12\">\n                                        <div className=\"inner-content\">\n                                            <h2 className='inner_project_text'>\n                                                Projects Coming Soon\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"row ptb\">\n                                    {/* <div className=\"col-sm-12\">\n                                        <div className=\"row\">\n                                           \n                                        </div> */}\n\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"upcoming_lock\"><img src=\"./coming-soon-placeholder.png\" alt=\"img\" className='img-fluid'/></div>\n                                        </div>\n                                        <div className=\"col-sm-6\">\n                                        <div className=\"upcoming_lock\"><img src=\"./coming-soon-placeholder.png\" alt=\"img\" className='img-fluid'/></div>\n                                        </div>\n                                        {upcommingProject?.map((item, index) => {\n                                            return (\n                                                <div className=\"col-sm-6\">\n                                                <div key={index}>\n                                                    <ComingSoon item={item} />\n                                                </div>\n                                                </div>\n                                            )\n                                        })}\n                                    {/* </div> */}\n                                </div>\n                            </div>\n                        </section>\n\n                    </div>\n                    {/* <section className='counter-no main-open'>\n                    <div className=\"container\">\n                        <div className=\"row \">\n                            <div className=\"col-12\">\n                                <div class=\"btn-toolbar d-flex justify-content-center\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                                    <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\n                                        <button type=\"button\" class=\"btn btn-primary\">1</button>\n                                        <button type=\"button\" class=\"btn btn-primary\">2</button>\n                                        <button type=\"button\" class=\"btn btn-primary\">3</button>\n                                        <button type=\"button\" class=\"btn btn-primary\">4</button>\n                                    </div>\n                                    <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"Second group\">\n                                        <button type=\"button\" class=\"btn btn-primary\">5</button>\n                                        <button type=\"button\" class=\"btn btn-primary\">6</button>\n                                        <button type=\"button\" class=\"btn btn-primary\">...</button>\n                                    </div>\n                                    <div class=\"btn-group\" role=\"group\" aria-label=\"Third group\">\n                                        <button type=\"button\" class=\"btn btn-primary\">⏩</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section> */}\n                    {/* <section className=\"last-tiles\">\n                <div className=\"container\">\n\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <div className=\"inner-card\">\n                                <ul className=\"list-inline\">\n                                    <li className=\"list-inline-item\">\n                                        <div className=\"inner-check\">\n                                            <img src=\"\\projectstarter\\check-icon.svg\" className=\"img-fluid\" alt=\"\" />\n                                        </div>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <div className=\"inner-check\">\n                                            <h6>Nam libero tempore</h6>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <p className=\"grey\"><small>Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus  omnis voluptas assumenda est.</small></p>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <div className=\"inner-card\">\n                                <ul className=\"list-inline\">\n                                    <li className=\"list-inline-item\">\n                                        <div className=\"inner-check\">\n                                            <img src=\"\\projectstarter\\check-icon.svg\" className=\"img-fluid\" alt=\"\" />\n                                        </div>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <div className=\"inner-check\">\n                                            <h6>Nam libero tempore</h6>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <p className=\"grey\"><small>Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus  omnis voluptas assumenda est.</small></p>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <div className=\"inner-card\">\n                                <ul className=\"list-inline\">\n                                    <li className=\"list-inline-item\">\n                                        <div className=\"inner-check\">\n                                            <img src=\"\\projectstarter\\check-icon.svg\" className=\"img-fluid\" alt=\"\" />\n                                        </div>\n                                    </li>\n                                    <li className=\"list-inline-item\">\n                                        <div className=\"inner-check\">\n                                            <h6>Nam libero tempore</h6>\n                                        </div>\n                                    </li>\n                                </ul>\n                                <p className=\"grey\"><small>Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus  omnis voluptas assumenda est.</small></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section> */}\n                </section>\n            </div>\n            <Footer />\n        </>\n    )\n}\n\nexport default Projects;\n","import React from 'react';\n// import logo from './logo.svg';\nimport '../../App.scss';\nimport Banner from './main-banner/Banner.js';\n// import Navbar from './header/Navbar.js';\n// import Community from './community/Community.js';\n\n\nfunction Rounde() {\n  return (\n    <>\n      \n       <Banner/>\n       {/* <About/>\n       <Features/>\n       <Roadmap/>\n       <MeatTeam/>\n       <TrustedPartner/>\n       <Faqs/>\n       <Footer/> */}\n    </>\n  );\n}\n\nexport default Rounde;","import { useCallback } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWeb3 from \"./useWeb3\";\nimport environment from \"../utils/Environment\";\nimport { getContractStake } from '../utils/contractHelpers.js'\n\nexport const ClaimWithdrawal = () => {\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const contractAddress = environment.contractAddress;\n\n  const contract = getContractStake(contractAddress, web3)\n  const Withdraw = useCallback(\n    async (amount) => {\n      const details = await contract.methods\n        .claimStaking(amount * 1000000000)\n        .send({ from: account })\n        .on('transactionHash', (tx) => { return tx.transactionHash })\n        .catch((err)=>{\n          return err;\n        });\n      return details;\n    },\n    [account, contract]\n  );\n  return { Withdraw: Withdraw };\n};\n\nexport default ClaimWithdrawal;\n","import React, { useState, useEffect } from \"react\";\nimport Faqs from \"../landing/faqs/Faqs\";\nimport Footer from \"../landing/footer/Footer\";\nimport Navbar from \"../landing/header/Navbar\";\nimport useWeb3 from \"../../hooks/useWeb3\";\nimport { useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\n// import { TokenContract, getContractStake } from \"../../utils/contractHelpers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"./staking.scss\";\n// import { useHistory } from 'react-router-dom';\nimport { Backdrop } from \"@material-ui/core\";\nimport ClaimWithdrawal from \"../../hooks/claimStaking\";\nimport { TotalSupply, GetTotalStakersha } from \"../../hooks/tierInfoFetchers\";\nimport {\n    UseTokenBalance,\n    CheckAllowance,\n    useStake,\n    useUnStake,\n    useApprove,\n    StakedAmount,\n    UnStakedAmount,\n    StakedAmountReward\n} from \"../../hooks/dataFetcher\";\n// import useEthBalance from \"../../utils/WalletBalance\";\n// import { getBalanceNumber } from \"../../utils/formatBalance\";\nimport { useSelector } from \"react-redux\";\nfunction Staking() {\n    const web3 = useWeb3()\n    const { account } = useWeb3React();\n    const dark = useSelector((state) => state.UserReducer.theme);\n    const [opens, setOpens] = useState(false);\n    const balance = UseTokenBalance();\n    const totalsupply = TotalSupply()\n    const totalstakers = GetTotalStakersha()\n    const totalStaked = StakedAmount();\n    const totalUnStaked = UnStakedAmount()\n    const [withdrawIndex, setWithdrawIndex] = useState(0);\n    const { Withdraw } = ClaimWithdrawal();\n    const [txstatus, setTxstatus] = useState(false);\n    const [stackbalance, setstackbalance] = useState(\"\");\n    // console.log(\"stack \",stackbalance)\n    const [unstackbalance, setunstackbalance] = useState(\"\");\n    console.log(\"unstaked balnace\", unstackbalance)\n    // console.log(\"unstacked balance\",unstackbalance)\n    const [checkbox1, setCheckbox1] = useState(false);\n    const { ApproveTokens } = useApprove();\n    const { Stake } = useStake(stackbalance);\n    const { UnStakeToken } = useUnStake(unstackbalance);\n    // const { UnStakeUsdcToken } = useUnStake(input12)\n    const [index, setindex] = useState(0);\n    const [indexs, setindexs] = useState(0);\n    // const [status, setStatus] = useState(null);\n    const reward = StakedAmountReward()\n    console.log(\"reward\", reward)\n    // const call = useSelector((state) => state.UserReducer.status);\n    const [withdrawTerms, setWithdrawTerms] = useState(false);\n    const [userbalance, setUserBalance] = useState(0)\n    const allowance = CheckAllowance();\n    console.log(\"allowance\", allowance)\n    let account1 = account\n    useEffect(() => {\n        // if (account) {\n        // try {\n        const getBalance = async () => {\n            console.log('in effect::::', account1)\n            let userbalance1 = await web3.eth.getBalance(account1);\n            setUserBalance(parseInt(userbalance1) / 10 ** 18);\n        }\n        getBalance()\n    }, [account1]);\n\n    const maxstake = () => {\n        setstackbalance(balance)\n    }\n    const maxunstake = () => {\n        console.log(\"open unstacked value\")\n        setunstackbalance(totalStaked)\n    }\n    const handleChangeCHeckbox = (e) => {\n        const value =\n            e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n        setCheckbox1(value);\n    };\n\n    const toastmsgs = () => {\n        toast.error('Please Enter Stake Value First', {\n            position: \"top-right\",\n            autoClose: 5000,\n        });\n        //   console.log('error')\n    }\n    const toastmsgss = () => {\n        toast.error('Please Enter UnStake Value First', {\n            position: \"top-right\",\n            autoClose: 5000,\n        });\n        //   console.log('error')\n    }\n\n\n    // console.log(\"userbalance\",balanc)\n\n    const Stake_token = useCallback(async () => {\n        try {\n            // setShowLoader(true)\n            setOpens(true);\n            const tx = await Stake();\n            if (tx.status) {\n                await setTxstatus(tx.status);\n                await setstackbalance(\"\");\n                setOpens(false);\n                window.location.reload();\n                // await getStakedbalance();\n                // setShowLoader(false)\n                // setInputBusd('')\n                // close()\n            }\n        } catch (err) {\n            setOpens(false);\n            // setShowLoader(false)\n            console.log(\"err22\", err);\n        }\n    });\n    const histroryredirect = () => {\n        window.location.reload();\n    }\n\n    const Approve_Fun = async () => {\n        if (account) {\n            try {\n                setOpens(true);\n                const tx = await ApproveTokens(account);\n                if (tx.status) {\n                    setOpens(false);\n                }\n            } catch (err) {\n                setOpens(false);\n                console.log(\"error in approve ::::\", err);\n                return err;\n            }\n        } else {\n        }\n    };\n\n    const UnStake_Token = useCallback(async () => {\n        try {\n            // setShowLoader(true)\n            setOpens(true);\n            const tx = await UnStakeToken();\n            if (tx.status) {\n                await setTxstatus(tx.status);\n                await setunstackbalance(\"\");\n                setOpens(false);\n                window.location.reload();\n                // await getUnstakedBalance();\n                // setShowLoader(false)\n                // setInputBusd('')\n                // close()\n            }\n        } catch (err) {\n            setOpens(false);\n            // setShowLoader(false)\n            console.log(\"err22\", err);\n        }\n    });\n\n\n    const handleInput = (e) => {\n        const input = e.target.value;\n        setstackbalance(input);\n    };\n    // console.log(\"stack input\",stackbalance)\n    const handleInputs = (e) => {\n        console.log(\"unstaked amount we have\", e.target.value)\n        const input = e.target.value;\n        setunstackbalance(input);\n    };\n\n    const validateWithdraw = () => {\n        if (account && totalUnStaked > 0 && withdrawTerms) {\n            setWithdrawIndex(1);\n        }\n    };\n\n    const userWithdrawal = async () => {\n        setOpens(true);\n        const res = await Withdraw(totalUnStaked);\n        if (res?.code === 4001) {\n            await setOpens(false);\n        } else if (res?.code) {\n            await setOpens(false);\n        } else {\n            await setWithdrawIndex(2);\n            // await getStakedbalance();\n            await setOpens(false);\n        }\n        // setWithdrawIndex(2)\n    };\n    return (\n        <>\n            <Backdrop className=\"loader\" sx={{ color: \"#fff\" }} open={opens}>\n                <img\n                    src=\"/projectstarter/header/loader.svg\"\n                    alt=\"\"\n                    className=\"img-fluid shdshhgdss\"\n                />\n            </Backdrop>\n            <div className={dark}>\n                <section className=\"staking-main\">\n                    <Navbar />\n                    <div className=\"container\">\n                        <section className=\"top-linear-card\">\n                            <div className=\"row d-flex align-items-center\">\n                                <div className=\"col-xl-3 p-0 col-12 my-xl-0 my-3 left-vertical-card\">\n                                    <ul\n                                        class=\"nav nav-pills mb-3 stake-unstake-tabs\"\n                                        id=\"pills-tab\"\n                                        role=\"tablist\"\n                                    >\n                                        <li class=\"nav-item\">\n                                            <a\n                                                class=\"nav-link active\"\n                                                id=\"pills-home-tab\"\n                                                data-toggle=\"pill\"\n                                                href=\"#pills-home\"\n                                                role=\"tab\"\n                                                aria-controls=\"pills-home\"\n                                                aria-selected=\"true\"\n                                            >\n                                                Stake\n                                            </a>\n                                        </li>\n                                        <li class=\"nav-item\">\n                                            <a\n                                                class=\"nav-link\"\n                                                id=\"pills-profile-tab\"\n                                                data-toggle=\"pill\"\n                                                href=\"#pills-profile\"\n                                                role=\"tab\"\n                                                aria-controls=\"pills-profile\"\n                                                aria-selected=\"false\"\n                                            >\n                                                Unstake\n                                            </a>\n                                        </li>\n                                        <li class=\"nav-item\">\n                                            <a\n                                                class=\"nav-link\"\n                                                id=\"pills-contact-tab\"\n                                                data-toggle=\"pill\"\n                                                href=\"#pills-contact\"\n                                                role=\"tab\"\n                                                aria-controls=\"pills-contact\"\n                                                aria-selected=\"false\"\n                                            >\n                                                Withdraw\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div className=\"col-xl-9  col-12 my-xl-0 my-3\">\n                                    <div className=\"row sideBox\">\n                                        <div className=\"col-xl-4  col-12 my-xl-0 my-3\">\n                                            <ul className=\"list-inline brdrLeft d-flex align-items-center\">\n                                                <li className=\"list-inline-item\">\n                                                    <img\n                                                        src={\n                                                            dark === \"dark\"\n                                                                ? \"projectstarter/staking/1st-dark.svg\"\n                                                                : \"projectstarter/staking/1st.svg\"\n                                                        }\n                                                        alt=\"\"\n                                                    />\n                                                </li>\n                                                <li className=\"list-inline-item tl-text\">\n                                                    <p>Number of Stakers</p>\n                                                    <p>{totalstakers}</p>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        <div className=\"col-xl-4 col-12 my-xl-0 my-3\">\n                                            <ul className=\"list-inline brdrLeft d-flex align-items-center\">\n                                                <li className=\"list-inline-item\">\n                                                    <img\n                                                        src={\n                                                            dark === \"dark\"\n                                                                ? \"projectstarter/staking/2nd-dark.svg\"\n                                                                : \"projectstarter/staking/2nd.svg\"\n                                                        }\n                                                        alt=\"\"\n                                                    />\n                                                </li>\n                                                <li className=\"list-inline-item tl-text\">\n                                                    <p>Total PSR Staked</p>\n                                                    <p>{totalsupply}</p>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        <div className=\"col-xl-4 col-12 my-xl-0 my-3\">\n                                            <ul className=\"list-inline d-flex align-items-center\">\n                                                <li className=\"list-inline-item\">\n                                                    <img\n                                                        src={\n                                                            dark === \"dark\"\n                                                                ? \"projectstarter/staking/3rd-dark.svg\"\n                                                                : \"projectstarter/staking/3rd.svg\"\n                                                        }\n                                                        alt=\"\"\n                                                    />\n                                                </li>\n                                                <li className=\"list-inline-item tl-text\">\n                                                    <p>APY</p>\n                                                    <p>15.00%</p>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n\n                        <section className=\"left-vertical-card ptb\">\n                            <div className=\"row\">\n                                <div className=\"col-md-8  \">\n                                    <div class=\"tab-content\" id=\"pills-tabContent\">\n                                        <section\n                                            class=\"tab-pane fade show active stakeDetail ptb20\"\n                                            id=\"pills-home\"\n                                            role=\"tabpanel\"\n                                            aria-labelledby=\"pills-home-tab\"\n                                        >\n                                            <h2 className=\"text-center\">Stake your PSR</h2>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12 col-11 mx-auto\">\n                                                    <div class=\"table-responsive\">\n                                                        <table class=\"table\">\n                                                            <thead\n                                                                class=\"nav nav-pills mb-3\"\n                                                                id=\"pills-tab\"\n                                                                role=\"tablist\"\n                                                            >\n                                                                <tr className=\"mx-auto\">\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center  nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-checkout-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-checkout\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-checkout\"\n                                                                                aria-selected=\"true\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/checkpoint-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/checkpoint.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Checkpoint</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-atStake-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-atStake\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-atStake\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/amounttostake-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/amounttostake.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Amount to Stake</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-pAuthorization-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-pAuthorization\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-pAuthorization\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/preauthorization-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/preauthorization.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Pre-authorization</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-confirm-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-confirm\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-confirm\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/confirm-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/confirm.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Confirm</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-Confirmation-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-Confirmation\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-Confirmation\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/confirmation-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/confirmation.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Confirmation</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                </tr>\n                                                            </thead>\n                                                        </table>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"stack all-inner-tabs \">\n                                                {index === 0 && (\n                                                    <div className=\"checkpointstack checkouttab\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12\">\n                                                                <div className=\"text-center topDetailss\">\n                                                                    <h5>Checkpoints</h5>\n                                                                    <p>\n                                                                        The following conditions must be meet to\n                                                                        proceed\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"checkoutinnercard-headDiv mb-3\">\n                                                                        <h5>Connect with MetaMask</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked={account ? \"checked\" : false}\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        If not connected, click the \"Connect Wallet\"\n                                                                        button in the top right corner\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>PSR available to deposit</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            checked={balance > 0 ? \"checked\" : false}\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        Current Balance:{\" \"}\n                                                                        {balance ? balance : \"0.00\"}\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>BNB available in wallet</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked={\n                                                                                userbalance > 0 ? \"checked\" : false\n                                                                            }\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        BNB is required to pay transaction fees on\n                                                                        the Binance Smart Chain network. BNB\n                                                                        Balance:{\" \"}\n                                                                        {userbalance > 0 ? userbalance : \"0.00\"}BNB\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>Eligible to stake</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked=\"checked\"\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        You cannot stake if you have an active PSR\n                                                                        unstake/withdrawal request\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <div className=\"checkoutFooter\">\n                                                                    <input\n                                                                        type=\"checkbox\"\n                                                                        name=\"\"\n                                                                        checked={checkbox1}\n                                                                        class=\"styled-checkbox\"\n                                                                        id=\"styled-checkbox-1\"\n                                                                        onClick={handleChangeCHeckbox}\n                                                                    />\n                                                                    <p>\n                                                                        I have read the{\" \"}\n                                                                        <a href=\"\">Terms and Conditions</a>\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    {account &&\n                                                                        balance > 0 &&\n                                                                        userbalance > 0 &&\n                                                                        checkbox1 == true ? (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={() => {\n                                                                                    setindex(index + 1);\n                                                                                }}\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    ) : (\n                                                                        ''\n                                                                    )}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {index === 1 && (\n                                                    <div className=\"amountstack amountStakeDetail\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-8 col-12 mx-auto\">\n                                                                {allowance <= 0 || allowance < stackbalance ? (\n                                                                    <div className=\"approves-token text-center\">\n                                                                        <button\n                                                                            className=\"btn-common\"\n                                                                            onClick={Approve_Fun}\n                                                                        >\n                                                                            Approved Token\n                                                                        </button>\n                                                                        <h6>\n                                                                            For approving token click on aprroved\n                                                                            token button\n                                                                        </h6>\n                                                                    </div>\n                                                                ) : (\n                                                                    <div>\n                                                                        {\" \"}\n                                                                        {allowance > 0 && (\n                                                                            <div className=\"amount-div-main ptb\">\n                                                                                <div className=\"amount-div\">\n                                                                                    <p>Amount</p>\n                                                                                    <div className=\"inputMax\">\n                                                                                        <input\n                                                                                            placeholder=\"0\"\n                                                                                            value={stackbalance}\n                                                                                            onChange={handleInput}\n                                                                                            type=\"text\"\n                                                                                        />\n                                                                                        <button className=\"sjsjdddc\" onClick={maxstake}>Max</button>\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className=\"balanceOf\">\n                                                                                    <p>\n                                                                                        Balance: <span>{balance}</span>\n                                                                                    </p>\n                                                                                </div>\n                                                                            </div>\n                                                                        )}\n                                                                    </div>\n                                                                )}\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindex(index - 1);\n                                                                            }}\n                                                                        >\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    {stackbalance > 0 &&\n                                                                        stackbalance <= allowance &&\n                                                                        stackbalance <= balance ? (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={() => {\n                                                                                    setindex(index + 1);\n                                                                                }}\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    ) : (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={\n                                                                                    toastmsgs\n                                                                                }\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    )}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {index === 2 && (\n                                                    <div className=\"preauthorizationstack PAuthorizationDetail\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 mx-auto\">\n                                                                <div className=\"text-center pre-auth-method\">\n                                                                    <h3>Pre-authorization</h3>\n                                                                    <p className=\"pSpecial\">\n                                                                        Required transaction 1 of 2\n                                                                    </p>\n                                                                    <p>\n                                                                        In this step, you grant access to the\n                                                                        staking smart contract to accept PSR\n                                                                    </p>\n                                                                    <div class=\"progress progressBar\">\n                                                                        <div\n                                                                            class=\"progress-bar w-75\"\n                                                                            role=\"progressbar\"\n                                                                            aria-valuenow=\"75\"\n                                                                            aria-valuemin=\"0\"\n                                                                            aria-valuemax=\"100\"\n                                                                        ></div>\n                                                                    </div>\n                                                                    <h5>\n                                                                        Waiting for the transaction to complete\n                                                                    </h5>\n                                                                    <p>\n                                                                        Please wait for the transaction to confirm\n                                                                        before proceeding.\n                                                                    </p>\n                                                                    <a className=\"text-truncate\" href=\"\">\n                                                                        <p>\n                                                                            0xCAB13D0ABD22E698848A73DDBABDA8CD8C56288E\n                                                                        </p>\n                                                                    </a>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindex(index - 1);\n                                                                            }}\n                                                                        >\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindex(index + 1);\n                                                                            }}\n                                                                        >\n                                                                            Next\n                                                                        </button>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {index === 3 && (\n                                                    <div className=\"transactionstack confirmDetails\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 ptb20 mx-auto\">\n                                                                <div className=\"text-center confirm-method\">\n                                                                    <h3>Confirm</h3>\n                                                                    <p className=\"pSpecial\">\n                                                                        Required transaction 2 of 2\n                                                                    </p>\n                                                                    <p>\n                                                                        In this step, you grant access to the\n                                                                        staking smart contract to accept PSR\n                                                                    </p>\n                                                                </div>\n                                                                <div className=\"btn-commons text-center\">\n                                                                    <button\n                                                                        type=\"button\"\n                                                                        className=\"btn-common\"\n                                                                        onClick={Stake_token}\n                                                                    >\n                                                                        Confirm\n                                                                    </button>\n                                                                </div>\n                                                            </div>\n                                                            {/* <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindex(index - 1);\n                                                                            }}\n                                                                        >\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    {txstatus == true ? (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={histroryredirect}\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    ) : (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={() => {\n                                                                                    setindex(index + 1);\n                                                                                }}\n                                                                                disabled\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    )}\n                                                                </ul>\n                                                            </div> */}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {index === 4 && (\n                                                    <div className=\"congratulationstack confirmationDetail\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 ptb20 mx-auto\">\n                                                                <div className=\"text-center confirmation-method\">\n                                                                    <h3>Success</h3>\n                                                                    <p className=\"\">\n                                                                        Congratulations! Your tokens are now staked.\n                                                                        If desired, you may check Binance Smart\n                                                                        Chain to confirm the transaction.\n                                                                    </p>\n                                                                    <a className=\"text-truncate\" href=\"\">\n                                                                        <p>\n                                                                            0xCAB13D0ABD22E698848A73DDBABDA8CD8C56288E\n                                                                        </p>\n                                                                    </a>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </div>\n                                            <div\n                                                class=\"tab-content all-inner-tabs\"\n                                                id=\"pills-tabContent\"\n                                            >\n\n                                            </div>\n                                        </section>\n                                        <section\n                                            class=\"tab-pane fade stakeDetail ptb20\"\n                                            id=\"pills-profile\"\n                                            role=\"tabpanel\"\n                                            aria-labelledby=\"pills-profile-tab\"\n                                        >\n                                            <h2 className=\"text-center\">Unstake your PSR</h2>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12 col-11 mx-auto\">\n                                                    <div class=\"table-responsive\">\n                                                        <table class=\"table\">\n                                                            <thead\n                                                                class=\"nav nav-pills mb-3\"\n                                                                id=\"pills-tab\"\n                                                                role=\"tablist\"\n                                                            >\n                                                                <tr className=\"mx-auto\">\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center  nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link active\"\n                                                                                id=\"pills-warning-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-warning\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-warning\"\n                                                                                aria-selected=\"true\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/unstake/warning-dark.svg\"\n                                                                                            : \"projectstarter/staking/unstake/warning.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Warning</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-unstakecheckout-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-unstakecheckout\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-unstakecheckout\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/checkpoint-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/checkpoint.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Checkpoint</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-unstakeatStake-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-unstakeatStake\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-unstakeatStake\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/amounttostake-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/amounttostake.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Amount to Unstake</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center nav-item\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-initialize-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-initialize\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-initialize\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/withdraw/initWithdraw-dark.svg\"\n                                                                                            : \"projectstarter/staking/unstake/initUnstake-copy.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Initialize Unstake</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center\">\n                                                                            <a\n                                                                                class=\"nav-link\"\n                                                                                id=\"pills-unstakeConfirmation-tab\"\n                                                                                data-toggle=\"pill\"\n                                                                                href=\"#pills-unstakeConfirmation\"\n                                                                                role=\"tab\"\n                                                                                aria-controls=\"pills-unstakeConfirmation\"\n                                                                                aria-selected=\"false\"\n                                                                            >\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/confirmation-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/confirmation.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Confirmation</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                </tr>\n                                                            </thead>\n                                                        </table>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"mainunstack all-inner-tabs\">\n                                                {indexs === 0 && (\n                                                    <div className=\"warningsss confirmDetails\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 ptb20 mx-auto\">\n                                                                <div className=\"text-center confirm-method\">\n                                                                    <img\n                                                                        src=\"projectstarter/project-card/warning.png\"\n                                                                        className=\"img-fluid\"\n                                                                        alt=\"\"\n                                                                    />\n                                                                    <h3 className=\"common-color mt-3\">Staking Lock Period</h3>\n                                                                    <p className=\"my-4\">\n                                                                        After Unstaking, you must wait 7 days before\n                                                                        you can withdraw your PSR and rewards. The\n                                                                        amount of tokens you Unstake will not count\n                                                                        towards your tier level for upcoming\n                                                                        Projects.\n                                                                    </p>\n                                                                    <div className=\"sbvvdsdsds\">\n                                                                        <div className=\"SHBASHJBASJBD\">\n                                                                            <div className=\"hasbddaasd\">\n                                                                                <h4>Staked less than 2 weeks</h4>\n                                                                            </div>\n                                                                            <div className=\"asjandajsd\">\n                                                                                <h4>25.00 %</h4>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"SHBASHJBASJBD\">\n                                                                            <div className=\"hasbddaasd\">\n                                                                                <h4>Staked less than 4 weeks</h4>\n                                                                            </div>\n                                                                            <div className=\"asjandajsd\">\n                                                                                <h4>15.00 %</h4>\n                                                                            </div>\n                                                                        </div>\n\n                                                                        <div className=\"SHBASHJBASJBD\">\n                                                                            <div className=\"hasbddaasd\">\n                                                                                <h4>Staked less than 6 weeks</h4>\n                                                                            </div>\n                                                                            <div className=\"asjandajsd\">\n                                                                                <h4>10.00 %</h4>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"SHBASHJBASJBD\">\n                                                                            <div className=\"hasbddaasd\">\n                                                                                <h4>Staked less than 8 weeks</h4>\n                                                                            </div>\n                                                                            <div className=\"asjandajsd\">\n                                                                                <h4>5.00 %</h4>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"SHBASHJBASJBD\">\n                                                                            <div className=\"hasbddaasd\">\n                                                                                <h4>Staked 8 weeks or more</h4>\n                                                                            </div>\n                                                                            <div className=\"asjandajsd\">\n                                                                                <h4>0.00 %</h4>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindexs(indexs + 1);\n                                                                            }}\n                                                                        >\n                                                                            Next\n                                                                        </button>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {indexs === 1 && (\n                                                    <div className=\"checkpoint checkouttab\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12\">\n                                                                <div className=\"text-center topDetailss\">\n                                                                    <h5>Checkpoints</h5>\n                                                                    <p>\n                                                                        The following conditions must be met to\n                                                                        proceed\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"checkoutinnercard-headDiv mb-3\">\n                                                                        <h5>Connect with MetaMask</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked={account ? \"checked\" : false}\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        If not connected, click the \"Connect Wallet\"\n                                                                        button in the top right corner\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>PSR available to deposit</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked={balance > 0 ? \"checked\" : false}\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        Current Balance:{\" \"}\n                                                                        {balance ? balance : \"0.00\"}\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>BNB available in wallet</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked={\n                                                                                userbalance > 0 ? \"checked\" : false\n                                                                            }\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        BNB is required to pay transaction fees on\n                                                                        the Binance Smart Chain network. BNB\n                                                                        Balance:{\" \"}\n                                                                        {userbalance > 0 ? userbalance : \"0.00\"}BNB\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>Eligible to stake</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked=\"checked\"\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        You cannot stake if you have an active\n                                                                        BSCPAD unstake/withdrawal request\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <div className=\"checkoutFooter\">\n                                                                    <input\n                                                                        type=\"checkbox\"\n                                                                        name=\"\"\n                                                                        checked={checkbox1}\n                                                                        class=\"styled-checkbox\"\n                                                                        onClick={handleChangeCHeckbox}\n                                                                        id=\"styled-checkbox-1\"\n                                                                    />\n                                                                    <p>\n                                                                        I have read the{\" \"}\n                                                                        <a href=\"\">Terms and Conditions</a>\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindexs(indexs - 1);\n                                                                            }}\n                                                                        >\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    {account &&\n                                                                        balance > 0 &&\n                                                                        userbalance > 0 &&\n                                                                        checkbox1 == true ? (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={() => {\n                                                                                    setindexs(indexs + 1);\n                                                                                }}\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    ) : (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={() => {\n                                                                                    setindexs(indexs + 1);\n                                                                                }}\n                                                                                disabled\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    )}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {indexs === 2 && (\n                                                    <div className=\"amountunstack amountStakeDetail\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-8 col-12 mx-auto\">\n                                                                <div className=\"amount-div-main ptb\">\n                                                                    <div className=\"amount-div\">\n                                                                        <p>Amount</p>\n                                                                        <div className=\"inputMax\">\n                                                                            <input\n                                                                                placeholder=\"0\"\n                                                                                value={unstackbalance}\n                                                                                onChange={handleInputs}\n                                                                                type=\"text\"\n                                                                            />\n                                                                            <button className=\"sjsjdddc\" onClick={maxunstake}>Max</button>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"balanceOf\">\n                                                                        <p>\n                                                                            Balance: <span>{totalStaked}</span>\n                                                                        </p>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindexs(indexs - 1);\n                                                                            }}\n                                                                        >\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    {unstackbalance <= parseInt(totalStaked) &&\n                                                                        unstackbalance > 0 ? (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={() => {\n                                                                                    setindexs(indexs + 1);\n                                                                                }}\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    ) : (\n                                                                        <li className=\"list-inline-item\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={toastmsgss}\n                                                                            >\n                                                                                Next\n                                                                            </button>\n                                                                        </li>\n                                                                    )}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {indexs === 3 && (\n                                                    <div className=\"authorization  PAuthorizationDetail\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 ptb mx-auto\">\n                                                                <div className=\"text-center pre-auth-method\">\n                                                                    <h3>Pre-authorization</h3>\n                                                                    <p className=\"pSpecial\">\n                                                                        Required transaction 1 of 2\n                                                                    </p>\n                                                                    <p>\n                                                                        In this step, you grant access to the\n                                                                        staking smart contract to accept PSR\n                                                                    </p>\n                                                                    <div class=\"progress progressBar\">\n                                                                        <div\n                                                                            class=\"progress-bar w-75\"\n                                                                            role=\"progressbar\"\n                                                                            aria-valuenow=\"75\"\n                                                                            aria-valuemin=\"0\"\n                                                                            aria-valuemax=\"100\"\n                                                                        ></div>\n                                                                    </div>\n                                                                    <h5>\n                                                                        Waiting for the transaction to complete\n                                                                    </h5>\n                                                                    <p>\n                                                                        Please wait for the transaction to confirm\n                                                                        before proceeding.\n                                                                    </p>\n                                                                    <a className=\"text-truncate\" href=\"\">\n                                                                        <p>\n                                                                            0xCAB13D0ABD22E698848A73DDBABDA8CD8C56288E\n                                                                        </p>{\" \"}\n                                                                    </a>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindexs(indexs - 1);\n                                                                            }}\n                                                                        >\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => {\n                                                                                setindexs(indexs + 1);\n                                                                            }}\n                                                                        >\n                                                                            Next\n                                                                        </button>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {indexs === 4 && (\n                                                    <div className=\"confirmation confirmationDetail\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 ptb20 mx-auto\">\n                                                                {txstatus == true ? (\n                                                                    <div>\n                                                                        <div className=\"text-center confirmation-method\">\n                                                                            <h3>Success</h3>\n                                                                            <p className=\"\">\n                                                                                Congratulations! Your tokens are now\n                                                                                Unstaked. If desired, you may check Binance\n                                                                                Smart Chain to confirm the transaction.\n                                                                            </p>\n                                                                            <a className=\"text-truncate\" href=\"\">\n                                                                                <p>\n                                                                                    0xCAB13D0ABD22E698848A73DDBABDA8CD8C56288E\n                                                                                </p>{\" \"}\n                                                                            </a>\n                                                                        </div>\n                                                                        <div className=\"col-12\">\n                                                                            <ul className=\"list-inline text-center mt-3\">\n                                                                                <li className=\"list-inline-item\">\n                                                                                    {\" \"}\n                                                                                    <button className=\"btn-common\" onClick={histroryredirect}>\n                                                                                        Done\n                                                                                    </button>\n                                                                                </li>\n                                                                            </ul>\n                                                                        </div>\n                                                                    </div>\n                                                                ) : (\n                                                                    <div className=\"textsvs text-center\">\n                                                                        <h6 className=\"mb-4 shdsjd\">\n                                                                            Confirm Your Payement To Proceed\n                                                                        </h6>\n                                                                        <div className=\"text-center\">\n                                                                            <button\n                                                                                type=\"button\"\n                                                                                className=\"btn-common\"\n                                                                                onClick={UnStake_Token}\n                                                                            >\n                                                                                Confirm\n                                                                            </button>\n                                                                        </div>\n                                                                    </div>\n                                                                )}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </div>\n\n                                        </section>\n                                        <section\n                                            class=\"tab-pane stakeDetail ptb20 fade\"\n                                            id=\"pills-contact\"\n                                            role=\"tabpanel\"\n                                            aria-labelledby=\"pills-contact-tab\"\n                                        >\n                                            <h2 className=\"text-center\">Withdraw your PSR</h2>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12 col-11 mx-auto\">\n                                                    <div class=\"table-responsive text-center\">\n                                                        <table class=\"table\">\n                                                            <thead\n                                                                class=\"nav nav-pills mb-3\"\n                                                                id=\"pills-tab\"\n                                                                role=\"tablist\"\n                                                            >\n                                                                <tr className=\"mx-auto\">\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center  nav-item\">\n                                                                            <a class=\"nav-link active\">\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/checkpoint-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/checkpoint.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Checkpoint</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center nav-item\">\n                                                                            <a class=\"nav-link\">\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/withdraw/initWithdraw-dark.svg\"\n                                                                                            : \"projectstarter/staking/withdraw/initWithdraw.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Initialize Withdraw</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td scope=\"col\">\n                                                                        <div className=\"text-center\">\n                                                                            <a class=\"nav-link\">\n                                                                                <img\n                                                                                    src={\n                                                                                        dark === \"dark\"\n                                                                                            ? \"projectstarter/staking/stake/confirmation-dark.svg\"\n                                                                                            : \"projectstarter/staking/stake/confirmation.svg\"\n                                                                                    }\n                                                                                    alt=\"\"\n                                                                                />\n                                                                                <p>Confirmation</p>\n                                                                            </a>\n                                                                        </div>\n                                                                    </td>\n                                                                </tr>\n                                                            </thead>\n                                                        </table>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"tab-content all-inner-tabs\">\n                                                {withdrawIndex === 0 && (\n                                                    <section class=\"tab-pane fade show checkouttab active ptb20\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12\">\n                                                                <div className=\"text-center topDetailss\">\n                                                                    <h5>Checkpoints</h5>\n                                                                    <p>\n                                                                        The following conditions must be met to\n                                                                        proceed\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"checkoutinnercard-headDiv mb-3\">\n                                                                        <h5>Connect with MetaMask</h5>\n                                                                        <input\n                                                                            checked={account ? \"checked\" : false}\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        If not connected, click the \"Connect Wallet\"\n                                                                        button in the top right corner\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>PSR available to withdraw</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            checked={\n                                                                                totalUnStaked > 0 ? \"checked\" : false\n                                                                            }\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        Current Balance:{\" \"}\n                                                                        {totalUnStaked ? totalUnStaked : \"0.00\"}\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-sm-6\">\n                                                                <div className=\"checkout-inner-card\">\n                                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                                                                        <h5>BNB available in wallet</h5>\n                                                                        <input\n                                                                            type=\"radio\"\n                                                                            name=\"\"\n                                                                            id=\"\"\n                                                                            checked={\n                                                                                userbalance > 0 ? \"checked\" : false\n                                                                            }\n                                                                        />\n                                                                    </div>\n                                                                    <p>\n                                                                        BNB is required to pay transaction fees on\n                                                                        the Binance Smart Chain network. BNB\n                                                                        Balance:{\" \"}\n                                                                        {userbalance > 0 ? userbalance : \"0.00\"}BNB\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"col-12\">\n                                                                <div className=\"checkoutFooter\">\n                                                                    <input\n                                                                        type=\"checkbox\"\n                                                                        onChange={() =>\n                                                                            setWithdrawTerms(!withdrawTerms)\n                                                                        }\n                                                                        name=\"\"\n                                                                        class=\"styled-checkbox\"\n                                                                        id=\"styled-checkbox-1\"\n                                                                    />\n                                                                    <p>\n                                                                        I have read the{\" \"}\n                                                                        <a href=\"\">Terms and Conditions</a>\n                                                                    </p>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"col-12\">\n                                                                <ul className=\"list-inline text-center mt-3\">\n                                                                    <li className=\"list-inline-item\">\n                                                                        {\" \"}\n                                                                        <button className=\"btn-common btn-common22\">\n                                                                            Previous\n                                                                        </button>\n                                                                    </li>\n                                                                    <li className=\"list-inline-item\">\n                                                                        <button\n                                                                            className=\"btn-common\"\n                                                                            onClick={() => validateWithdraw()}\n                                                                        >\n                                                                            Next\n                                                                        </button>\n                                                                    </li>\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    </section>\n                                                )}\n                                                {withdrawIndex === 1 && (\n                                                    <section class=\"confirmDetails\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-sm-10 col-12 ptb20 mx-auto\">\n                                                                <div className=\"text-center confirm-method\">\n                                                                    <h3>Confirm Withdraw</h3>\n                                                                    <p>\n                                                                        In this step, you grant access to the\n                                                                        staking smart contract to accept PSR\n                                                                    </p>\n                                                                </div>\n                                                                <div className=\"col-md-12 \">\n                                                                    <div className=\"left-vertical-card-inner\">\n                                                                        <ul>\n                                                                            <li className=\"liItems\">\n                                                                                <p>Staked</p>\n                                                                                <h5>{totalStaked ? totalStaked : \"0.00\"}</h5>\n                                                                            </li>\n                                                                            <li className=\"liItems\">\n                                                                                <p>Unstaked</p>\n                                                                                <h5>{totalUnStaked ? totalUnStaked : \"0.00\"}</h5>\n                                                                            </li>\n                                                                            <li className=\"liItems\">\n                                                                                <p>Rewards</p>\n                                                                                <h5>{reward ? reward : 0}</h5>\n                                                                            </li>\n                                                                            <li className=\"liItems liItems2 d-flex flex-wrap justify-content-around\">\n                                                                                {/* <button className=\"btn-common btnWidth  mt-2\">\n                                                                                    Stake\n                                                                                </button> */}\n                                                                                <button onClick={() => userWithdrawal()} className=\"btn-common btnWidth mt-2\">\n                                                                                    Withdraw\n                                                                                </button>\n                                                                            </li>\n                                                                        </ul>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </section>\n                                                )}\n                                            </div>\n                                        </section>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4 \">\n                                    <div className=\"left-vertical-card-inner\">\n                                        <ul>\n                                            <li className=\"liItems\">\n                                                <p>Staked</p>\n                                                <h5>{totalStaked ? totalStaked : \"0.00\"}</h5>\n                                            </li>\n                                            <li className=\"liItems\">\n                                                <p>Unstaked</p>\n                                                <h5>{totalUnStaked ? totalUnStaked : \"0.00\"}</h5>\n                                            </li>\n                                            <li className=\"liItems\">\n                                                <p>Rewards</p>\n                                                <h5>{reward ? reward.toFixed(5) : \"0.00\"}</h5>\n                                            </li>\n                                            <li className=\"liItems liItems2 d-flex flex-wrap justify-content-around\">\n                                                {/* <button className=\"btn-common btnWidth  mt-2\">\n                                                    Stake\n                                                </button> */}\n                                                <button\n                                                    onClick={() => userWithdrawal()}\n                                                    className=\"btn-common btnWidth mt-2\"\n                                                >\n                                                    Withdraw\n                                                </button>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                    <Faqs />\n                </section>\n                <Footer />\n            </div>\n        </>\n    );\n}\n\nexport default Staking;\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../utils/ApiURL\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"./projects.scss\";\nimport { Backdrop } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport useEthBalance from \"../../utils/WalletBalance\";\nimport { useDispatch } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../landing/header/Navbar.js\";\nimport { GetStatus } from \"../../redux/action/index\";\nimport useWeb3 from \"../../hooks/useWeb3\";\nimport { getPoolContract2, TokenContract } from '../../utils/contractHelpers'\nimport Footer from \"../landing/footer/Footer.js\";\nimport Faqs from \"../landing/faqs/Faqs.js\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport { StakedAmount } from \"../../hooks/dataFetcher.js\";\nimport { UserTier, Swapped, RemainingAllocation, StakedPoolAmount, BusdInAllTier, TotalMaxCap, TokenPriceBUSD, ClaimToken } from \"../../hooks/tierInfoFetchers\";\nimport {\n  getIERC20Contract,\n  getPoolContract,\n} from \"../../utils/contractHelpers\";\nimport Environment from \"../../utils/Environment\";\nconst ProjectDetail = () => {\n  const { account } = useWeb3React();\n  const web3 = useWeb3();\n  const dark = useSelector((state) => state.UserReducer.theme);\n  const call = useSelector((state) => state.UserReducer.status);\n  console.log(\"userrrr\",call)\n  const [details, setDetails] = useState(null);\n  const [swapped, setSwapped] = useState(0);\n  const stake = StakedPoolAmount();\n  const [opens, setOpens] = useState(false);\n  const [Tiers, setTiers] = useState(0);\n  const [myTier, setMyTier] = useState('')\n  const [kycStatus, setKycStatus] = useState(null);\n  const [remAllo, setRemAllo] = useState(0);\n  const [approveAmount, setApproveAmount] = useState(0);\n  const [totalBusdAllTier, setTotalBusdAllTier] = useState(0);\n  const [Txstatus, setTxstatus] = useState(0);\n  const [allowencess, setallowencess] = useState(0);\n  const [allocation, setAllocation] = useState(null);\n  const [claimeddata, setclaimeddata] = useState({\n    vestingPercentages: [],\n    alreadyClaimed: [],\n  });\n\n  useEffect(() => {\n    if (account) {\n      console.log(\"asdaesfasdfsdafsddasfas\")\n      var data = JSON.stringify({\n        walletAddress: account,\n      });\n\n      var config = {\n        method: \"post\",\n        url: `${API_URL}/v1/Kyc/getDetailOfSingleKyc`,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n      axios(config)\n        .then(function (response) {\n          if (response.data.data?.responseFromBlockPass) {\n            setKycStatus(response.data.data.responseFromBlockPass);\n            // dispatch(GetStatus(data));\n            console.log(\"response\", response.data.data);\n          } else {\n            setKycStatus(null);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          // dispatch({\n          //   type: \"GET_USER\",\n          //   payload: null,\n          // });\n        });\n    }\n  }, [account]);\n\n  // useEffect(() => {\n  //   window.location.reload()\n  // }, [account])\n  \n  // console.log(\"claimed tokens we have\", Txstatus)s\n  const [numberOfIdoTokensToSell, setNumberOfIdoTokensToSell] = useState(0);\n  const [TokenPriceBusd, setTokenPriceBusd] = useState(0);\n\n  const { id } = useParams();\n// console.log(\"sdasdsaads::::::\",remAllo)\n  // const Stakedbalance = StakedPoolAmount();\n  const { Tier } = UserTier();\n  const { Maxcap } = TotalMaxCap()\n  const { TotalBusdInAllTier } = BusdInAllTier()\n  const { Price } = TokenPriceBUSD()\n  const { RAllocation } = RemainingAllocation();\n  const { TierSwap } = Swapped();\n  const { ClaimCall } = ClaimToken();\n  // let ethBalance = useEthBalance();\n  // const userbalance = (ethBalance.toNumber() / 10 ** 18).toFixed(5);\n  // console.log(\"perrr\", claimeddata?.alreadyClaimed[0])\n  const [userbalance, setUserBalance] = useState(0)\n  let account1 = account\n  useEffect(() => {\n    // if (account) {\n    // try {\n    const getBalance = async () => {\n      // console.log('in effect::::', account1)\n      let userbalance1 = await web3.eth.getBalance(account1);\n      setUserBalance(parseInt(userbalance1) / 10 ** 18);\n    }\n\n\n    getBalance()\n\n  }, [account1]);\n  useEffect(() => {\n    getProjectById();\n  }, []);\n  useEffect(() => {\n    if (details?.contractAddressDeployed && account) {\n      Getclaimeddata()\n    }\n  }, [details?.contractAddressDeployed, details?.statusOfProject , account]);\n  \n  const getProjectById = async () => {\n    setOpens(true);\n    var data = JSON.stringify({\n      _id: id,\n    });\n    var config = {\n      method: \"post\",\n      url: `${API_URL}/v1/Project/getDetailOfSingleProjectById`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: data,\n    };\n    axios(config)\n      .then(function (response) {\n        setOpens(false)\n        setDetails(response.data.data);\n      })\n      .catch(function (error) {\n        setOpens(false)\n        console.log(error);\n      });\n  };\n\n  const Getclaimeddata = async () => {\n    try {\n      if(details?.statusOfProject == 'close'){\n        setOpens(true)\n        await axios.post(`${API_URL}/v1/Project/claimProject`, { contractAddressDeployed: details?.contractAddressDeployed, account: account })\n          .then((response) => {\n            // console.log(\"claimed data we get\", response.data.data)\n            setOpens(false)\n            setAllocation(response.data.data.allocation);\n            setclaimeddata(response.data.data);\n            // toast.success('Project Added Successfully, Your Project will be Displayed Once admin approve', {\n            //     position: \"top-rights\",\n            //     autoClose: 2000,\n            // });\n          }).catch((err) => {\n            setOpens(false)\n            toast.warning('Error While Getting Claimed data', {\n              position: \"top-right\",\n              autoClose: 2000,\n            });\n            // console.log(\"error responce\", err)\n          })\n      }\n    \n    }\n    catch (e) {\n      console.log(e)\n    }\n  };\n  // console.log(\"allownce we have here\", allowencess)\n  // console.log(\"maxcappppp\", numberOfIdoTokensToSell * TokenPriceBusd)\n  useEffect(async () => {\n    if (account && details) {\n      // const res = await Stakedbalance(account, details?.contractAddressDeployed);\n      // await setStake(parseInt(res.amount / 10 ** 18));\n      const res2 = await TotalBusdInAllTier(details?.contractAddressDeployed)\n      const res3 = await Maxcap(details?.contractAddressDeployed);\n      const res4 = await Price(details?.contractAddressDeployed);\n      if (stake > 0) {\n        const res1 = await Tier(details?.contractAddressDeployed, stake)\n        console.log(\"swapppeddddddd-------==================\", res1)\n        setTiers(res1)\n        if (res1) {\n          const res0 = await TierSwap(details?.contractAddressDeployed, res1);\n          const resR = await RAllocation(details?.contractAddressDeployed, res1)\n          setSwapped(parseInt(res0 / 10 ** 18).toFixed(2));\n          setRemAllo(resR / 10 ** 18)\n          if (res1 === 1) {\n            setMyTier('Emerald')\n          } else if (res1 === 2) {\n            setMyTier('Ruby') \n          } else if (res1 === 3) {\n            setMyTier('Sapphire') \n          } else if (res1 === 4) {\n            setMyTier('Gold') \n          } else if (res1 === 5) {\n            setMyTier('Platinum') \n          } else if (res1 === 6) {\n            setMyTier('Diamond')\n          }\n        }\n        // console.log(\"tier we get here\", res1)\n      }\n      setTokenPriceBusd(res4 / 10 ** 18)\n      setNumberOfIdoTokensToSell(res3)\n      setTotalBusdAllTier(res2 / 10 ** 18)\n      // console.log('res res +++++', resR)\n      \n   \n    }\n  }, [account, details, stake]);\n\n  const claimfailed = () => {\n    toast.error('Please Finalize Your Sale First In Your Project List', {\n      position: \"top-right\",\n      autoClose: 5000,\n    });\n  }\n  const approvetoken = async () => {\n    setOpens(true);\n    try {\n      const contract = TokenContract(\"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\", web3);\n      const approved = await contract.methods\n        .approve(\n          details?.contractAddressDeployed, web3.utils.toWei('1000000000000000000', 'ether'))\n        .send({ from: account });\n      // console.log(\"approved tokensssss\", approved)\n      if (approved.status) {\n        setOpens(false)\n        toast.success('Approve Token Successfully', {\n          position: \"top-right\",\n          autoClose: 5000,\n        });\n        CheckAllowance();\n      } else {\n        setOpens(false)\n      }\n    } catch (error) {\n      setOpens(false)\n      toast.warning('Error while connecting metamask', {\n        position: \"top-right\",\n        autoClose: 5000,\n      });\n    }\n  };\n\n  const Claimctc = useCallback(async () => {\n\n    try {\n      // console.log(\"=============\")\n      // setShowLoader(true)\n      setOpens(true);\n      const tx = await ClaimCall(details?.contractAddressDeployed);\n      if (tx.status) {\n        await setTxstatus(tx.status);\n        // await setstackbalance(\"\");\n        setOpens(false);\n        // await getStakedbalance();\n        // setShowLoader(false)\n        // setInputBusd('')\n        // close()\n      }\n    } catch (err) {\n      setOpens(false);\n      // setShowLoader(false)\n      console.log(\"err22\", err);\n    }\n  });\n\n  const JoinPool = async () => {\n    setOpens(true);\n    try {\n      const contract = getPoolContract2(details?.contractAddressDeployed, web3);\n      const approved = await contract.methods\n        .participateAndPay(\n          web3.utils.toWei(approveAmount.toString(), 'ether'))\n        .send({ from: account });\n      // console.log(\"pools joinn\", approved)\n      if (approved.status) {\n        setOpens(false)\n        toast.success('Join Pool Successfully', {\n          position: \"top-right\",\n          autoClose: 5000,\n        });\n        window.location.reload();\n      } else {\n        setOpens(false)\n      }\n    } catch (error) {\n      setOpens(false)\n      toast.warning('Pool Time End', {\n        position: \"top-right\",\n        autoClose: 5000,\n      });\n    }\n  };\n  const [detaillottery, setdetaillottery] = useState('');\n  const getlotterydetail = () => {\n    if(Tiers < 4){\n      setOpens(true)\n      axios.post(`${API_URL}/v1/Lottery/getLotteryStatus`, { contractAddressDeployed: details?.contractAddressDeployed, walletAddress: account })\n        .then((response) => {\n          setOpens(false)\n          setdetaillottery(response.data.data)\n          // console.log(\"lotetry\", response)\n        })\n        .catch((err) => {\n          setOpens(false)\n          toast.warning('Error While getting user Lottery', {\n            position: \"top-right\",\n            autoClose: 3000,\n          });\n          return false;\n        })\n    }\n   \n  }\n  // console.log(\"tier value we have here\", detaillottery.tier)\n  useEffect(() => {\n    if (details?.contractAddressDeployed && account && Tiers) {\n      getlotterydetail();\n    }\n\n\n  }, [details, account, Tiers]);\n\n\n  // let nowwwww = new Date()\n  // console.log(\"now time \",nowwwww)\n  // var date = new Date();\n  // var now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\n  //   date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n  // console.log(\"now\", now_utc)\n  // console.log(\"nowwwwwww\",nowwwww)\n  // console.log(\"start presale time\",details?.preSaleEndDateAndTime)\n  // let starttime =  details?.preSaleEndDateAndTimes\n  // console.log(\"start time\",starttime)\n  // let endtime = details?.preSaleEndDateAndTime\n  // let check=presale>nowwwww\n  // console.log(\"check\",check)\n\n  const CheckAllowance = async () => {\n    const contract = getIERC20Contract(\"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\", web3);\n    let tallow = await contract.methods.allowance(account, details?.contractAddressDeployed).call()\n    // console.log(\"allowance\", tallow / 10 ** 18)\n    await setallowencess(tallow / 10 ** 18)\n  }\n  let totalpercentage = totalBusdAllTier / numberOfIdoTokensToSell * 100\n  // let totalpercentages = 50000/100000*100\n  // console.log(\"total percentage we have here is \", totalpercentages)\n\n  useEffect(() => {\n    if (account) {\n      CheckAllowance();\n    }\n\n  }, [account, details]);\n  // console.log(\"allowence we get here wass\",allowencess)\n\n  const [status, setStatus] = useState(null);\n  useEffect(() => {\n    setStatus(call);\n  }, [call, account])\n  // console.log(\"status we get here is \", status)\n  // useEffect(() => {\n  //   if (account) {\n  //     if(status === null){\n  //       getUserStatus();\n  //     }\n  //   } else {\n  //     setStatus(null);\n  //   }\n  // }, [account]);\n\n  // const getUserStatus = () => {\n  //   dispatch(GetStatus(account));\n  // };\n\n\n  return (\n    <>\n      <Backdrop className=\"loader\" sx={{ color: \"#fff\" }} open={opens}>\n        <img\n          src=\"/projectstarter/header/loader.svg\"\n          alt=\"\"\n          className=\"img-fluid shdshhgdss\"\n        />\n      </Backdrop>\n      <div className={dark}>\n        <section className=\"main-projectdetail\">\n          <Navbar />\n          <div className=\"container\">\n            <div className=\"row ptb\">\n              <div className=\"col-md-6\">\n                <div className=\"inner-content\">\n                  <div className=\"inner-img\">\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pl-0\">\n                        <ul className=\"list-inline ptb20 d-flex align-items-center\">\n                          <li className=\"list-inline-item\">\n                            <div className=\"inner-logo\">\n                              <img\n                                // src=\"\\projectstarter\\projectdetail-page\\logo-one.png\"\n                                src={details?.logoURL}\n                                width={80}\n                                height={80}\n                                // style={{borderRadius: 51}}\n                                className=\"img-fluid\"\n                                alt=\"\"\n                              />\n                            </div>\n                          </li>\n                          <li className=\"list-inline-item d-flex justify-content-between align-item-center w-100\">\n                            <div className=\"inner-logo\">\n                              <h4 className=\"white\">{details?.projectName}</h4>\n                              <h5 className=\"white\">\n                                {details?.contactPersonName}\n                              </h5>\n                            </div>\n                            <div className=\"\">\n                              <button target=\"_blank\" className=\"open-btn\">\n                                {details?.statusOfProject}\n\n                                {/* {starttime > nowwwww ?\n                                  'comingsoon' : starttime > nowwwww && endtime < nowwwww ?\n                                    \"Open\" : \"close\"\n                                } */}\n\n                              </button>\n                            </div>\n                          </li>\n                        </ul>\n                      </div>\n                      <div className=\"col-md-12 p-0\">\n                        <ul className=\"list-inline mt-3 d-flex align-items-center\">\n                          <li className=\"list-inline-item ghjk\">\n                            <img\n                              src=\"/projectstarter/socials/world.svg\"\n                              alt=\"\"\n                            />\n                          </li>\n                          <li className=\"list-inline-item ghjk\">\n                            <img\n                              src=\"/projectstarter/socials/m-detail.svg\"\n                              alt=\"\"\n                            />\n                          </li>\n                          <li className=\"list-inline-item ghjk\">\n                            <img\n                              src=\"/projectstarter/socials/telegram-detail.svg\"\n                              alt=\"\"\n                            />\n                          </li>\n                          <li className=\"list-inline-item ghjk\">\n                            <img\n                              src=\"/projectstarter/socials/Twitter-detail.svg\"\n                              alt=\"\"\n                            />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <p className=\"ptb20 white\">\n                      {details?.projectDescription}\n                      {/* At vero eos et accusamus et iusto odio dignissimos ducimus\n                      qui blandis praesentium voluptatum deleniti atque corrupti\n                      quos dolores et quas molestias excepturi sint occaecati. */}\n                    </p>\n                    {Tiers >= 4 && details?.statusOfProject == 'open' && stake >= 1000 && kycStatus == \"approved\" ?\n                      <div>\n                        <ul className=\"list-inline\">\n                          {allowencess > 0 ?\n                            <div>\n                              <input onChange={(e) => setApproveAmount(e.target.value)} class=\"form-control w-50 hfghfg\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"0\"></input>\n                              <li className=\"list-inline-item ptb20\">\n                                <button className=\"btn btn-white ghgh\" onClick={JoinPool}>Join Pool</button>\n                              </li>\n                            </div>\n                            :\n                            <li className=\"list-inline-item ptb20\">\n                              <button className=\"btn btn-white ghgh\" onClick={approvetoken}>Approve Token</button>\n                            </li>\n                          }\n                        </ul>\n                      </div> :\n                        detaillottery?.tier > 0 && details?.statusOfProject == 'open' && stake >= 1000 && kycStatus == \"approved\" ?\n                        <div>\n                          <ul className=\"list-inline\">\n                            {allowencess > 0 ?\n                              <div>\n                                <input onChange={(e) => setApproveAmount(e.target.value)} class=\"form-control w-50 hfghfg\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"0\"></input>\n                                <li className=\"list-inline-item ptb20\">\n                                  <button className=\"btn btn-white ghgh\" onClick={JoinPool}>Join Pool</button>\n                                </li>\n                              </div>\n                              :\n                              <li className=\"list-inline-item ptb20\">\n                                <button className=\"btn btn-white ghgh\" onClick={approvetoken}>Approve Token</button>\n                              </li>\n                            }\n                          </ul>\n                        </div>\n                        :\n                        <div>\n                          {details?.statusOfProject == 'close' ?\n                            <h3 className=\"asgvasv\">POOL CLOSED NOW</h3>\n                            :\n                            <div className=\"texterror shadow\">\n                              <h3>* For Pool Participation Following Conditions Should Meet :</h3>\n                              <h6><span>1-</span> User must be whitelisted for participating in pool </h6>\n                              <h6><span>2-</span> KYC approved by admin</h6>\n                              <h6><span>3-</span> BUSD should be in wallet</h6>\n                              <h6><span>4-</span> User must stake token more than or equal to 1000</h6>\n                            </div>\n                          }\n                        </div>\n                    }\n\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"inner-contentCard my-5 my-md-0\">\n                  <div className=\"row mb-3\">\n                    <div className=\"col-5\">\n                      <div>\n                        <p>Your Balance</p>\n                        {/* <h5 className=\"p-main\">0.0000 BUSD</h5> */}\n                        <h5 className=\"p-main\">{userbalance.toFixed(3)} BNB</h5>\n                      </div>\n                    </div>\n                    <div className=\"col-5 p-0\">\n                      <div>\n                        <p>Your Staked amount:</p>\n                        <h5 className=\"p-main\">{stake}</h5>\n                      </div>\n                    </div>\n                    <div className=\"col-lg-2 mt-lg-0 mt-4\">\n                      <div>\n                        <p className=\"sgvsg\">Your Tier</p>\n                        <h5 className=\"p-main\">{stake ?\n                          myTier\n                          :\n                          '0'\n                        }</h5>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row my-4\">\n                    <div className=\"col-md-5 col-6\">\n                      <div>\n                        <p>Swapped</p>\n                        <h5 className=\"p-main\">{swapped} BUSD</h5>\n                        <p className=\"p-main1 font-weight-bold\">Roco</p>\n                      </div>\n                    </div>\n                    <div className=\"col-md-5 col-6 p-0\">\n                      <div>\n                        <p>Remaining Allocation</p>\n                        <h5 className=\"p-main\">{remAllo && swapped ? remAllo - swapped : '0'} BUSD</h5>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <span class=\"placeholder col-6\"></span>\n<span class=\"placeholder w-75\"></span>\n<span class=\"placeholder\" style=\"width: 25%;\"></span> */}\n                  <div className=\"row mb-1 mt-3\">\n                    <div className=\"col-11 \">\n                      <h6 className=\"grey\">Pool Progress</h6>\n                    </div>\n                    <div className=\"col-1 pl-0 \">\n                      <div className=\"inner-btn\">\n                        <p className=\"grey font-weight-bold \" >{\n                          totalpercentage ?\n                            totalpercentage.toFixed(2)\n                            :\n                            0\n\n                        }%</p>\n                      </div>\n\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <div className=\"progress\">\n                        <div\n                          className=\"progress-bar\"\n                          role=\"progressbar\"\n                          style={{ width: `${totalpercentage}%` }}\n                          aria-valuenow=\"70\"\n                          aria-valuemin=\"20\"\n                          aria-valuemax=\"100\"\n                        ></div>\n                      </div>\n                      <h6 className=\"common font-weight-bolder text mt-1\">\n                        BUSD {totalBusdAllTier} / ${numberOfIdoTokensToSell && TokenPriceBusd ? numberOfIdoTokensToSell * TokenPriceBusd : 0}\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"main-projectdetailtabs ptb\">\n          <div className=\"container\">\n            <div className=\"row ptb20\">\n              <div className=\"col-md-12\">\n                <nav>\n                  <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                    <a\n                      className=\"nav-item nav-link active\"\n                      id=\"nav-home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-home\"\n                      role=\"tab\"\n                      aria-controls=\"nav-home\"\n                      aria-selected=\"true\"\n                    >\n                      Project Detail\n                    </a>\n                    <a\n                      className=\"nav-item nav-link\"\n                      id=\"nav-profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-profile\"\n                      role=\"tab\"\n                      aria-controls=\"nav-profile\"\n                      aria-selected=\"false\"\n                    >\n                      Schedule\n                    </a>\n                    <a\n                      className=\"nav-item nav-link\"\n                      id=\"nav-contact-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-contact\"\n                      role=\"tab\"\n                      aria-controls=\"nav-contact\"\n                      aria-selected=\"false\"\n                    >\n                      Your Allocation\n                    </a>\n                  </div>\n                </nav>\n                <div className=\"tab-content mt-3\" id=\"nav-tabContent\">\n                  <div\n                    className=\"tab-pane fade show active\"\n                    id=\"nav-home\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-home-tab\"\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-md-6 pl-0\">\n                        <div className=\"main-table\">\n                          <div className=\"table-responsive\">\n                            <table className=\"table\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">Pool Information</th>\n                                  <th scope=\"col\"></th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n                                  <td>Opens</td>\n                                  <td>{details?.preSaleStartDateAndTime.split('Z')[0]} UTC</td>\n                                </tr>\n                                <tr>\n                                  <td>FCFS Opens</td>\n                                  <td>{details?.FCFSStartdate.split('Z')[0]} UTC</td>\n                                </tr>\n                                <tr>\n                                  <td>Closes</td>\n                                  <td>{details?.preSaleEndDateAndTime.split('Z')[0]} UTC</td>\n                                </tr>\n                                {/* <tr>\n                                  <td>Swap Rate</td>\n                                  <td>1 BUSD = 142.8571 BITORB</td>\n                                </tr> */}\n                                <tr>\n                                  <td>MAX Cap</td>\n                                  <td>{numberOfIdoTokensToSell} BUSD</td>\n                                </tr>\n                                <tr>\n                                  <td>Total Users Participated</td>\n                                  <td>2920</td>\n                                </tr>\n                                <tr>\n                                  <td>Total Funds Swapped</td>\n                                  <td>{swapped && swapped ?\n                                    swapped\n                                    :\n                                    0\n                                  } BUSD</td>\n                                </tr>\n                                {/* <tr>\n                                  <td>Access Type</td>\n                                  <td>Private</td>\n                                </tr> */}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-md-6 pl-0\">\n                        <div className=\"main-table\">\n                          <div className=\"table-responsive\">\n                            <table className=\"table\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">Token Information</th>\n                                  <th scope=\"col\"></th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n                                  <td>Opens</td>\n                                  <td>{details?.preSaleStartDateAndTime.split('Z')[0]}UTC</td>\n                                </tr>\n                                <tr>\n                                  <td>FCFS Opens</td>\n                                  <td>2021-11-04 08:00:00 UTC</td>\n                                </tr>\n                                <tr>\n                                  <td>Closes</td>\n                                  <td>2021-11-04 08:00:00 UTC</td>\n                                </tr>\n                                <tr>\n                                  <td>Swap Rate</td>\n                                  <td>2021-11-04 08:00:00 UTC</td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div> */}\n                    </div>\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"nav-profile\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-profile-tab\"\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-md-8 pl-0\">\n                        <div className=\"main-table\">\n                          <div className=\"table-responsive\">\n                            <table className=\"table\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">Round</th>\n                                  <th scope=\"col\">Opens</th>\n                                  <th scope=\"col\">Closes</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr>\n                                  <td>Alloction</td>\n                                  <td>{details?.preSaleStartDateAndTime.split('Z')[0]}</td>\n                                  <td>{details?.preSaleEndDateAndTime.split('Z')[0]}</td>\n                                </tr>\n                                {/* <tr>\n                                  <td>FCFS-Prepare</td>\n                                  <td>2021-11-04 08:00:00 UTC</td>\n                                  <td>2021-11-04 08:00:00 UTC</td>\n                                </tr> */}\n                                <tr>\n                                  <td>FCFS-Start-Time</td>\n                                  <td>{details?.FCFSStartdate.split('Z')[0]} UTC</td>\n                                  <td>{details?.FCFSEnddate.split('Z')[0]} UTC</td>\n                                </tr>\n                                {/* <tr>\n                                  <td>.</td>\n                                  <td></td>\n                                  <td></td>\n                                </tr>\n                                <tr>\n                                  <td>.</td>\n                                  <td></td>\n                                  <td></td>\n                                </tr> */}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"nav-contact\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-contact-tab\"\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pl-md-0 order-md-0 order-1\">\n                        <div className=\"main-table\">\n                          <div className=\"table-responsive\">\n                            <table className=\"table\">\n                              <thead>\n                                <tr>\n                                  {/* <th scope=\"col\">NO.</th> */}\n                                  <th scope=\"col\">Allocation</th>\n                                  <th scope=\"col\">Percentage</th>\n                                  <th scope=\"col\">Date</th>\n                                  <th scope=\"col\">Claimed</th>\n                                  <th scope=\"col\">Aciton</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {claimeddata?.vestingPercentages.map((item, index) => {\n                                  return (<tr>\n                                    {/* <td>1</td> */}\n                                    <td>{allocation}</td>\n                                    <td>{item * 10 ** 18}%</td>\n                                    <td>{Date((claimeddata?.vestingUnlockTimes[index] * 1000).toString())}</td>\n                                    <td>{`${claimeddata?.alreadyClaimed[index] == true ? 'YES' : 'NO'}`}</td>\n                                    {/* <td>dfdfdfd</td> */}\n                                    <td>\n                                      {details?.finalizeStatus === true ?\n                                        <button className=\"btn-common mt-0\" onClick={Claimctc}>\n                                          Claim Token\n                                        </button>\n                                        :\n                                        <button className=\"btn-common sbdhsbd mt-0\" onClick={claimfailed}>\n                                          Claim Token\n                                        </button>\n                                      }\n                                    </td>\n                                  </tr>\n                                  )\n                                })}\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                      {/* <div className=\"col-md-3 text-center pr-md-0 my-2 order-md-1 order-0\">\n                        <button\n                          className=\"btn-common w-100\"\n                          data-toggle=\"modal\"\n                          data-target=\"#exampleModalCenter\"\n                        >\n                          Add Token to MetaMask\n                        </button>\n                      </div> */}\n                    </div>\n                    {/* <!-- Modal --> */}\n                    <div\n                      className=\"modal fade\"\n                      id=\"exampleModalCenter\"\n                      tabIndex=\"-1\"\n                      role=\"dialog\"\n                      aria-labelledby=\"exampleModalCenterTitle\"\n                      aria-hidden=\"true\"\n                    >\n                      <div\n                        className=\"modal-dialog modal-dialog-centered\"\n                        role=\"document\"\n                      >\n                        <div className=\"modal-content\">\n                          <div className=\"modal-body\">\n                            <div className=\"text-center modal-inner-data ptb20\">\n                              <p>Token Quantity</p>\n                              <h3> 4132,311,121 PSR</h3>\n                            </div>\n                          </div>\n                          <div className=\"ptb20 text-center\">\n                            <ul className=\"list-inline\">\n                              <li className=\"list-inline-item\">\n                                <button className=\"btn-common\">\n                                  Add Token to MetaMask\n                                </button>\n                              </li>\n                              <li className=\"list-inline-item\">\n                                <button\n                                  type=\"button\"\n                                  className=\"btn-common-outline\"\n                                  data-dismiss=\"modal\"\n                                >\n                                  Cancel\n                                </button>\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Faqs />\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default ProjectDetail;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./idoform.scss\";\nimport Navbar from \"../landing/header/Navbar\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { Backdrop } from \"@material-ui/core\";\nimport Footer from \"../landing/footer/Footer.js\";\nimport * as Yup from \"yup\";\nimport BigNumber from \"big-number\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWeb3 from \"../../hooks/useWeb3\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { API_URL } from \"../../utils/ApiURL\";\nimport {\n  getIERC20Contract,\n  getPoolContract,\n} from \"../../utils/contractHelpers\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { TextField, Typography } from \"@material-ui/core\";\nimport Faqs from \"../landing/faqs/Faqs\";\nimport { useSelector } from \"react-redux\";\nimport Environment from \"../../utils/Environment\";\nfunction IdoForm() {\n  const [photo, setPhoto] = useState();\n  const [photo1, setPhoto1] = useState();\n  const { account } = useWeb3React();\n  const [uploadImage, updateuploadImage] = useState(\"\");\n  const [kycStatus, setKycStatus] = useState(null);\n  const [opens, setOpens] = useState(false);\n  const [uploadImage1, updateuploadImage1] = useState(\"\");\n  const [priceproject, updatepriceproject] = useState(1);\n  const [transactionstatus, settransactionstatus] = useState(false);\n  const dark = useSelector((state) => state.UserReducer.theme);\n  let call = useSelector((state) => state.UserReducer.status);\n  console.log(\"status::::::::\",call)\n  const history = useHistory();\n  // const handleChange = (event) => {\n    //     const { formData } = allFormData;\n    //     formData[event.target.name] = event.target.value;\n    //     setAllFormData({ formData });\n  // }\n  // const [allFormData, setAllFormData] = useState({\n  //     formData: {\n  //         Projectname: '', symbol: '', description: '', PContractAddress: '', ContactPersonName: '', ContactPersonEmail: '', OwnerWalletAddress: '', TotalTokenSupply: '',\n  //         AmountAllocatedPresale: '', Decimals: '', PresalePriceBNB: '', ListingPriceBNB: '', preStartdate: '', preEnddate: '', pancakePercentage: '', LaunchPadPercentage: '',\n  //         website: '', Telegram: '', Twitter: '', MinAllocation: '', MaxAllocation: '', OwnerFname: '', OwnerLname: ''\n  //     },\n  // })\n  // console.log(\"formdata\", allFormData)\n  const [inputList, setInputList] = useState([\n    { VestingPercentages: \"\", VestingUnlockTimes: \"\" },\n  ]);\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n  };\n  const handleRemoveClick = (index) => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n  const handleAddClick = () => {\n    setInputList([\n      ...inputList,\n      { VestingPercentages: \"\", VestingUnlockTimes: \"\" },\n    ]);\n  };\n  async function catchImage(e) {\n    try {\n      const file = e.target.files[0];\n      setPhoto(file);\n      updateuploadImage(URL.createObjectURL(e.target.files[0]));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  console.log(\"new feild data was \", kycStatus);\n  async function catchImage1(e) {\n    try {\n      const file = e.target.files[0];\n      setPhoto1(file);\n      updateuploadImage1(URL.createObjectURL(e.target.files[0]));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    if (account) {\n      var data = JSON.stringify({\n        walletAddress: account,\n      });\n\n      var config = {\n        method: \"post\",\n        url: `${API_URL}/v1/Kyc/getDetailOfSingleKyc`,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: data,\n      };\n      axios(config)\n        .then(function (response) {\n          if (response.data.data?.responseFromBlockPass) {\n            setKycStatus(response.data.data.responseFromBlockPass);\n            console.log(\"response\", response.data.data);\n          } else {\n            setKycStatus(null);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          // dispatch({\n          //   type: \"GET_USER\",\n          //   payload: null,\n          // });\n        });\n    }\n  }, [account]);\n\n  const CreatePool = async (arg) => {\n    console.log(\"aprrove we have shdshdvhs\",arg)\n    try {\n      setOpens(true);\n      const contract = getPoolContract(Environment.deployerContractAddress,web3);\n      const approved = await contract.methods\n        .deployProjectOnLaunchpad(arg)\n        .send({ from: account, value: web3.utils.toWei(\"1\", \"ether\") })\n        .on(\"transactionHash\", (tx) => {\n          return tx.transactionHash;\n        });\n      setOpens(false);\n      return approved;\n    } catch (err) {\n      setOpens(false);\n      console.log(\"pool err\", err);\n      throw err;\n    }\n  };\n\n  const web3 = useWeb3();\n  const loadWeb3 = async () => {\n    setOpens(true);\n    try {\n      const res = await web3.eth.sendTransaction({\n        from: account,\n        to: \"0x10F58B651A76ac4178d736ec31bb85d7341F12C5\",\n        value: web3.utils.toWei(priceproject.toString(), \"ether\"),\n      });\n      console.log(\"res skskskcskcm\", res);\n      if (res.status) {\n        settransactionstatus(res.status);\n        setOpens(false);\n        toast.success(\"Payement Successfully Done\", {\n          position: \"top-right\",\n          autoClose: 5000,\n        });\n        return res.status;\n      } else {\n        setOpens(false);\n      }\n    } catch (error) {\n      setOpens(false);\n      toast.warning(\"Error while connecting metamask\", {\n        position: \"top-right\",\n        autoClose: 5000,\n      });\n    }\n  };\n\n  // submit form all data\n\n  const validationSchema = Yup.object().shape({\n    Projectname: Yup.string()\n      .required('Project name is required')\n      .min(3, 'Name must be at least 3 characters')\n      .max(20, 'Name must not exceed 20 characters'),\n    symbol: Yup.string()\n      .required('Project symbol is required')\n      .min(1, 'Name must be at least 1 characters')\n      .max(10, 'Name must not exceed 5 characters'),\n    description: Yup.string()\n      .required('description is required')\n      .min(16, 'description must be at least 16 characters')\n      .max(255, 'description must not exceed 255 characters'),\n    PContractAddress: Yup.string()\n      .required('Project Contract Address is required'),\n    ContactPersonName: Yup.string()\n      .required('Contact Person Name is required'),\n    ContactPersonEmail: Yup.string()\n      .required('Contact Person Email is required'),\n    TotalTokenSupply: Yup.string()\n      .required('Total Token Supply is required'),\n    AmountAllocatedPresale: Yup.string()\n      .required('Amount Allocated Presale is required'),\n    Decimals: Yup.string()\n      .required('Decimals is required'),\n    PresalePriceBNB: Yup.string()\n      .required('Presale Price is required'),\n    FCFSStartdate: Yup.string()\n      .required('FCFS Start Date is required'),\n    preStartdate: Yup.string()\n      .required('Starting Date is required'),\n    preEnddate: Yup.string()\n      .required('Ending Date is required'),\n    SoftCapPercentage: Yup.string()\n      .required('SotCap Percentage is required'),\n    // LaunchPadPercentage: Yup.string()\n    //     .required('LaunchPad Percentage is required'),\n    OwnerFname: Yup.string()\n      .required('Owner First Name is required'),\n    OwnerLname: Yup.string()\n      .required('Owner Last Name is required'),\n\n    MinAllocation1: Yup.number()\n      .typeError('MinAllocation1 is required'),\n\n    MaxAllocation1: Yup.number()\n      .typeError('MaxAllocation1 is required')\n      .moreThan(Yup.ref('MinAllocation1'), \"Max should be greater then min\"),\n\n    MinAllocation2: Yup.number()\n      .typeError('MinAllocation2 is required'),\n\n    MaxAllocation2: Yup.number()\n      .typeError('MaxAllocation2 is required')\n      .moreThan(Yup.ref('MinAllocation2'), \"Max should be greater then min\"),\n\n    MinAllocation3: Yup.number()\n      .typeError('MinAllocation3 is required'),\n\n    MaxAllocation3: Yup\n      .number()\n      .typeError('MaxAllocation3 is required')\n      .moreThan(Yup.ref('MinAllocation3'), \"Max should be greater then min\"),\n\n    MinAllocation4: Yup.number()\n      .typeError('MinAllocation4 is required'),\n\n    MaxAllocation4: Yup\n      .number()\n      .typeError('MaxAllocation4 is required')\n      .moreThan(Yup.ref('MinAllocation4'), \"Max should be greater then min\"),\n\n    MinAllocation5: Yup.number()\n      .typeError('MinAllocation5 is required'),\n\n    MaxAllocation5: Yup\n      .number()\n      .typeError('MaxAllocation5 is required')\n      .moreThan(Yup.ref('MinAllocation5'), \"Max should be greater then min\"),\n\n    MinAllocation6: Yup.number()\n      .typeError('MinAllocation6 is required'),\n\n    MaxAllocation6: Yup\n      .number()\n      .typeError('MaxAllocation6 is required')\n      .moreThan(Yup.ref('MinAllocation6'), \"Max should be greater then min\"),\n\n    NoofVesting: Yup.number()\n    .typeError('Vesting is required'),\n    Tier1MaxCap: Yup.number()\n      .typeError('Tier1Cap is required'),\n    Tier2MaxCap: Yup.number()\n      .typeError('Tier2Cap is required'),\n    Tier3MaxCap: Yup.number()\n      .typeError('Tier3Cap is required'),\n    Tier4MaxCap: Yup.number()\n      .typeError('Tier4Cap is required'),\n    Tier5MaxCap: Yup.number()\n      .typeError('Tier5Cap is required'),\n    Tier6MaxCap: Yup.number()\n      .typeError('Tier6Cap is required'),\n  });\n  const onSubmit = async (data) => {\n    // debugger\n    console.log(\"Data Project IDO\", data);\n    let contractAddressDeployed = null;\n    let dummArr = inputList;\n    let a = new Date(data.preStartdate).toUTCString()\n    let b = new Date(data.preEnddate).toUTCString()\n    let c = new Date(data.FCFSStartdate).toUTCString()\n    let d = new Date(data.preEnddate).toUTCString()\n    setOpens(true)\n    let vestingtime = [];\n    let vestPer = [];\n    dummArr.map((item) => {\n      let a = new Date(item.VestingUnlockTimes).getTime() / 1000;\n      vestingtime = [...vestingtime, a.toString()];\n      vestPer = [...vestPer, item.VestingPercentages.toString()];\n    });\n    const data1 = new FormData();\n    data1.append(\"logoURL\", photo);\n    data1.append(\"projectName\", data.Projectname);\n    data1.append(\"symbol\", data.symbol);\n    data1.append(\"projectDescription\", data.description);\n    data1.append(\"contractAddress\", data.PContractAddress);\n    data1.append(\"contactPersonWalletAddress\", account);\n    data1.append(\"contactPersonName\", data.ContactPersonName);\n    data1.append(\"contactPersonEmail\", data.ContactPersonEmail);\n    data1.append(\"websiteLink\", data.website);\n    data1.append(\"twitterLink\", data.Twitter);\n    data1.append(\"telegramlink\", data.Telegram);\n    data1.append(\"totalSupplyOfToken\", data.TotalTokenSupply);\n    data1.append(\"amountAllocatedForPresale\", data.AmountAllocatedPresale);\n    data1.append(\"tokenDecimals\", data.Decimals);\n\n    data1.append(\"tokenPriceInBNB\", data.PresalePriceBNB);\n\n    // data1.append(\"listingPriceInBNB\", data.ListingPriceBNB)\n    // data1.append(\"liquidityPercentageForPancake\", data.pancakePercentage)\n    data1.append(\"maxAllocation1\", data.MaxAllocation1);\n    data1.append(\"minAllocation1\", data.MinAllocation1);\n    data1.append(\"maxAllocation2\", data.MaxAllocation2);\n    data1.append(\"minAllocation2\", data.MinAllocation2);\n    data1.append(\"maxAllocation3\", data.MaxAllocation3);\n    data1.append(\"minAllocation3\", data.MinAllocation3);\n    data1.append(\"maxAllocation4\", data.MaxAllocation4);\n    data1.append(\"minAllocation4\", data.MinAllocation4);\n    data1.append(\"maxAllocation5\", data.MaxAllocation5);\n    data1.append(\"minAllocation5\", data.MinAllocation5);\n    data1.append(\"maxAllocation6\", data.MaxAllocation6);\n    data1.append(\"minAllocation6\", data.MinAllocation6);\n\n    data1.append(\"noofVesting\", data.NoofVesting);\n\n    data1.append(\"tier1MaxCap\", data.Tier1MaxCap);\n    data1.append(\"tier2MaxCap\", data.Tier2MaxCap);\n    data1.append(\"tier3MaxCap\", data.Tier3MaxCap);\n    data1.append(\"tier4MaxCap\", data.Tier4MaxCap);\n    data1.append(\"tier5MaxCap\", data.Tier5MaxCap);\n    data1.append(\"tier6MaxCap\", data.Tier6MaxCap);\n\n    data1.append(\"preSaleStartDateAndTime\", a);\n    data1.append(\"preSaleEndDateAndTime\", b);\n    data1.append(\"FCFSStartdate\", c);\n    data1.append(\"FCFSEnddate\", d);\n    data1.append(\"attributes\", JSON.stringify(inputList));\n    data1.append(\"softCapPercentage\", data.SoftCapPercentage);\n    data1.append(\"kycFirstName\", data.OwnerFname);\n    data1.append(\"kycSecondName\", data.OwnerLname);\n    data1.append(\"kycPassportPicture\", photo1);\n    if (account) {\n      try {\n        // debugger\n        // let res = await loadWeb3()\n        if (1) {\n          const epochpreStartTime =\n            new Date(data.preStartdate).getTime() / 1000;\n          const epochpreEndTime = new Date(data.preEnddate).getTime() / 1000;\n          const epochpFSFCStartTime =\n            new Date(data.FCFSStartdate).getTime() / 1000;\n          const epochpFSFCEndTime =\n            new Date(data.preEnddate).getTime() / 1000;\n          const minALLocation1 = new BigNumber(data.MinAllocation1).multiply(new BigNumber(10).pow(18));\n          const maxALLocation1 = new BigNumber(data.MaxAllocation1).multiply(new BigNumber(10).pow(18));\n          const minALLocation2 = new BigNumber(data.MinAllocation2).multiply(new BigNumber(10).pow(18));\n          const maxALLocation2 = new BigNumber(data.MaxAllocation2).multiply(new BigNumber(10).pow(18));\n          const minALLocation3 = new BigNumber(data.MinAllocation3).multiply(new BigNumber(10).pow(18));\n          const maxALLocation3 = new BigNumber(data.MaxAllocation3).multiply(new BigNumber(10).pow(18));\n          const minALLocation4 = new BigNumber(data.MinAllocation4).multiply(new BigNumber(10).pow(18));\n          const maxALLocation4 = new BigNumber(data.MaxAllocation4).multiply(new BigNumber(10).pow(18));\n          const minALLocation5 = new BigNumber(data.MinAllocation5).multiply(new BigNumber(10).pow(18));\n          const maxALLocation5 = new BigNumber(data.MaxAllocation5).multiply(new BigNumber(10).pow(18));\n          const minALLocation6 = new BigNumber(data.MinAllocation6).multiply(new BigNumber(10).pow(18));\n          const maxALLocation6 = new BigNumber(data.MaxAllocation6).multiply(new BigNumber(10).pow(18));\n          // const maxALLocation6 = new BigNumber(\n          //   data.MaxAllocation6\n          // ).multiply(new BigNumber(10).pow(18));\n          const maxteir1 = new BigNumber(data.Tier1MaxCap).multiply(new BigNumber(10).pow(18));\n          const maxteir2 = new BigNumber(data.Tier2MaxCap).multiply(new BigNumber(10).pow(18));\n          const maxteir3 = new BigNumber(data.Tier3MaxCap).multiply(new BigNumber(10).pow(18));\n          const maxteir4 = new BigNumber(data.Tier4MaxCap).multiply(new BigNumber(10).pow(18));\n          const maxteir5 = new BigNumber(data.Tier5MaxCap).multiply(new BigNumber(10).pow(18));\n          const maxteir6 = new BigNumber(data.Tier6MaxCap).multiply(new BigNumber(10).pow(18));\n          const tokenPrice = new BigNumber(web3.utils.toWei(data.PresalePriceBNB , 'ether'));\n          const amountallocated = new BigNumber(data.AmountAllocatedPresale);\n          const amountToSend = amountallocated + (0.02 * amountallocated);\n          const softCapPer = new BigNumber(data.SoftCapPercentage);\n          try {\n            const contract = getIERC20Contract(data.PContractAddress, web3);\n            const approved = await contract.methods\n              .approve(\n                Environment.deployerContractAddress,\n                web3.utils.toWei((amountToSend), \"ether\"))\n              \n              .send({ from: account });\n            if (approved.status) {\n              const arg = {\n                nameOfProject: data.Projectname.toString(),\n                _saleStartTime: epochpreStartTime.toString(),\n                _fcfsStartTime: epochpFSFCStartTime.toString(),\n                _fcfsEndTime: epochpFSFCEndTime.toString(),\n                _saleEndTime: epochpreEndTime.toString(),\n                _projectOwner: account.toString(),\n                _tokenSender: account.toString(),\n                maxAllocTierOne: maxALLocation1.toString(),\n                maxAllocTierTwo: maxALLocation2.toString(),\n                maxAllocTierThree: maxALLocation3.toString(),\n                maxAllocTierFour: maxALLocation4.toString(),\n                maxAllocTierFive: maxALLocation5.toString(),\n                maxAllocTierSix: maxALLocation6.toString(),\n                minAllocTierOne: minALLocation1.toString(),\n                minAllocTierTwo: minALLocation2.toString(),\n                minAllocTierThree: minALLocation3.toString(),\n                minAllocTierFour: minALLocation4.toString(),\n                minAllocTierFive: minALLocation5.toString(),\n                minAllocTierSix: minALLocation6.toString(),\n                tokenToIDO: data.PContractAddress.toString(),\n                tokenDecimals: data.Decimals.toString(),\n                _numberOfIdoTokensToSell: amountallocated.toString(),\n                _tokenPriceInBUSD: tokenPrice.toString(),\n                _tierOneMaxCap: maxteir1.toString(),\n                _tierTwoMaxCap: maxteir2.toString(),\n                _tierThreeMaxCap: maxteir3.toString(),\n                _tierFourMaxCap: maxteir4.toString(),\n                _tierFiveMaxCap: maxteir5.toString(),\n                _tierSixMaxCap: maxteir6.toString(),\n                _softCapPercentage: softCapPer.toString(),\n                _numberOfVestings: data.NoofVesting.toString(),\n                _vestingPercentages: vestPer,\n                _vestingUnlockTimes: vestingtime,\n              };\n              // console.log(\"arrgument we have\", arg)\n              let deployer = await CreatePool(arg);\n              contractAddressDeployed = await deployer.events\n                .OwnershipTransferred[0].address;\n              //   console.log(\"deployer\",deployer, contractAddressDeployed)\n              data1.append(\"contractAddressDeployed\", contractAddressDeployed);\n              data1.append(\"projectFee\", priceproject);\n              data1.append(\"isPresale\", 'true');\n              setOpens(true);\n              axios\n                .post(`${API_URL}/v1/Project/addProject`, data1, {\n                  headers: { \"Content-Type\": \"multipart/form-data\" },\n                })\n                .then((response) => {\n                  console.log(\"response\", response);\n                  setOpens(false);\n                  history.push(\"/\");\n                  toast.success(\n                    \"Project Added Successfully, Your Project will be Displayed Once admin approve\",\n                    {\n                      position: \"top-right\",\n                      autoClose: 2000,\n                    }\n                  );\n                  // history.push(\"/\");\n                  // console.log(\"success response\", response)\n                })\n                .catch((err) => {\n                  setOpens(false);\n                  toast.warning(\"Error While Adding Project\", {\n                    position: \"top-right\",\n                    autoClose: 2000,\n                  });\n                  // console.log(\"error responce\", err)\n                });\n            }\n          } catch (err) {\n            setOpens(false);\n            console.log(\"approve err\", err);\n            throw err;\n          }\n        } else {\n          setOpens(false);\n          console.log(\"not hitting api \");\n          toast.warning(\"Error While Adding Project\", {\n            position: \"top-right\",\n            autoClose: 2000,\n          });\n        }\n        // console.log(\"newaaaa=========\",res.status)\n      } catch (e) {\n        setOpens(false);\n        console.log(e);\n      }\n    }\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n  return (\n    <>\n      <Backdrop className=\"loader\" sx={{ color: \"#fff\" }} open={opens}>\n        <img\n          src=\"/projectstarter/header/loader.svg\"\n          alt=\"\"\n          className=\"img-fluid shdshhgdss\"\n        />\n      </Backdrop>\n      <div className={dark}>\n        <section className=\"IdoForm-main\">\n          <Navbar />\n          <div className=\"container-fluid p-0 m-0\">\n            <div className=\"row\">\n              <div className=\"col-12 p-0 mx-auto \">\n                <div className=\"top-banner text-center ptb\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-7 col-10 mx-auto text-center\">\n                      <div className=\"headWrapper\">\n                        <h2>Projectstarter IDO Request</h2>\n                        <p>\n                          This form is for project owners to submit their\n                          projects for\n                          <br /> us to review as a potential IDO. DO NOT submit\n                          this form\n                          <br /> if you are looking to participate in an IDO.\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"idoform\">\n                  <ValidatorForm className=\"form-contact\">\n                    <div className=\"row\">\n                      <div className=\"col-md-8 col-12 order-md-0 order-1\">\n                        <div className=\"row p-md-0\">\n                          <div className=\"col-md-6 pl-md-0\">\n                            <div className=\"form-group \">\n                              <label For=\"Projectname\">\n                                Project Name{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n\n                              <TextField\n                                required\n                                id=\"Projectname\"\n                                name=\"Projectname\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"Enter your project name\"\n                                margin=\"dense\"\n                                {...register(\"Projectname\")}\n                                error={errors.Projectname ? true : false}\n                              />\n                              <Typography\n                                variant=\"inherit\"\n                                color=\"textSecondary\"\n                              >\n                                {errors.Projectname?.message}\n                              </Typography>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6 pr-md-0\">\n                            <div className=\"form-group \">\n                              <label For=\"symbol\">\n                                Project Symbol{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n\n                              <TextField\n                                required\n                                id=\"symbol\"\n                                name=\"symbol\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"Enter your project symbol\"\n                                margin=\"dense\"\n                                {...register(\"symbol\")}\n                                error={errors.symbol ? true : false}\n                              />\n                              <Typography\n                                variant=\"inherit\"\n                                color=\"textSecondary\"\n                              >\n                                {errors.symbol?.message}\n                              </Typography>\n                            </div>\n                          </div>\n                          <div className=\"col-12 p-md-0\">\n                            <div className=\"form-group shsjsjsx\">\n                              <label For=\"description\">Description</label>\n\n                              <TextField\n                                required\n                                id=\"description\"\n                                type=\"number\"\n                                name=\"description\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"What is your project about (just quickly)\"\n                                margin=\"dense\"\n                                {...register(\"description\")}\n                                error={errors.description ? true : false}\n                                multiline\n                                rows={4}\n                              />\n                              <Typography\n                                variant=\"inherit\"\n                                color=\"textSecondary\"\n                              >\n                                {errors.description?.message}\n                              </Typography>\n                            </div>\n                          </div>\n                          <div className=\"col-12 p-md-0\">\n                            <div className=\"form-group\">\n                              <label For=\"PContractAddress\">\n                                Project Contract Address{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n\n                              <TextField\n                                required\n                                id=\"PContractAddress\"\n                                name=\"PContractAddress\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"Enter project contract address\"\n                                margin=\"dense\"\n                                {...register(\"PContractAddress\")}\n                                error={errors.PContractAddress ? true : false}\n                              />\n                              <Typography\n                                variant=\"inherit\"\n                                color=\"textSecondary\"\n                              >\n                                {errors.PContractAddress?.message}\n                              </Typography>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6 pl-md-0\">\n                            <div className=\"form-group \">\n                              <label For=\"ContactPersonName\">\n                                Contact Person Name{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n\n                              <TextField\n                                required\n                                id=\"ContactPersonName\"\n                                name=\"ContactPersonName\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"Enter Contact Person Name\"\n                                margin=\"dense\"\n                                {...register(\"ContactPersonName\")}\n                                error={errors.ContactPersonName ? true : false}\n                              />\n                              <Typography\n                                variant=\"inherit\"\n                                color=\"textSecondary\"\n                              >\n                                {errors.ContactPersonName?.message}\n                              </Typography>\n                            </div>\n                          </div>\n                          <div className=\"col-md-6 pr-md-0\">\n                            <div className=\"form-group\">\n                              <label For=\"ContactPersonEmail\">\n                                Contact Person Email{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n\n                              <TextField\n                                required\n                                id=\"ContactPersonEmail\"\n                                name=\"ContactPersonEmail\"\n                                variant=\"outlined\"\n                                fullWidth\n                                placeholder=\"Enter contact person email\"\n                                margin=\"dense\"\n                                {...register(\"ContactPersonEmail\")}\n                                error={errors.ContactPersonEmail ? true : false}\n                              />\n                              <Typography\n                                variant=\"inherit\"\n                                color=\"textSecondary\"\n                              >\n                                {errors.ContactPersonEmail?.message}\n                              </Typography>\n                            </div>\n                          </div>\n                          <div className=\"col-12 p-md-0\">\n                            <div className=\"form-group\">\n                              <label For=\"OwnerWalletAddress\">\n                                Token Owner Wallet Address{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n\n                              <TextField\n                                name=\"OwnerWalletAddress\"\n                                readonly\n                                variant=\"outlined\"\n                                value={account ? account : \"\"}\n                                fullWidth\n                                placeholder=\"Connect Your Wallet Please\"\n                                margin=\"dense\"\n                              // {...register('OwnerWalletAddress')}\n                              // error={errors.OwnerWalletAddress ? true : false}\n                              />\n                              {/* <Typography variant=\"inherit\" color=\"textSecondary\">\n                                                                {errors.OwnerWalletAddress?.message}\n                                                            </Typography> */}\n                            </div>\n                          </div>\n                          <div className=\"col-12 p-md-0\">\n                            <hr className=\"borderbotom my-5\"></hr>\n                          </div>\n                          <section className=\"pesale-details\">\n                            <div className=\"row\">\n                              <div className=\"col-12 p-0\">\n                                <h5>Presale Details</h5>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"TotalTokenSupply\">\n                                    Total Supply of Token\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"TotalTokenSupply\"\n                                    type=\"number\"\n                                    name=\"TotalTokenSupply\"\n                                    variant=\"outlined\"\n                                    onWheel={(e) => e.target.blur()}\n                                    fullWidth\n                                    placeholder=\"Ex : 5000\"\n                                    margin=\"dense\"\n                                    {...register(\"TotalTokenSupply\")}\n                                    error={\n                                      errors.TotalTokenSupply ? true : false\n                                    }\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.TotalTokenSupply?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"AmountAllocatedPresale\">\n                                    Amount Allocated For Presale\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"AmountAllocatedPresale\"\n                                    type=\"number\"\n                                    onWheel={(e) => e.target.blur()}\n                                    name=\"AmountAllocatedPresale\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Ex : 2000\"\n                                    margin=\"dense\"\n                                    {...register(\"AmountAllocatedPresale\")}\n                                    error={\n                                      errors.AmountAllocatedPresale\n                                        ? true\n                                        : false\n                                    }\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.AmountAllocatedPresale?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"Decimals\">\n                                    Total Decimals\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"Decimals\"\n                                    type=\"number\"\n                                    name=\"Decimals\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Ex : 18\"\n                                    margin=\"dense\"\n                                    {...register(\"Decimals\")}\n                                    error={errors.Decimals ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Decimals?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"PresalePriceBNB\">\n                                    Presale Price In BUSD{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"PresalePriceBNB\"\n                                    type=\"number\"\n                                    name=\"PresalePriceBNB\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Ex : $0.005\"\n                                    margin=\"dense\"\n                                    {...register(\"PresalePriceBNB\")}\n                                    error={\n                                      errors.PresalePriceBNB ? true : false\n                                    }\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.PresalePriceBNB?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              {/* <div className=\"col-md-6 pl-md-0\">\n                                                                <div className=\"form-group \">\n                                                                    <label For=\"ListingPriceBNB\">Listing Price In BNB <span className='text-danger'>*</span></label>\n                                                                  \n                                                                    <TextField\n                                                                        required\n                                                                        id=\"ListingPriceBNB\"\n                                                                        type=\"number\"\n                                                                        name=\"ListingPriceBNB\"\n                                                                        variant='outlined'\n                                                                        fullWidth\n                                                                        placeholder='Ex : $0.005'\n                                                                        margin=\"dense\"\n                                                                        {...register('ListingPriceBNB')}\n                                                                        error={errors.ListingPriceBNB ? true : false}\n                                                                    />\n                                                                    <Typography variant=\"inherit\" color=\"textSecondary\">\n                                                                        {errors.ListingPriceBNB?.message}\n                                                                    </Typography>\n                                                                </div>\n                                                            </div> */}\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group\">\n                                  <label For=\"preStartdate\">\n                                    Presale Start Date & Time(UTC)\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"preStartdate\"\n                                    // type=\"date\"\n                                    name=\"preStartdate\"\n                                    variant=\"outlined\"\n                                    type=\"datetime-local\"\n                                    fullWidth\n                                    placeholder=\"mm/dd/yyyy --:-- --\"\n                                    margin=\"dense\"\n                                    className=\"calender-icon\"\n                                    {...register(\"preStartdate\")}\n                                    error={errors.preStartdate ? true : false}\n                                  />\n                                  {/* <img src=\"projectstarter-dark/calendar.png\" className=\"Calender-Img\" alt=\"calenderImg\" /> */}\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.preStartdate?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group\">\n                                  <label For=\"preEnddate\">\n                                    FCFS Start Date\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"FCFSStartdate\"\n                                    // type=\"date\"\n                                    name=\"FCFSStartdate\"\n                                    type=\"datetime-local\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"mm/dd/yyyy --:-- --\"\n                                    margin=\"dense\"\n                                    {...register(\"FCFSStartdate\")}\n                                    error={errors.FCFSStartdate ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.FCFSStartdate?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group\">\n                                  <label For=\"preEnddate\">\n                                    Presale End Date & Time(UTC)\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"preEnddate\"\n                                    // type=\"date\"\n                                    name=\"preEnddate\"\n                                    type=\"datetime-local\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"mm/dd/yyyy --:-- --\"\n                                    margin=\"dense\"\n                                    {...register(\"preEnddate\")}\n                                    error={errors.preEnddate ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.preEnddate?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"pancakePercentage\">\n                                    Soft Cap Percentage\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"SoftCapPercentage\"\n                                    type=\"number\"\n                                    name=\"SoftCapPercentage\"\n                                    variant=\"outlined\"\n                                    onWheel={(e) => e.target.blur()}\n                                    fullWidth\n                                    placeholder=\"1\"\n                                    margin=\"dense\"\n                                    {...register(\"SoftCapPercentage\")}\n                                    error={\n                                      errors.SoftCapPercentage ? true : false\n                                    }\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.SoftCapPercentage?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                            </div>\n                          </section>\n                          <div className=\"col-12 p-md-0\">\n                            <hr className=\"borderbotom my-5\"></hr>\n                          </div>\n                          <section className=\"pesale-details\">\n                            <div className=\"row\">\n                              <div className=\"col-12 p-0\">\n                                <h5>Project Socials</h5>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"website\">Website URL</label>\n                                  <TextField\n                                    id=\"website\"\n                                    name=\"website\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Website URL\"\n                                    margin=\"dense\"\n                                    {...register(\"website\")}\n                                  // error={errors.website ? true : false}\n                                  />\n                                  {/* <Typography variant=\"inherit\" color=\"textSecondary\">\n                                                                        {errors.website?.message}\n                                                                    </Typography> */}\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"Telegram\">\n                                    Telegram Group Link{\" \"}\n                                  </label>\n                                  <TextField\n                                    id=\"Telegram\"\n                                    name=\"Telegram\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Telegram Group Link\"\n                                    margin=\"dense\"\n                                    {...register(\"Telegram\")}\n                                  // error={errors.Telegram ? true : false}\n                                  />\n                                  {/* <Typography variant=\"inherit\" color=\"textSecondary\">\n                                                                        {errors.Telegram?.message}\n                                                                    </Typography> */}\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"Twitter\">Twitter</label>\n                                  <TextField\n                                    id=\"Twitter\"\n                                    name=\"Twitter\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Enter Twitter account\"\n                                    margin=\"dense\"\n                                    {...register(\"Twitter\")}\n                                  // error={errors.Twitter ? true : false}\n                                  />\n                                  {/* <Typography variant=\"inherit\" color=\"textSecondary\">\n                                                                        {errors.Twitter?.message}\n                                                                    </Typography> */}\n                                </div>\n                              </div>\n                            </div>\n                          </section>\n                          <div className=\"col-12 p-md-0\">\n                            <hr className=\"borderbotom my-5\"></hr>\n                          </div>\n                          <section className=\"pesale-details\">\n                            <div className=\"row\">\n                              <div className=\"col-12 p-0\">\n                                <h5>Allocation Limits</h5>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    Min Allocation For Emerald\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MinAllocation1\"\n                                    type=\"number\"\n                                    name=\"MinAllocation1\"\n                                    variant=\"outlined\"\n                                    onWheel={(e) => e.target.blur()}\n                                    fullWidth\n                                    placeholder=\"Min Allocation For Emerald\"\n                                    margin=\"dense\"\n                                    {...register(\"MinAllocation1\")}\n                                    error={errors.MinAllocation1 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MinAllocation1?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                    Max Allocation For Emerald\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n\n                                    id=\"MaxAllocation1\"\n                                    // type=\"number\"\n                                    name=\"MaxAllocation1\"\n                                    variant=\"outlined\"\n                                    onWheel={(e) => e.target.blur()}\n                                    fullWidth\n                                    placeholder=\"Max Allocation For Emerald\"\n                                    margin=\"dense\"\n                                    {...register(\"MaxAllocation1\")}\n                                    error={errors.MaxAllocation1 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MaxAllocation1?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    Min Allocation For Ruby\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MinAllocation2\"\n                                    type=\"number\"\n                                    name=\"MinAllocation2\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Min Allocation For Ruby\"\n                                    margin=\"dense\"\n                                    {...register(\"MinAllocation2\")}\n                                    error={errors.MinAllocation2 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MinAllocation2?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                    Max Allocation For  Ruby\n{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MaxAllocation2\"\n                                    type=\"number\"\n                                    name=\"MaxAllocation2\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Max Allocation For Ruby\"\n                                    margin=\"dense\"\n                                    {...register(\"MaxAllocation2\")}\n                                    error={errors.MaxAllocation2 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MaxAllocation2?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    Min Allocation For Sapphire\n\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MinAllocation3\"\n                                    type=\"number\"\n                                    name=\"MinAllocation3\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Min Allocation ForSapphire\"\n                                    margin=\"dense\"\n                                    {...register(\"MinAllocation3\")}\n                                    error={errors.MinAllocation3 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MinAllocation3?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                    Max Allocation For Sapphire\n{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MaxAllocation3\"\n                                    type=\"number\"\n                                    name=\"MaxAllocation3\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Max Allocation For Sapphire\"\n                                    margin=\"dense\"\n                                    {...register(\"MaxAllocation3\")}\n                                    error={errors.MaxAllocation3 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MaxAllocation3?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    Min Allocation For Gold\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MinAllocation4\"\n                                    type=\"number\"\n                                    name=\"MinAllocation4\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Min Allocation For Gold\"\n                                    margin=\"dense\"\n                                    {...register(\"MinAllocation4\")}\n                                    error={errors.MinAllocation4 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MinAllocation4?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                    Max Allocation For Gold{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MaxAllocation4\"\n                                    type=\"number\"\n                                    name=\"MaxAllocation4\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Max Allocation For Gold\"\n                                    margin=\"dense\"\n                                    {...register(\"MaxAllocation4\")}\n                                    error={errors.MaxAllocation4 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MaxAllocation4?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    Min Allocation For Platinum\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MinAllocation5\"\n                                    type=\"number\"\n                                    name=\"MinAllocation5\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Min Allocation For Platinum\"\n                                    margin=\"dense\"\n                                    {...register(\"MinAllocation5\")}\n                                    error={errors.MinAllocation5 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MinAllocation5?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                    Max Allocation For Platinum{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MaxAllocation5\"\n                                    type=\"number\"\n                                    name=\"MaxAllocation5\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Max Allocation For Platinum\"\n                                    margin=\"dense\"\n                                    {...register(\"MaxAllocation5\")}\n                                    error={errors.MaxAllocation5 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MaxAllocation5?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    Min Allocation For Diamond\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"MinAllocation6\"\n                                    type=\"number\"\n                                    name=\"MinAllocation6\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Min Allocation For Diamond\"\n                                    margin=\"dense\"\n                                    {...register(\"MinAllocation6\")}\n                                    error={errors.MinAllocation6 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MinAllocation6?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                    Max Allocation For Diamond{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"MaxAllocation6\"\n                                    type=\"number\"\n                                    name=\"MaxAllocation6\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Max Allocation For Diamond\"\n                                    margin=\"dense\"\n                                    {...register(\"MaxAllocation6\")}\n                                    error={errors.MaxAllocation6 ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.MaxAllocation6?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                            </div>\n                          </section>\n                          <div className=\"col-12 p-md-0\">\n                            <hr className=\"borderbotom my-5\"></hr>\n                          </div>\n\n                          <section className=\"pesale-details\">\n                            <div className=\"row\">\n                              <div className=\"col-12 p-0\">\n                                <h5>Hard Cap <br/> <span style={{fontSize: 14, color: \"crimson\"}}>*The allocated supply for presale must be divided in 6 pools. The sum of all pools must equal the allocated presale supply.</span> </h5>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                  Emerald MaxCap\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"Tier1MaxCap\"\n                                    type=\"number\"\n                                    name=\"Tier1MaxCap\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Emerald MaxCap\"\n                                    margin=\"dense\"\n                                    {...register(\"Tier1MaxCap\")}\n                                    error={errors.Tier1MaxCap ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Tier1MaxCap?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                  Ruby MaxCap{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"Tier2MaxCap\"\n                                    type=\"number\"\n                                    name=\"Tier2MaxCap\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Ruby MaxCap\"\n                                    margin=\"dense\"\n                                    {...register(\"Tier2MaxCap\")}\n                                    error={errors.Tier2MaxCap ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Tier2MaxCap?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                  Sapphire MaxCap\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"Tier3MaxCap\"\n                                    type=\"number\"\n                                    name=\"Tier3MaxCap\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Sapphire MaxCap\"\n                                    margin=\"dense\"\n                                    {...register(\"Tier3MaxCap\")}\n                                    error={errors.Tier3MaxCap ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Tier3MaxCap?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                  Gold MaxCap{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"Tier4MaxCap\"\n                                    type=\"number\"\n                                    name=\"Tier4MaxCap\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Gold MaxCap\"\n                                    margin=\"dense\"\n                                    {...register(\"Tier4MaxCap\")}\n                                    error={errors.Tier4MaxCap ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Tier4MaxCap?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                  Platinum MaxCap\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"Tier5MaxCap\"\n                                    type=\"number\"\n                                    name=\"Tier5MaxCap\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Platinum MaxCap\"\n                                    margin=\"dense\"\n                                    {...register(\"Tier5MaxCap\")}\n                                    error={errors.Tier5MaxCap ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Tier5MaxCap?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MaxAllocation\">\n                                  Diamond MaxCap{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"Tier6MaxCap\"\n                                    type=\"number\"\n                                    name=\"Tier6MaxCap\"\n                                    onWheel={(e) => e.target.blur()}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Diamond MaxCap\"\n                                    margin=\"dense\"\n                                    {...register(\"Tier6MaxCap\")}\n                                    error={errors.Tier6MaxCap ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.Tier6MaxCap?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"MinAllocation\">\n                                    No of Vesting\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <TextField\n                                    required\n                                    id=\"NoofVesting\"\n                                    type=\"number\"\n                                    name=\"NoofVesting\"\n                                    variant=\"outlined\"\n                                    onWheel={(e) => e.target.blur()}\n                                    fullWidth\n                                    placeholder=\"eg:1,2,3,4\"\n                                    margin=\"dense\"\n                                    {...register(\"NoofVesting\")}\n                                    error={errors.NoofVesting ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.NoofVesting?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"App mt-3\">\n                                {inputList.map((x, i) => {\n                                  return (\n                                    <div className=\"box\">\n                                      <div className=\"row \">\n                                        <div className=\"col-sm-6 pl-0\">\n                                          <label>Vesting Percentages</label>\n                                          <div class=\"form-group\">\n                                            <TextValidator\n                                              fullWidth\n                                              type=\"text\"\n                                              name=\"VestingPercentages\"\n                                              // value={allData.form.description}\n                                              // onChange={handleChange}\n                                              // value={x.type}\n                                              value={x.trait_type}\n                                              onWheel={(e) => e.target.blur()}\n                                              onChange={(e) =>\n                                                handleInputChange(e, i)\n                                              }\n                                              placeholder=\"Enter Vesting Percentages\"\n                                              className=\"input-fields\"\n                                              variant=\"outlined\"\n                                            // validators={['required']}\n                                            // errorMessages={['Trait Type is empty']}\n                                            />\n                                          </div>\n                                        </div>\n                                        <div className=\"col-sm-6 pr-md-0\">\n                                          <label>Vesting Unlock Times</label>\n                                          <div class=\"form-group\">\n                                            <TextValidator\n                                              fullWidth\n                                              // type=\"date\"\n                                              name=\"VestingUnlockTimes\"\n                                              type=\"datetime-local\"\n                                              // value={allData.form.description}\n                                              // onChange={handleChange}\n                                              value={x.value}\n                                              onChange={(e) =>\n                                                handleInputChange(e, i)\n                                              }\n                                              placeholder=\"/-/-/\"\n                                              className=\"ml10\"\n                                              variant=\"outlined\"\n                                            // validators={['required']}\n                                            // errorMessages={['Trait Name is Empty']}\n                                            />\n                                          </div>\n                                        </div>\n                                        <div className=\"btn-box\">\n                                          <ul className=\"list-inline mb-4\">\n                                            <li className=\"list-inline-item \">\n                                              {inputList.length !== 1 && (\n                                                <button\n                                                  className=\"  btn-common btn-common-1\"\n                                                  onClick={() =>\n                                                    handleRemoveClick(i)\n                                                  }\n                                                >\n                                                  Remove\n                                                </button>\n                                              )}\n                                              <br></br>\n                                            </li>\n                                            <li className=\"list-inline-item\">\n                                              {inputList.length - 1 === i && (\n                                                <button\n                                                  className=\" btn-common\"\n                                                  onClick={handleAddClick}\n                                                >\n                                                  {\" \"}\n                                                  Add More\n                                                </button>\n                                              )}\n                                            </li>\n                                          </ul>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  );\n                                })}\n                              </div>\n                            </div>\n                          </section>\n\n                          <section className=\"pesale-details\">\n                            <div className=\"row\">\n                              <div className=\"col-12 p-0\">\n                                <h5>KYC Details</h5>\n                              </div>\n                              <div className=\"col-md-6 pl-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"OwnerFname\">\n                                    First name of project owner\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"OwnerFname\"\n                                    name=\"OwnerFname\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Enter your first name\"\n                                    margin=\"dense\"\n                                    {...register(\"OwnerFname\")}\n                                    error={errors.OwnerFname ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.OwnerFname?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <div className=\"form-group \">\n                                  <label For=\"OwnerLname\">\n                                    Last name of project owner\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n\n                                  <TextField\n                                    required\n                                    id=\"OwnerLname\"\n                                    name=\"OwnerLname\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    placeholder=\"Enter your last name\"\n                                    margin=\"dense\"\n                                    {...register(\"OwnerLname\")}\n                                    error={errors.OwnerFname ? true : false}\n                                  />\n                                  <Typography\n                                    variant=\"inherit\"\n                                    color=\"textSecondary\"\n                                  >\n                                    {errors.OwnerLname?.message}\n                                  </Typography>\n                                </div>\n                              </div>\n                              <div className=\"col-12 pl-md-0 mb-4\">\n                                <div className=\"form-group\">\n                                  <label For=\"name\">\n                                    Upload id or passport{\" \"}\n                                    <span className=\"text-danger\">*</span>\n                                  </label>\n                                  <div className=\"upload-div text-center\">\n                                    <label className={uploadImage ? \"upload-btn opac-25\" : \"upload-btn\"} for=\"files\">\n                                      <img\n                                        src=\"\\projectstarter\\project-card\\cloud-image.svg\"\n                                        alt=\"\"\n                                        className=\"img-fluid overlay\"\n                                      />\n                                      <p>\n                                        <span className=\"dimColor\">\n                                          Drag & drop or{\" \"}\n                                        </span>\n                                        Browse{\" \"}\n                                      </p>\n                                    </label>\n                                    {uploadImage && (\n                                      <img\n                                        src={uploadImage}\n                                        alt=\"\"\n                                        className=\"img-fluid  imoo\"\n                                      />\n                                    )}\n                                  </div>\n                                  <input\n                                    fullWidth\n                                    accept=\"image/gif, image/jpg, image/jpeg, image/png\"\n                                    type=\"file\"\n                                    name=\"image\"\n                                    autoComplet=\"off\"\n                                    onChange={catchImage}\n                                    className=\"input-fields d-none\"\n                                    id=\"files\"\n                                  />\n                                </div>\n                              </div>\n                              <div className=\"col-md-6 pr-md-0\">\n                                <ul className=\"list-inline mt-3 text-md-auto\">\n                                  {kycStatus == \"approved\" ? \n                                     <li className=\"list-inline-item\">\n                                     <button\n                                       className=\"btn-common\"\n                                       type=\"submit\"\n                                       onClick={handleSubmit(onSubmit)}\n                                     >\n                                       Submit\n                                     </button>\n                                   </li> : \"KYC Is Required\"\n                                  }\n                               \n                                  {/* <li className=\"list-inline-item\">\n                                    <button className=\"btn-common btn-common-clear\">\n                                      Clear Form\n                                    </button>\n                                  </li> */}\n                                </ul>\n                              </div>\n                            </div>\n                          </section>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4 col-12 order-md-1 order-0\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            <div className=\"form-group\">\n                              <label For=\"name\">\n                                Upload Logo{\" \"}\n                                <span className=\"text-danger\">*</span>\n                              </label>\n                              <div className=\"upload-div text-center\">\n                                <label className={uploadImage1 ? \"upload-btn opac-25\" : \"upload-btn\"} for=\"files1\">\n                                  <img\n                                    src=\"\\projectstarter\\project-card\\cloud-image.svg\"\n                                    alt=\"\"\n                                    className=\"img-fluid overlay\"\n                                  />\n                                  <p>\n                                    <span className=\"dimColor\">\n                                      Drag & drop or{\" \"}\n                                    </span>\n                                    Browse{\" \"}\n                                  </p>\n                                </label>\n                                {uploadImage1 && (\n                                  <img\n                                    src={uploadImage1}\n                                    alt=\"\"\n                                    className=\"img-fluid  imoo\"\n                                  />\n                                )}\n                              </div>\n                              <input\n                                fullWidth\n                                accept=\"image/gif, image/jpg, image/jpeg, image/png\"\n                                type=\"file\"\n                                name=\"image\"\n                                autoComplet=\"off\"\n                                onChange={catchImage1}\n                                className=\"input-fields d-none\"\n                                id=\"files1\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </ValidatorForm>\n                </div>\n              </div>\n            </div>\n          </div>\n          <Faqs />\n        </section>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default IdoForm;\n","import React from 'react';\nimport './footersecondary.scss';\nimport { useSelector } from 'react-redux'\nfunction FooterSecondary() {\n    const dark = useSelector(state => state.UserReducer.theme);\n    return (\n        <>\n            <div className={dark}>\n                <section className=\"footerSecondary-main ptb\">\n                    <div className=\"container\">\n                        <div className=\"row ptb\">\n                            <div className=\"col-md-6 text-center my-auto\">\n                                <img src=\"\\projectstarter-dark\\logo.svg\" className='img-fluid' alt=\"logo\" />\n                            </div>\n                            <div className=\"col-sm-6 text-center my-auto\">\n                                <p className='mt-md-0 '>© PROJECTSTARTER - 2022 COPYRIGHT</p>\n                            </div>\n                            {/* <div className=\"col-12\">\n                                <div className=\"footerS-inner ptb\">\n                                    \n                                    <img src=\"\\projectstarter\\header\\logo.svg\" className='img-fluid' alt=\"logo\" />\n                                    <p className='mt-md-0 mt-3 '>© PROJECTSTARTER - 2021 COPYRIGHT</p>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </>\n    )\n}\n\nexport default FooterSecondary\n","import React, { useState, useEffect } from 'react';\nimport Navbar from '../landing/header/Navbar'\nimport './admin.scss'\nimport { Link, useParams } from \"react-router-dom\";\nimport FooterSecondary from '../footerSecondary/FooterSecondary'\nimport { useSelector } from 'react-redux'\nimport { API_URL } from '../../utils/ApiURL';\nimport { useWeb3React } from '@web3-react/core';\nimport { toast } from 'react-toastify';\nimport { Backdrop } from '@material-ui/core';\nimport axios from 'axios';\nimport Footer from '../landing/footer/Footer';\nfunction Admin() {\n    const dark = useSelector(state => state.UserReducer.theme);\n    const [allprojectss, setallprojectss] = useState([]);\n    const [searchTerm, setsearchTerm] = useState('');\n    const [itemlength, setitemlength] = useState(10);\n    const { account } = useWeb3React();\n    const [opens, setOpens] = useState(false);\n    const LoadMoreItems = () => {\n        const a = parseInt(itemlength) + 5\n        setitemlength(a)\n    };\n    const allprojects = () => {\n        setOpens(true)\n        axios.post(`${API_URL}/v1/Project/getAllUserProject`,{ address: account })\n            .then((response) => {\n                setOpens(false)\n                setallprojectss(response.data.data)\n                console.log(\"respdsvskjbfwejbcwebvsebfebfeb\", response)\n            })\n            .catch((err) => {\n                setOpens(false)\n                toast.warning('Error While Geting Detail', {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                });\n                return false;\n            })\n    }\n\n    \n    // console.log(\"all nft data\", allnft)\n    useEffect(() => {\n        allprojects()\n    }, [account])\n    const handleSearch = (e) => {\n        // search(e.target.value);\n        const hgf = e.target.value;\n        setsearchTerm(hgf)\n    }\n    console.log(\"newsearch\", searchTerm)\n    // console.log(\"stae data\",allprojectss)\n    // let userlike\n    const allproj = allprojectss?.filter((elem, index) => {\n        console.log(\"scbabhasbsabhasvhhsabcsahc\")\n        if (searchTerm === null) {\n            console.log(\"scbabhasbsabhasvhhsabcsahc 222222\")\n            return elem\n        }\n        else if (elem?.projectName.toLowerCase().includes(searchTerm.toLowerCase())) {\n            // const startpresaledate = elem?.preSaleStartDateAndTime.split('T')[0];\n            return (\n                <tr index={index}>\n                    <td scope=\"row\">\n                        <ul className='list-inline d-flex align-items-center'>\n                            <li className='list-inline-item'>\n                                <img src={elem?.logoURL} alt=\"img\" className=' roundImg' />\n                            </li>\n                            <li className='list-inline-item imgDetail'>\n                                <p>{elem?.projectName}</p>\n                                <p>{elem?.symbol}</p>\n                            </li>\n                        </ul>\n                    </td>\n                    {/* <td>{elem?.websiteLink}</td> */}\n                    {/* <td>{elem?.preSaleStartDateAndTime?.split('T')[0]}</td> */}\n                    <td className=' truncate '>{elem?.contractAddress}</td>\n                    <td>\n                    </td>\n                    <td>\n                        <Link to={`/admindetail/${elem?._id}`} >\n                            <button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                </tr>\n            )\n        }\n\n    })\n        .slice(0, itemlength).map((elem, index) => {\n            // const startpresaledate = elem?.preSaleStartDateAndTime?.split('T')[0];\n            return (\n                <tr index={index}>\n                    <td scope=\"row\">\n                        <ul className='list-inline d-flex align-items-center'>\n                            <li className='list-inline-item'>\n                                <img src={elem?.logoURL} alt=\"img\" className=' roundImg' />\n                            </li>\n                            <li className='list-inline-item imgDetail'>\n                                <p>{elem?.projectName}</p>\n                                <p>{elem?.symbol}</p>\n                            </li>\n                        </ul>\n                    </td>\n                    {/* <td>{elem?.websiteLink}</td>\n                    <td>{elem?.preSaleStartDateAndTime?.split('T')[0]}</td> */}\n                    <td className=' truncate '>\n                        <h6 className=\"asjbajsabsj\">{elem?.contractAddress}</h6>\n                    </td>\n                    <td>\n                        {elem?.statusOfApplication}\n                    </td>\n                    <td><Link to={`/admindetail/${elem?._id}`}><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                </tr>\n            )\n        })\n\n\n    return (\n        <>\n            <Backdrop className=\"loader\" sx={{ color: '#fff' }} open={opens}>\n                <img src=\"/projectstarter/header/loader.svg\" alt=\"\" className=\"img-fluid shdshhgdss\" />\n            </Backdrop>\n            <div className={dark}>\n                <section className='admin'>\n                    <Navbar />\n                    <div className=\"container-fluid mt-5\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-10 m-auto\">\n                                <div className='table-main '>\n                                    <div className=\"filter-input-div\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-3 col-12 mb-3 order-1 order-md-0\">\n                                                <h3>All Projects</h3>\n                                            </div>\n                                            <div className=\"col-md-5 order-2 mb-3 order-md-1\">\n                                                <input type=\"text\" className=\"sdsj\" type=\"search\" onChange={handleSearch} placeholder='Search project...' />\n                                            </div>\n                                            {/* <div className=\"col-md-4 col-12 mb-3 order-1 order-md-2\">\n                                        <ul className='list-inine'>\n                                            <li className='list-inline-item'>\n                                                <select className='btn-common-outline' name=\"Sort by\" id=\"Sort by\">\n                                                    <option value=\"Filter\">Sort-by</option>\n                                                    <option value=\"Filter\">Jawad</option>\n                                                </select>\n                                            </li>\n                                            <li className='list-inline-item'><button className='btn-common-outline'><img src=\"projectstarter/admin/filter.svg\" className='mr-1' alt=\"\" /> Filter</button></li>\n                                        </ul>\n                                    </div> */}\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=''>\n                                                <div className=\"table-responsive\">\n                                                    <table class=\"table table-striped custom-table\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th scope=\"col\">Name</th>\n                                                                {/* <th scope=\"col\">Website</th>\n                                                                <th scope=\"col\">Starting Date</th> */}\n                                                                <th scope=\"col\">Contract Address</th>\n                                                                <th scope=\"col\">Status</th>\n                                                                <th scope=\"col\">Action</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {allproj}\n                                                            {/* <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin.png\" alt=\"img\" className=' roundImg' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td className='text-success'><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin2.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td className='text-danger'><strong>Rejected</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td className='text-warning'><strong>PENDING</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin2.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin2.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin2.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr>\n                                                    <tr>\n                                                        <td scope=\"row\">\n                                                            <ul className='list-inline d-flex align-items-center'>\n                                                                <li className='list-inline-item'>\n                                                                    <img src=\"projectstarter/project-card/admin2.png\" alt=\"img\" className='img-fluid' />\n                                                                </li>\n                                                                <li className='list-inline-item imgDetail'>\n                                                                    <p>FANADISE</p>\n                                                                    <p>FAN</p>\n                                                                </li>\n                                                            </ul>\n                                                        </td>\n                                                        <td className='common-color'>Fanadise.com</td>\n                                                        <td>20-Dec-2021</td>\n                                                        <td className=' truncate '>0x87B2E9E0565788...</td>\n                                                        <td><strong>APPROVED</strong></td>\n                                                        <td><Link to='/admindetail'><button className='btn-common buttonCustom m-0'>Details</button></Link></td>\n                                                    </tr> */}\n                                                        </tbody>\n                                                    </table>\n\n                                                </div> <div className='text-center ptb20'>\n                                                    {allprojectss.length > itemlength ?\n                                                        <button className='btn-common-outline' onClick={LoadMoreItems}>Load More</button>\n                                                        :\n                                                        <button className='btn-common-outline'>No More Items</button>\n                                                    }\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <FooterSecondary /></div>\n                <Footer />\n        </>\n    )\n}\n\nexport default Admin\n","// to do... proptypes? error handling?\nimport { Card } from \"@material-ui/core\";\nimport InnerHTML from \"dangerously-set-html-content\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    this.loadBlockpassWidget();\n  }\n\n  loadBlockpassWidget = () => {\n    const blockpass = new window.BlockpassKYCConnect(\n      \"projectstarter\", // service client_id from the admin console\n      {\n        refId: \"123\", // assign the local user_id of the connected user\n      }\n    );\n\n    blockpass.startKYCConnect();\n\n    blockpass.on(\"KYCConnectSuccess\", () => {\n      //add code that will trigger when data have been sent.\n    });\n  };\n\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const content = `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <script src= 'https://cdn.blockpass.org/widget/scripts/release/3.0.2/blockpass-kyc-connect.prod.js'></script>\n      </head>\n      <body class=\"c16\">\n        <button id=\"blockpass-kyc-connect\">Verify with Blockpass</button>\n        <button onclick=\"Test()\">Verify</button>\n        <script>\n          function Test() {\n            alert(\"working\");\n            const blockpass = new BlockpassKYCConnect('projectstarter')\n            blockpass.startKYCConnect()\n            \n            blockpass.on('KYCConnectSuccess', () => {  \n              alert('Success!')\n            })\n          }\n        </script> \n      </body>\n    </html>`;\n    return (\n      <div>\n        <h1>Hello {this.props.name}.</h1>\n        <p>The time is {this.state.date.toLocaleTimeString()}.</p>\n        <button id=\"blockpass-kyc-connect\">Verify with Blockpass</button>\n        <InnerHTML html={content} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Welcome name=\"Brendan\" />, document.getElementById(\"root\"));\n\nexport default Welcome;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport './admin-detail.scss'\nimport { useParams } from 'react-router';\nimport Navbar from '../landing/header/Navbar'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { API_URL } from '../../utils/ApiURL';\nimport { toast } from 'react-toastify';\nimport { Backdrop } from '@material-ui/core';\nimport { Finilzeee } from '../../hooks/tierInfoFetchers';\n// import { useWeb3React } from '@web3-react/core'\n// import { useCallback } from 'react'\n// import useWeb3 from './useWeb3'\n// import { getPoolContract } from '../../utils/contractHelpers';\nimport axios from 'axios';\nimport {\n    TextField,\n    Typography,\n} \nfrom '@material-ui/core';\nimport FooterSecondary from '../footerSecondary/FooterSecondary';\nimport { useSelector } from 'react-redux'\nfunction AdminDetail() {\n    const [opens, setOpens] = useState(false);\n    const [uploadImage, updateuploadImage] = useState('');\n    const [uploadImage1, updateuploadImage1] = useState(\"\");\n    const [Finalizestatus, setFinalizestatus] = useState('');\n    const { FSale } = Finilzeee();\n    const [singleproject, setsingleproject] = useState({\n        contractAddress: '', projectName: '', symbol: '', projectDescription: '', contactPersonWalletAddress: '', contactPersonName: '', contactPersonEmail: '',\n        Website: '', Twitter: '', Telegram: '', totalSupplyOfToken: '', amountAllocatedForPresale: '', tokenDecimals: '', tokenPriceInBNB: '', preSaleStartDateAndTime: '',\n        preSaleEndDateAndTime: '', FCFSStartdate: '', maxAllocation1: '', maxAllocation2: '', maxAllocation3: '', maxAllocation4: '', maxAllocation5: '', maxAllocation6: '',\n        minAllocation1: '', minAllocation2: '', minAllocation3: '', minAllocation4: '', minAllocation5: '', minAllocation6: '',\n        noofVesting: '', tier1MaxCap: '', tier2MaxCap: '', tier3MaxCap: '', tier4MaxCap: '', tier5MaxCap: '', tier6MaxCap: '', softCapPercentage: '', kycFirstName: '',\n        kycSecondName: ''\n        }\n    );\n\n    const dark = useSelector(state => state.UserReducer.theme);\n    const { id } = useParams();\n    // console.log(\"your id was\", id)\n\n    const FinalizeSale = useCallback(async () => {\n        try {\n            // setShowLoader(true)\n            setOpens(true);\n            const tx = await FSale(singleproject?.contractAddressDeployed);\n            if (tx.status) {\n                Finaliz();\n                // await setTxstatus(tx.status);\n                // await setstackbalance(\"\");\n                setOpens(false);\n                // await getStakedbalance();\n                // setShowLoader(false)\n                // setInputBusd('')\n                // close()\n            }\n        } catch (err) {\n            setOpens(false);\n            // setShowLoader(false)\n            console.log(\"err22\", err);\n        }\n    });\n\n    const singleprojectdetail = (e) => {\n        setOpens(true)\n        axios.post(`${API_URL}/v1/Project/getDetailOfSingleProjectById`, { _id: id })\n            .then((response) => {\n                setOpens(false)\n                setsingleproject(response.data.data)\n                console.log(\"single project detail\", response)\n            })\n            .catch((err) => {\n                setOpens(false)\n                toast.warning('Error While Geting Detail', {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                });\n                return false;\n            })\n    }\n    \n    const Finaliz = () => {\n        console.log(\"sigle id we have\", singleproject._id)\n        setOpens(true)\n        axios.post(`${API_URL}/v1/Project/finalizeProjectStatus`, { _id: singleproject._id })\n            .then((response) => {\n                setOpens(false)\n                setFinalizestatus(response.data.data.finalizeStatus)\n                toast.success('Project successfully finalize', {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                });\n\n                window.location.reload();\n\n                // console.log(\"we have here finalize project here\", response)\n            })\n            .catch((err) => {\n                setOpens(false)\n                toast.warning('Error While Geting Detail', {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                });\n                return false;\n            })\n    }\n\n    const lottery = () => {\n        // console.log(\"sigle id we have\", singleproject._id)   \n        setOpens(true)\n        axios.post(`${API_URL}/v1/Lottery/addLottery`, { contractAddressDeployed: singleproject.contractAddressDeployed })\n            .then((response) => {\n                setOpens(false)\n                setFinalizestatus(response.data.data)\n                toast.success('Lottery successfully Done', {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                });\n\n                // window.location.reload();\n\n                // console.log(\"we have here lottery project here\", response)\n            })\n            .catch((err) => {\n                setOpens(false)\n                toast.warning('Error While Geting Detail', {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                });\n                return false;\n            })\n    }\n\n    const FinalizeSaless = () => {\n        toast.error('You have already finalize your sakle', {\n            position: \"top-right\",\n            autoClose: 5000,\n        });\n    }\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setsingleproject(singleproject => ({ ...singleproject, [name]: value }));\n        // const value = event.target.value;\n        // setsingleproject(singleproject => ({ ...singleproject, projectName: value }));\n        // [event.target.name] = event.target.value;\n        // setsingleproject({ formData });\n        // console.log(\"============================\", event.target.value)\n    }\n\n\n    useEffect(() => {\n        singleprojectdetail()\n        // finalizetrue()\n    }, [id])\n\n    // useEffect(() => {\n    //     finalizetrue()\n    // }, [])\n\n    return (\n        <>\n            {/* <button className=\"ahbashb\" onClick={Finaliz}>please finalize</button> */}\n            <Backdrop className=\"loader\" sx={{ color: '#fff' }} open={opens}>\n                <img src=\"/projectstarter/header/loader.svg\" alt=\"\" className=\"img-fluid shdshhgdss\" />\n            </Backdrop>\n            <div className={dark}>\n                <section className='adminDetail-main'>\n                    <Navbar />\n                    <div className=\"container-fluid ptb\">\n                        <div className=\"row\">\n                            <div className=\"col-10 m-auto\">\n                                <div className=\"idoform \">\n                                    <ValidatorForm className=\"form-contact\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12 col-12 order-md-1 order-0\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <div className='form-group'>\n                                                            <h3 className=\"ahashab\">Please Finalize Your Project Here</h3>\n                                                            <p className=\"avsas\">First click and agree on finalize button</p>\n                                                            {singleproject?.finalizeStatus == true ?\n                                                              <button className=\"ahbashb sjbndsjbdsjd\" onClick={FinalizeSaless}>Finalize</button>\n                                                             :\n                                                             <button className=\"ahbashb\" onClick={FinalizeSale}>Finalize</button>\n                                                            }\n                                                        </div>\n                                                        <div className=\"col-12 p-0\">\n                                                        <div className='form-group'>\n                                                            <h3 className=\"ahashab\">Start Your Lottery Here</h3>\n                                                              <button className=\"ahbashb sjbndsjbdsjd\" onClick={lottery}>Start Lottery</button>\n                                                        </div>\n                                                    </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ValidatorForm>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <FooterSecondary />\n            </div>\n        </>\n    )\n}\n\nexport default AdminDetail\n","import { useState } from \"react\";\n\nconst Step = ({dark,setStep}) => {\n  const [inp, setInp] = useState(false);\n  const submit = () => {\n    if(inp){\n      setStep(\"step2\");\n    }\n  }\n\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5 mb-3\">\n          <div class=\"card-header text-right py-4\">\n            {\" \"}\n            {/* <select className=\"btn-common-grey\" name=\"English\" id=\"English\">\n              <option value=\"Filter\">English</option>\n              <option value=\"Filter\">Urdu</option>\n            </select> */}\n          </div>\n          {/**************************  before verification ***************************/}\n          <div class=\"card-body  text-secondary\">\n            <h3 className=\"text-center mt-4\">Help us verify your identity</h3>\n            <h5 class=\"card-title mt-4\">Identity verification Consent</h5>\n            <p class=\"card-text my-4\">\n              At vero eos et accusamus et iusto odio dignissimos ducimus qui\n              blanditiis praesentium voluptatum deleniti atque corrupti quos\n              dolores et quas molestias excepturi sint occaecati cupiditate non\n              provident, similique sunt in culpa qui officia deserunt mollitia\n              animi, id est laborum et dolorum fuga. Et harum quidem rerum\n              facilis est et expedita distinctio. Temporibus autem quibusdam et\n              aut officiis debitis aut rerum necessitatibus saepe eveniet ut et\n              voluptates repudiandae sint et molestiae non recusandae.\n            </p>\n            <ul className=\"list-inline\">\n              <li className=\"list-inline-item\">\n                <input onChange={()=>setInp(!inp)} type=\"checkbox\" name=\"\" id=\"\" />\n              </li>\n              <li className=\"list-inline-item\">\n                <p>\n                  I agree to the above statement, and i have read{\" \"}\n                  <span style={{color: '#1fa5ff'}}>Privacy Policy.</span>{\" \"}\n                </p>\n              </li>\n            </ul>\n            <div className=\"form-group text-center mt-5\">\n              {/* <a href=\"https://verify-with.blockpass.org/?clientId=projectstarter&serviceName=ProjectStarter.io&env=prod\"> */}\n                <button onClick={()=>submit()} className=\"btn-common mt-4 opac-75\">Continue</button>\n              {/* </a> */}\n            </div>\n          </div>\n          {/**************************  before verification ***************************/}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","const Step = ({dark, setStep}) => {\n    return (\n        <div className=\"Myprofile\">\n        <div className=\"form-group text-center\">\n            <img src={dark === 'dark' ? \"projectstarter/kyc/kycVerify-dark.svg\" : \"projectstarter/kyc/kycVerify.svg\"} className='img-fluid' alt=\"\" />\n            <img src=\"projectstarter/kyc/kycVerify.svg\" className='img-fluid d-none' alt=\"\" />\n        </div>\n        <div className=\"form-group text-center\">\n            <h3>Individual KYC Verification</h3>\n        </div>\n        <div className=\"form-group text-center\">\n            <p className='kycVeriP'>Each account has 1 KYC credit. If your verification fails, please contact <br /> an admin for more information before submitting again.</p>\n        </div>\n        <div className=\"form-group \">\n            <div class=\"card mt-5  mb-3\">\n                <div class=\"card-header text-right py-4\">  \n                    {/* <select className='btn-common-grey' name=\"English\" id=\"English\">\n                        <option value=\"Filter\">English</option>\n                        <option value=\"Filter\">Urdu</option>\n                    </select> */}\n                </div>\n                <div class=\"card-body  text-secondary\">\n                    <h3 className='text-center mt-4'>Let's Verify your identity.</h3>\n                    <div className=\"row ptb\">\n                        <div className=\"col-md-5 mx-auto \">\n\n                            <ul className=\"list-inline verifyCard\">\n                                <li className=\"list-inline-item\">\n                                    <img src={dark === 'dark' ? \"projectstarter/kyc/verifyidentity-dark.svg\" : \"projectstarter/kyc/verifyidentity.svg\"} alt=\"img\" />\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <p>Step 1:</p>\n                                    <p>Identity Document Verification</p>\n                                </li>\n                            </ul>\n                            {/* <ul className=\"list-inline mt-3 verifyCard \">\n                                <li className=\"list-inline-item\">\n                                    <img src={dark === 'dark' ? \"projectstarter/kyc/faceverification-dark.svg\" : \"projectstarter/kyc/faceverification.svg\"} alt=\"img\" />\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <p>Step 2:</p>\n                                    <p>Face Verification</p>\n                                </li>\n                            </ul> */}\n                        </div>\n                    </div>\n                    <div className=\"form-group text-center\">\n                        <button onClick={()=>setStep(\"step3\")} className='btn-common mt-4 opac-75'>Start Verificaton</button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n    );\n  };\n  \n  export default Step;\n  ","const Step = ({ dark, setStep, setDocumentName }) => {\n\n  const moveNext = (value) => {\n    setDocumentName(value);\n    setStep(\"step4\");\n  }\n\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5  mb-3\">\n          <div class=\"card-header py-4 text-right\">\n            {\" \"}\n            {/* <select className=\"btn-common-grey\" name=\"English\" id=\"English\">\n              <option value=\"Filter\">English</option>\n              <option value=\"Filter\">Urdu</option>\n            </select> */}\n          </div>\n          <div class=\"card-body  text-secondary\">\n            <h3 className=\"text-center mt-4\">\n              Choose the Document type you would like to use.\n            </h3>\n            <div className=\"row ptb\">\n              <div className=\"col-md-5 mx-auto \">\n                <ul onClick={()=>moveNext(\"National Id\")} className=\"list-inline verifyCard2 opac-75\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"projectstarter/kyc/Nid-dark.svg\"\n                          : \"projectstarter/kyc/Nid.svg\"\n                      }\n                      alt=\"img\"\n                    />\n                  </li>\n                  <li className=\"list-inline-item d-flex justify-content-between w-100\">\n                    <p>National Id</p>\n                    <img\n                      src=\"projectstarter/kyc/doctype-arrow.svg\"\n                      alt=\"arrowImg\"\n                    />\n                  </li>\n                </ul>\n                <ul onClick={()=>moveNext(\"Passport\")} className=\"list-inline mt-3 verifyCard2 opac-75\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"projectstarter/kyc/passporticon-dark.svg\"\n                          : \"projectstarter/kyc/passporticon.svg\"\n                      }\n                      alt=\"img\"\n                    />\n                  </li>\n                  <li className=\"list-inline-item d-flex justify-content-between w-100\">\n                    <p>Passport</p>\n                    <img\n                      src=\"projectstarter/kyc/doctype-arrow.svg\"\n                      alt=\"arrowImg\"\n                    />\n                  </li>\n                </ul>\n                <ul onClick={()=>moveNext(\"Driving License\")} className=\"list-inline mt-3 verifyCard2 opac-75\">\n                  <li className=\"list-inline-item\">\n                    <img\n                      src={\n                        dark === \"dark\"\n                          ? \"projectstarter/kyc/drivingicon-dark.svg\"\n                          : \"projectstarter/kyc/drivingicon.svg\"\n                      }\n                      alt=\"img\"\n                    />\n                  </li>\n                  <li className=\"list-inline-item d-flex justify-content-between w-100\">\n                    <p>Driving License</p>\n                    <img\n                      src=\"projectstarter/kyc/doctype-arrow.svg\"\n                      alt=\"arrowImg\"\n                    />\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","import Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\nimport React, { useState, useMemo } from \"react\";\nimport \"./style.scss\";\n\nconst Step = ({ dark, setStep, setCountry, country }) => {\n  const options = useMemo(() => countryList().getData(), []);\n  const changeHandler = (value) => {\n    setCountry(value);\n    setStep(\"step5\")\n  };\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5  mb-3\">\n          <div class=\"card-header py-4 text-right\">\n            {\" \"}\n            {/* <select className=\"btn-common-grey\" name=\"English\" id=\"English\">\n              <option value=\"Filter\">English</option>\n              <option value=\"Filter\">Urdu</option>\n            </select> */}\n          </div>\n          <div class=\"card-body  text-secondary\">\n            <h3 className=\"text-center mt-4\">\n              Choose your National ID issuing country/region.\n            </h3>\n            <div className=\"row ptb\">\n              <div className=\"col-md-8 mx-auto \">\n                <div\n                  className={\n                    \"filter-input-div pb-5 \" + (dark === \"dark\" ? \"dark\" : \"\")\n                  }\n                >\n                  <Select\n                    type=\"text\"\n                    options={options}\n                    value={country}\n                    onChange={changeHandler}\n                    placeholder=\"Search by country name\"\n                  />\n                  {/* <img\n                    src=\"projectstarter/kyc/search.svg\"\n                    alt=\"\"\n                    className=\"searchImg\"\n                  /> */}\n                </div>\n                {/* <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <ul className=\"list-inline mb-4\">\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/pk.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Pakistan</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/argentina.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Argentina</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/pk.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Pakistan</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/argentina.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Argentina</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/pk.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Pakistan</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/argentina.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Argentina</p>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"col-md-6 \">\n                    <ul className=\"list-inline\">\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/afg.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Afganistan</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/astr.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Australia</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/afg.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Afganistan</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/astr.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Australia</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/afg.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Afganistan</p>\n                      </li>\n                      <li className=\"list-inline-item d-flex align-items-center mb-4\">\n                        <img\n                          src=\"projectstarter/kyc/cflags/astr.svg\"\n                          alt=\"\"\n                          className=\"mr-2\"\n                        />\n                        <p>Australia</p>\n                      </li>\n                    </ul>\n                  </div>\n                </div> */}\n\n                {/*  */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","const Step = ({ dark, setStep }) => {\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5  mb-3\">\n          <div class=\"card-header py-4 text-right\">\n            {\" \"}\n            {/* <select className=\"btn-common-grey\" name=\"English\" id=\"English\">\n              <option value=\"Filter\">English</option>\n              <option value=\"Filter\">Urdu</option>\n            </select> */}\n          </div>\n          <div class=\"card-body  text-secondary\">\n            <h3 className=\"text-center mt-4\">\n              Show the front side of your Pakistan National ID.\n            </h3>\n            <div className=\"row ptb\">\n              <div className=\"col-md-8 mx-auto \">\n                <div className=\"photoVideo-div\">\n                  <ul className=\"list-inline\">\n                    <li className=\"list-inline-item d-flex align-items-center mb-3\">\n                      <img\n                        src=\"projectstarter/kyc/correctgreen.svg\"\n                        alt=\"\"\n                        className=\"mr-2\"\n                      />\n                      <p>Show entire documant</p>\n                    </li>\n                    <li className=\"list-inline-item d-flex align-items-center mb-3\">\n                      <img\n                        src=\"projectstarter/kyc/correctgreen.svg\"\n                        alt=\"\"\n                        className=\"mr-2\"\n                      />\n                      <p>Don’t fold the documant</p>\n                    </li>\n                    <li className=\"list-inline-item d-flex align-items-center mb-3\">\n                      <img\n                        src=\"projectstarter/kyc/correctgreen.svg\"\n                        alt=\"\"\n                        className=\"mr-2\"\n                      />\n                      <p>Avoid glare</p>\n                    </li>\n                    <li className=\"list-inline-item d-flex align-items-center mb-3\">\n                      <img\n                        src=\"projectstarter/kyc/correctgreen.svg\"\n                        alt=\"\"\n                        className=\"mr-2\"\n                      />\n                      <p>No paper-based documants</p>\n                    </li>\n                    <li className=\"list-inline-item d-flex align-items-center mb-3\">\n                      <img\n                        src=\"projectstarter/kyc/correctgreen.svg\"\n                        alt=\"\"\n                        className=\"mr-2\"\n                      />\n                      <p>No photo from another image or device</p>\n                    </li>\n                    <li className=\"list-inline-item d-flex align-items-center mb-3\">\n                      <img\n                        src=\"projectstarter/kyc/correctgreen.svg\"\n                        alt=\"\"\n                        className=\"mr-2\"\n                      />\n                      <p>No Photocopy or grayscale documantt</p>\n                    </li>\n                  </ul>\n                </div>\n                {/*  */}\n              </div>\n            </div>\n            <div className=\"form-group text-center\">\n              <button onClick={()=>setStep(\"step7\")} className=\"btn-common mt-4 opac-75\">Next</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","const Step = ({ dark, catchImage, uploadImage, updateuploadImage, photo, setStep }) => {\n\n  const moveNext = () => {\n    updateuploadImage(\"\");\n    setStep(\"step8\");\n  }\n\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5  mb-3\">\n          <div class=\"card-header py-4 text-right\">\n            {\" \"}\n            {/* <select className=\"btn-common-grey\" name=\"English\" id=\"English\">\n              <option value=\"Filter\">English</option>\n              <option value=\"Filter\">Urdu</option>\n            </select> */}\n          </div>\n          <div class=\"card-body  text-secondary\">\n            <h3 className=\"text-center mt-4\">\n              Show the front side of your Pakistan National ID.\n            </h3>\n            <div className=\"row ptb\">\n              <div className=\"col-md-12 mx-auto \">\n                <div className=\"Passport-div text-center\">\n                  <img src={uploadImage} alt=\"\" className=\"img-fluid\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"form-group text-center\">\n                <input\n                  accept=\"image/gif, image/jpg, image/jpeg, image/png\"\n                  type=\"file\"\n                  name=\"image\"\n                  id=\"files\"\n                  onChange={catchImage}\n                  className=\"d-none\"\n                />\n                <label for=\"files\" className=\"btn-common mt-4\">\n                  {photo ? \"Re Upload\" : \"Upload\"}\n                </label>\n              </div>\n              {photo && (\n                <div className=\"form-group pl-3 pb-2 text-center\">\n                  <button\n                    onClick={() => moveNext()}\n                    className=\"btn-common mt-4 opac-75\"\n                  >\n                    Next\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","const Step = ({ dark, uploadImage1, setStep, catchBackside, uploadImage, passbackside }) => {\n\n  const moveNext = () => {\n    setStep(\"step9\");\n  }\n\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5  mb-3\">\n          <div class=\"card-header py-4 text-right\">\n            {\" \"}\n            {/* <select className=\"btn-common-grey\" name=\"English\" id=\"English\">\n              <option value=\"Filter\">English</option>\n              <option value=\"Filter\">Urdu</option>\n            </select> */}\n          </div>\n          <div class=\"card-body  text-secondary\">\n            <div className=\"row ptb\">\n              <div className=\"col-md-12 mx-auto\">\n                <div className=\"Passport-div text-center\">\n                  <img\n                    src={uploadImage1 ? uploadImage1 : uploadImage}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                </div>\n                {/*  */}\n              </div>\n            </div>\n            <div className=\"form-group text-center\">\n              <input\n                accept=\"image/gif, image/jpg, image/jpeg, image/png\"\n                type=\"file\"\n                name=\"image\"\n                id=\"files1\"\n                onChange={catchBackside}\n                className=\"d-none\"\n              />\n              <label for=\"files1\" className=\"btn-common mt-4\">\n                {passbackside ? \"Recapture Backside\" : \"Capture Backside\"}\n              </label>\n            </div>\n            {passbackside && (\n              <div className=\"form-group pl-3 pb-2 text-center\">\n                <button onClick={() => moveNext()} className=\"btn-common mt-4 opac-75\">\n                  Next\n                </button>\n              </div>\n            )}\n            {/* <div className=\"form-group text-center\">\n              <label\n                for=\"files\"\n                className=\"btn-common-outline \"\n                style={{ border: \"none\" }}\n              >\n                Try Again\n              </label>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","export default __webpack_public_path__ + \"static/media/spinner.0dc76c50.svg\";","import Spinner from \"../../../../Assets/spinner.svg\"\n\nconst Step = ({ dark, uploadImage1, getKyc, loader }) => {\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        <h3>Individual KYC Verification</h3>\n      </div>\n      <div className=\"form-group text-center\">\n        <p className=\"kycVeriP\">\n          Each account has 1 KYC credit. If your verification fails, please\n          contact <br /> an admin for more information before submitting again.\n        </p>\n      </div>\n      <div className=\"form-group \">\n        <div class=\"card mt-5  mb-3\">\n          <div class=\"card-header py-4 text-right\">\n            {\" \"}\n            {/* <select\n                className=\"btn-common-grey\"\n                name=\"English\"\n                id=\"English\"\n              >\n                <option value=\"Filter\">English</option>\n                <option value=\"Filter\">Urdu</option>\n              </select> */}\n          </div>\n          <div class=\"card-body  text-secondary\">\n            <div className=\"row ptb\">\n              <div className=\"col-md-12 mx-auto\">\n                <div className=\"Passport-div text-center\">\n                  <img src={uploadImage1} alt=\"\" className=\"img-fluid\" />\n                </div>\n                {/*  */}\n              </div>\n            </div>\n            <div className=\"form-group text-center\">\n              <button onClick={() => getKyc()} className=\"btn-common mt-4 opac-75\">\n                {loader ? (\n                  <img src={Spinner} width={40} alt=\"\" />\n                ) : (\n                  <p className=\"text-white py-2\">Save</p>\n                )}\n                {/* Save */}\n              </button>\n            </div>\n            {/* <div className=\"form-group text-center\">\n                <label\n                  for=\"files1\"\n                  className=\"btn-common-outline \"\n                  style={{ border: \"none\" }}\n                >\n                  Try Again\n                </label>\n              </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","import Spinner from \"../../../../Assets/spinner.svg\";\n\nconst Step = ({ dark, status, getKyc, loader, setStatus }) => {\n  return (\n    <div className=\"Myprofile\">\n      <div className=\"form-group text-center\">\n        <img\n          src={\n            dark === \"dark\"\n              ? \"projectstarter/kyc/kycVerify-dark.svg\"\n              : \"projectstarter/kyc/kycVerify.svg\"\n          }\n          className=\"img-fluid\"\n          alt=\"\"\n        />\n        <img\n          src=\"projectstarter/kyc/kycVerify.svg\"\n          className=\"img-fluid d-none\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"form-group text-center\">\n        {status === \"pending\" ? (\n          <h3 className=\"text-warning\">\n            Verification is in Pending, Please wait\n          </h3>\n        ) : (\n          <h3 className=\"text-danger\">Couldn't Verify, Try again</h3>\n        )}\n      </div>\n      <div className=\"form-group px-3 text-center\">\n        <p className=\"kycVeriP text-left text-white\">\n          Please follow these steps to get successfully verified.\n        </p>\n        <p\n          style={{ fontSize: 14 }}\n          className=\"kycVeriP mt-2 text-left text-gray d-flex align-items-center justify-content-start\"\n        >\n          <div\n            style={{\n              backgroundColor: \"#1FA5FF\",\n              borderRadius: \"50%\",\n              height: 14,\n              width: 14,\n            }}\n            className=\"mr-2\"\n          ></div>{\" \"}\n          Take a clear photo of your National ID showing all corners.\n        </p>\n        <p\n          style={{ fontSize: 14 }}\n          className=\"kycVeriP mt-2 text-left text-gray d-flex align-items-center justify-content-start\"\n        >\n          <div\n            style={{\n              backgroundColor: \"#1FA5FF\",\n              borderRadius: \"50%\",\n              height: 14,\n              width: 14,\n            }}\n            className=\"mr-2\"\n          ></div>{\" \"}\n          Make sure the image is not too bright or too dull to tread.\n        </p>\n      </div>\n      <div className=\"form-group text-center\">\n        {status === \"rejected\" && (\n          <button onClick={() => getKyc()} className=\"btn-common mt-4 opac-75\">\n            {loader ? (\n              <img src={Spinner} width={40} alt=\"\" />\n            ) : (\n              <p className=\"text-white py-2\">Try Again</p>\n            )}\n            {/* Save */}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Step;\n","import { TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport Spinner from \"../../../Assets/spinner.svg\";\n\nconst Profile = ({ tab, status, setTab, email, setEmail, setUsername, username }) => {\n  const [loader, setLoader] = useState(false);\n\n  const handleProfile = (e) => {\n    e.preventDefault();\n    setTab(1);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 p-0\">\n        <form onSubmit={handleProfile}>\n          <div className=\"Myprofile\">\n            <div className=\"form-group \">\n              <label className=\"p-main\" For=\"name\">\n                Your Name{\" \"}\n              </label>\n              <TextField\n                type=\"text\"\n                required\n                disabled={status === \"pending\" || status === \"accepted\"}\n                onChange={(e) => setUsername(e.target.value)}\n                id=\"name\"\n                name=\"name\"\n                value={username}\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Enter your username\"\n                margin=\"dense\"\n              />\n            </div>\n            <div className=\"form-group \">\n              <label className=\"p-main\" For=\"name\">\n                Email Address{\" \"}\n              </label>\n              <TextField\n                type=\"email\"\n                disabled={status === \"pending\" || status === \"accepted\"}\n                required\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                id=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Enter your email\"\n                margin=\"dense\"\n              />\n            </div>\n            {status === \"rejected\" || status === null && (\n              <div className=\"form-group text-right\">\n                {/* <button onClick={() => setTab(0)} className=\"btn-common mr-4\">\n                  Back\n                </button> */}\n\n                <button type=\"submit\" className=\"btn-common mt-4 opac-75\">\n                  {/* {loader ? (\n                  <img src={Spinner} width={40} alt=\"\" />\n                ) : (\n                  <p className=\"text-white py-2\">Save</p>\n                )} */}\n                  Next\n                </button>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useWeb3React } from \"@web3-react/core\";\nimport { useCallback } from \"react\";\nimport { LoginProfile, AddProfile } from \"../services/services\";\nimport { getLibraryForSign } from \"../utils/web3React\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Web3 from 'web3';\nimport { useDispatch } from 'react-redux'\n// import { Auth } from \"../redux/action\";\nexport const Signature = (data) => {\n  const { account } = useWeb3React();\n  const library = getLibraryForSign(Web3.givenProvider)\n  const sign = useCallback(async () => {\n    if ((library && account)) {\n      let signing = library\n        .getSigner(account);\n      try {\n        let signature = await signing.signMessage(\n         `Welcome to Project Starter!\n          Click \"Sign\" to sign in. No password needed!\n          This request will not trigger a blockchain transaction or cost any gas fees.\n          Your authentication status will be reset after 24 hours.\n          I accept the Project Starter Terms of Service:\n          Wallet address:\n            ${data}`\n        );\n        toast.success(`${signature.substring(0, 6)}...${signature.substring(signature.length - 4)}`, {\n          position: \"top-right\",\n          autoClose: 2000,\n        });\n        return signature;\n      }\n      catch (error) {\n        console.log(\"error\", error)\n        toast.error(\"User Not Register!\", {\n          autoClose: 2000,\n        });\n        return error;\n      }\n    }\n  }, [account, library, data])\n  return { userSign: sign }\n}\nexport default Signature","import { useWeb3React } from \"@web3-react/core\";\nimport Signature from \"../../../hooks/VerificationWallet\";\nimport { useState } from \"react\";\n\nconst Wallet = ({ dark, setTab }) => {\n  const { account } = useWeb3React();\n  const { userSign } = Signature(account);\n  const [sign, setSign] = useState(null);\n\n  const Verification = async () => {\n    let res = await userSign();\n    if (res?.code === 4001) {\n    } else if (res?.code) {\n    } else {\n      await setSign(res);\n      await setTab(2);\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 p-0\">\n        {sign ? (\n          <div className=\"Myprofile \">\n            <div className=\"form-group text-center\">\n              <img\n                src={\n                  dark === \"dark\"\n                    ? \"projectstarter/kyc/walletverify-dark.svg\"\n                    : \"projectstarter/kyc/walletverify.svg\"\n                }\n                className=\"img-fluid\"\n                alt=\"\"\n              />\n            </div>\n            <div className=\"form-group text-center\">\n              <h3 className=\"\">Wallet is verified</h3>\n            </div>\n            <div className=\"form-group text-center\">\n              <p className=\"mt-3\">\n                Your verified wallet address is{\" \"}\n                <span className=\"text-truncate p-main w-25\">\n                  {account.slice(0, 7)}...\n                </span>{\" \"}\n              </p>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n              <button\n                type=\"submit\"\n                onClick={() => setTab(2)}\n                className=\"btn-common py-2 p-0 mt-4 opac-75\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"Myprofile\">\n            <div className=\"form-group text-center\">\n              <img\n                src={\n                  dark === \"dark\"\n                    ? \"projectstarter/kyc/wallet-dark.svg\"\n                    : \"projectstarter/kyc/wallet.svg\"\n                }\n                className=\"img-fluid\"\n                alt=\"\"\n              />\n            </div>\n            <div className=\"form-group text-center\">\n              <h3>Verify your wallet</h3>\n            </div>\n            <div className=\"form-group text-center\">\n              <button\n                onClick={() => setTab(0)}\n                className=\"btn-common mr-4 opac-75\"\n              >\n                Back\n              </button>\n              <button\n                onClick={() => Verification()}\n                className=\"btn-common mt-4 opac-75\"\n              >\n                Verify Wallet\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Wallet;\n","import React, { useEffect, useState } from \"react\";\n// import Page from \"./index.html\"\nimport FooterSecondary from \"../footerSecondary/FooterSecondary\";\nimport FormData from \"form-data\";\nimport Navbar from \"../landing/header/Navbar\";\nimport Step1 from \"./components/steppers/step1\";\nimport Step2 from \"./components/steppers/step2\";\nimport Step3 from \"./components/steppers/step3\";\nimport Step4 from \"./components/steppers/step4\";\nimport Step5 from \"./components/steppers/step5\";\nimport Step7 from \"./components/steppers/step7\";\nimport Step8 from \"./components/steppers/step8\";\nimport Step9 from \"./components/steppers/step9\";\nimport Step10 from \"./components/steppers/step10\";\nimport Profile from \"./components/profile\";\nimport VerifyWallet from \"./components/verifyWallet\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport Loader from \"./components/loader\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../utils/ApiURL\";\nimport Environment from \"../../utils/Environment\";\nimport { useHistory } from \"react-router\";\nimport \"./verification.scss\";\nimport { useSelector } from \"react-redux\";\nimport Step from \"./components/steppers/step1\";\nimport { GetStatus } from \"../../redux/action/index\";\nimport { useDispatch } from \"react-redux\";\nvar loadjs = require(\"loadjs\");\n\nfunction Verification() {\n  const dispatch = useDispatch();\n  const [photo, setPhoto] = useState(null);\n  const [passbackside, setPassBackSide] = useState();\n  const [uploadImage, updateuploadImage] = useState(\"\");\n  const [uploadImage1, updateuploadImage1] = useState(\"\");\n  const [step, setStep] = useState(\"step1\");\n  const [tab, setTab] = useState(0);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [loader, setLoader] = useState(false);\n  const [resend, setResend] = useState(false);\n  const [rend, setRend] = useState(false);\n  const [documentName, setDocumentName] = useState(\"\");\n  const { account } = useWeb3React();\n  const dark = useSelector((state) => state.UserReducer.theme);\n  const call = useSelector((state) => state.UserReducer.status);\n  const [status, setStatus] = useState(null);\n  const history = useHistory();\n\n  // old kyc code\n  // useEffect(() => {\n  //   if (call === \"accepted\") {\n  //     history.push(\"/\");\n  //   } else {\n  //     if (call === \"pending\" || call === \"rejected\") {\n  //       setTab(2);\n  //       setStep(\"step\");\n  //     }\n  //     setStatus(call);\n  //   }\n  // }, [call, account]);\n\n  async function catchImage(e) {\n    try {\n      const file = e.target.files[0];\n      setPhoto(file);\n      updateuploadImage(URL.createObjectURL(e.target.files[0]));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async function catchBackside(e) {\n    try {\n      const file = e.target.files[0];\n      setPassBackSide(file);\n      updateuploadImage1(URL.createObjectURL(e.target.files[0]));\n      // console.log(file, \"file\")\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    if (account) {\n      getUserStatus();\n    }\n  }, [account]);\n\n  const getUserStatus = () => {\n    dispatch(GetStatus(account));\n  };\n\n  const getKyc = () => {\n    if (status === \"rejected\") {\n      setStatus(null);\n      setTab(0);\n      setStep(\"step1\");\n      setResend(true);\n    } else if (resend) {\n      // update call\n      setLoader(true);\n      var data = new FormData();\n      data.append(\"name\", username);\n      data.append(\"walletAddress\", account);\n      data.append(\"email\", email);\n      data.append(\"contractAddressDeployed\", Environment.contractAddress);\n      data.append(\"documentName\", documentName);\n      data.append(\"kycImageFrontSide\", photo);\n      data.append(\"kycImageBackSide\", passbackside);\n      data.append(\"country\", country.label);\n      data.append(\"statusOfApplication\", \"pending\");\n\n      axios\n        .post(`${API_URL}/v1/Kyc/editKycByWalletAddress`, data)\n        .then((res) => {\n          setLoader(false);\n          dispatch(GetStatus(account));\n          setStatus(\"pending\");\n          setStep(\"step\");\n        })\n        .catch(function (error) {\n          console.log(error);\n          setLoader(false);\n        });\n    } else {\n      // create call\n      setLoader(true);\n      var data = new FormData();\n      data.append(\"name\", username);\n      data.append(\"walletAddress\", account);\n      data.append(\"email\", email);\n      data.append(\"contractAddressDeployed\", Environment.contractAddress);\n      data.append(\"documentName\", documentName);\n      data.append(\"kycImageFrontSide\", photo);\n      data.append(\"kycImageBackSide\", passbackside);\n      data.append(\"country\", country.label);\n      axios\n        .post(`${API_URL}/v1/Kyc/addKyc`, data)\n        .then((res) => {\n          setLoader(false);\n          dispatch(GetStatus(account));\n          setStatus(\"pending\");\n          setStep(\"step\");\n        })\n        .catch(function (error) {\n          console.log(error);\n          setLoader(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (account) {\n      loadBlockpassWidget(account);\n    }\n  }, [account]);\n\n  const loadBlockpassWidget = (val) => {\n    const blockpass = new window.BlockpassKYCConnect(\n      \"projectstarter\", // service client_id from the admin console\n      {\n        refId: val, // assign the local user_id of the connected user\n      }\n    );\n    loadjs(\n      \"https://cdn.blockpass.org/widget/scripts/release/3.0.2/blockpass-kyc-connect.prod.js\"\n    );\n    blockpass.startKYCConnect();\n\n    blockpass.on(\"KYCConnectSuccess\", () => {\n      //add code that will trigger when data have been sent.\n    });\n    setRend(!rend)\n  };\n\n  const content = `<html>\n      <head>\n        <script src= 'https://cdn.blockpass.org/widget/scripts/release/3.0.2/blockpass-kyc-connect.prod.js'></script>\n      </head>\n      <body class=\"c16\">\n        <button id=\"blockpass-kyc-connect\">Verify with Blockpass</button>\n        <script>\n          const blockpass = new window.BlockpassKYCConnect(\n            'projectstarter', // service client_id from the admin console\n            {\n              refId: 1234, // assign the local user_id of the connected user\n            }\n          )\n          blockpass.startKYCConnect()\n          \n          blockpass.on('KYCConnectSuccess', () => {\n            //add code that will trigger when data have been sent. ex:\n            //alert('Success!')\n          })\n        </script> \n      </body>\n    </html>`;\n\n  return (\n    <>\n      <div className={dark}>\n        <section className=\"verification \">\n          <Navbar />\n          <div className=\"container\">\n            <section className=\"verification-top ptb\">\n              <div className=\"row\">\n                <div className=\"p-0 col-12\">\n                  <h3>User Profile</h3>\n                </div>\n              </div>\n              <div className=\"row d-flex align-items-center\">\n                <div className=\"col-12 p-0\">\n                  <div className=\"roadmap-section-div\">\n                    <div className=\"roadimg1 text-center\">\n                      {tab === 0 ? (\n                        <img\n                          src={\n                            dark === \"dark\"\n                              ? \"projectstarter/kyc/rocket-dark.svg\"\n                              : \"projectstarter/kyc/rocket.svg\"\n                          }\n                          alt=\"\"\n                          className=\"  kyc-top-logo\"\n                        />\n                      ) : (\n                        <img\n                          src={\n                            dark === \"dark\"\n                              ? \"projectstarter/kyc/correct-dark.svg\"\n                              : \"projectstarter/kyc/correct.svg\"\n                          }\n                          alt=\"\"\n                          className=\"  kyc-top-logo\"\n                        />\n                      )}\n                      <p className=\"\">Registration</p>\n                      {/* mt-3 ml-5 */}\n                    </div>\n                    <div className=\"roadimg1 text-center\">\n                      {tab <= 1 ? (\n                        <img\n                          src={\n                            dark === \"dark\"\n                              ? \"projectstarter/kyc/rocket-dark.svg\"\n                              : \"projectstarter/kyc/rocket.svg\"\n                          }\n                          alt=\"\"\n                          className=\" kyc-top-logo\"\n                        />\n                      ) : (\n                        <img\n                          src={\n                            dark === \"dark\"\n                              ? \"projectstarter/kyc/correct-dark.svg\"\n                              : \"projectstarter/kyc/correct.svg\"\n                          }\n                          alt=\"\"\n                          className=\" kyc-top-logo\"\n                        />\n                      )}\n                      <p>Verify C-Chain Wallet Ownership</p>\n                    </div>\n                    <div className=\"roadimg1 text-center\">\n                      <img\n                        src={\n                          dark === \"dark\"\n                            ? \"projectstarter/kyc/person-dark.svg\"\n                            : \"projectstarter/kyc/person.svg\"\n                        }\n                        alt=\"\"\n                        className=\" kyc-top-logo\"\n                      />\n                      <p>KYC Authentication </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n            <section className=\"verification-inner ptb\">\n              <div className=\"d-flex justify-content-center\">\n                {account ? (\n                  <a href={\"https://eager-booth-24c845.netlify.app/?account=\"+account.toString()}>\n                    <button\n                      id=\"blockpass-kyc-connect\"\n                      className=\"btn btn-common\"\n                    >\n                      Start KYC\n                    </button>\n                  </a>\n                ) : (\n                  <button className=\"btn btn-common\">Start KYC</button>\n                )}\n              </div>\n              {/* old kyc code */}\n              <div style={{ display: \"none\" }} className=\"row\">\n                <div className=\"col-12 p-0\">\n                  <ul class=\"nav nav-pills\" id=\"pills-tab\" role=\"tablist\">\n                    <li class=\"nav-item\">\n                      <a\n                        class={\"nav-link \" + (tab === 0 ? \"active\" : \"\")}\n                        // id=\"pills-home-tab\"\n                        // data-toggle=\"pill\"\n                        // href=\"#pills-home\"\n                        // role=\"tab\"\n                        // aria-controls=\"pills-home\"\n                        // aria-selected=\"true\"\n                      >\n                        My Profile\n                      </a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a\n                        class={\"nav-link \" + (tab === 1 ? \"active\" : \"\")}\n                        // id=\"pills-profile-tab\"\n                        // data-toggle=\"pill\"\n                        // href=\"#pills-profile\"\n                        // role=\"tab\"\n                        // aria-controls=\"pills-profile\"\n                        // aria-selected=\"false\"\n                      >\n                        Verify Wallet\n                      </a>\n                    </li>\n                    <li class=\"nav-item active\">\n                      <a\n                        class={\"nav-link \" + (tab === 2 ? \"active\" : \"\")}\n                        // id=\"pills-contact-tab\"\n                        // data-toggle=\"pill\"\n                        // href=\"#pills-contact\"\n                        // role=\"tab\"\n                        // aria-controls=\"pills-contact\"\n                        // aria-selected=\"false\"\n                      >\n                        {/* <button className=\"nav-link btn shadow-none text-dgray\"> */}\n                        KYC Status\n                        {/* </button> */}\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              {/* old kyc code */}\n              <div\n                style={{ display: \"none\" }}\n                class=\"tab-content\"\n                id=\"pills-tabContent\"\n              >\n                {tab === 0 && (\n                  <div\n                    class=\"tab-pane fade show active\"\n                    id=\"pills-home\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"pills-home-tab\"\n                  >\n                    {status === null ? (\n                      <Profile\n                        status={status}\n                        email={email}\n                        setEmail={setEmail}\n                        username={username}\n                        setUsername={setUsername}\n                        tab={tab}\n                        setTab={setTab}\n                      />\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n                )}\n                {tab === 1 && (\n                  <div\n                  // class=\"tab-pane fade\"\n                  // id=\"pills-profile\"\n                  // role=\"tabpanel\"\n                  // aria-labelledby=\"pills-profile-tab\"\n                  >\n                    <VerifyWallet setTab={setTab} dark={dark} />\n                  </div>\n                )}\n                {tab === 2 && (\n                  <div\n                  // class=\"tab-pane fade\"\n                  // id=\"pills-contact\"\n                  // role=\"tabpanel\"\n                  // aria-labelledby=\"pills-contact-tab\"\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-12 p-0\">\n                        {/* before connecting wallet */}\n                        <div className=\"Myprofile d-none\">\n                          <div className=\"form-group  text-center\">\n                            <img\n                              src={\n                                dark === \"dark\"\n                                  ? \"projectstarter/kyc/kycVerify-dark.svg\"\n                                  : \"projectstarter/kyc/kycVerify.svg\"\n                              }\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                          <div className=\"form-group text-center\">\n                            <h3>Individual KYC Verification</h3>\n                          </div>\n                          <div className=\"form-group text-center\">\n                            <p className=\"kycVeriP\">\n                              Each account has 1 KYC credit. If your\n                              verification fails, please contact <br /> an admin\n                              for more information before submitting again.\n                            </p>\n                          </div>\n                          <div className=\"form-group text-center\">\n                            <button className=\"btn-common mt-4\">\n                              Connect Wallet\n                            </button>\n                          </div>\n                        </div>\n                        {/* After connecting walltet */}\n                        {step === \"step1\" && (\n                          <Step1 setStep={setStep} dark={dark} />\n                        )}\n                        {/* After connecting wallet */}\n                        {step === \"step2\" && (\n                          <Step2 setStep={setStep} dark={dark} />\n                        )}\n                        {/* Choose the Document type you would like to use */}\n                        {step === \"step3\" && (\n                          <Step3\n                            setDocumentName={setDocumentName}\n                            setStep={setStep}\n                            dark={dark}\n                          />\n                        )}\n                        {/* Choose the Document type you would like to use */}\n                        {step === \"step4\" && (\n                          <Step4\n                            setCountry={setCountry}\n                            country={country}\n                            setStep={setStep}\n                            dark={dark}\n                          />\n                        )}\n                        {/* Choose your National ID issuing country/region */}\n                        {step === \"step5\" && (\n                          <Step5 dark={dark} setStep={setStep} />\n                        )}\n                        {/* Show the front side of your Pakistan National ID */}\n                        {/* <Step6 dark={dark} /> */}\n                        {/* Show the front side of your Pakistan National ID */}\n                        {step === \"step7\" && (\n                          <Step7\n                            updateuploadImage={updateuploadImage}\n                            setPhoto={setPhoto}\n                            photo={photo}\n                            dark={dark}\n                            setStep={setStep}\n                            uploadImage={uploadImage}\n                            catchImage={catchImage}\n                          />\n                        )}\n                        {/* passport backside Image */}\n                        {step === \"step8\" && (\n                          <Step8\n                            setStep={setStep}\n                            passbackside={passbackside}\n                            dark={dark}\n                            setStep={setStep}\n                            uploadImage={uploadImage}\n                            catchBackside={catchBackside}\n                            uploadImage1={uploadImage1}\n                          />\n                        )}\n                        {/* confirm Image */}\n                        {step === \"step9\" && (\n                          <Step9\n                            dark={dark}\n                            loader={loader}\n                            setStep={setStep}\n                            uploadImage1={uploadImage1}\n                            getKyc={getKyc}\n                          />\n                        )}\n                        {status === \"rejected\" || status === \"pending\" ? (\n                          <Step10\n                            dark={dark}\n                            setStatus={setStatus}\n                            loader={loader}\n                            setStep={setStep}\n                            status={status}\n                            uploadImage1={uploadImage1}\n                            getKyc={getKyc}\n                          />\n                        ) : (\n                          <div></div>\n                        )}{\" \"}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </section>\n          </div>\n        </section>\n        <FooterSecondary />\n      </div>\n    </>\n  );\n}\n\nexport default Verification;\n","import { useEffect } from 'react'\nimport useAuth from './useAuth'\n// const ConnectorNames =  {\n//   Injected : \"injected\",\n//   WalletConnect : \"walletconnect\",\n//   BSC : \"bsc\"\n// }\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n  useEffect(() => {\n    const item = localStorage.getItem(\"flag\")\n    if (item === 'true') {\n      login(\"injected\")\n    }\n    login(\"injected\")\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React, { useEffect, useState } from \"react\";\nimport { Backdrop } from \"@material-ui/core\";\nimport \"./banner.scss\";\n// ../header/Navbar\nimport Navbar from \"../landing/header/Navbar\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport {\n  UserPackages,\n  GetParticipated,\n  GetPartApprove,\n  GetClaim,\n} from \"../../hooks/dataFetcher\";\nimport { getIERC20Contract } from \"../../utils/contractHelpers\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useSelector } from \"react-redux\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport useWeb3 from \"../../hooks/useWeb3\";\n\nconst Banner1 = () => {\n  const web3 = useWeb3();\n  const dark = useSelector((state) => state.UserReducer.theme);\n  const [packag, setPackage] = useState(null);\n  const [tier, setTier] = useState(3);\n  const [rend, setRend] = useState(false);\n  const [busdBalance, setbusdBalance] = useState();\n  const [loader, setLoader] = useState(false);\n  const [participate, setParticipate] = useState(10000);\n  const { account } = useWeb3React();\n  const { CheckPack } = UserPackages();\n  const { userParticipating } = GetParticipated();\n  const { userPartApprove } = GetPartApprove();\n  const { userClaim } = GetClaim();\n  const [chAppr, setChAppr] = useState(false);\n\n  useEffect(() => {\n    getPackages();\n    BalanceBusd()\n  }, [account]);\n\n  const getPackages = async () => {\n    if (account) {\n      let res = await CheckPack(account);\n      await setPackage(res);\n      await setLoader(false);\n    }\n  };\n\n  console.log(\"balve usdt\", packag, participate)\n\n  const BalanceBusd = async () => {\n    try {\n      const contractApp = getIERC20Contract(\n        \"0x55d398326f99059ff775485246999027b3197955\",\n        web3\n      );\n      const approved = await contractApp.methods.balanceOf(account).call();\n      setbusdBalance(approved / 10 ** 18).catch((err) => {\n        return err;\n      });\n      return approved;\n    } catch (err) {\n      console.log(\"balance err\", err);\n    }\n  };\n\n  console.log(\"++++++++++++++\", tier)\n\n  const selectPack = (val) => {\n    let dumVal = packag;\n    if (val === 1) {\n      if (packag?.package1 === 0) {\n        dumVal.package1 = 1;\n        setTier(3);\n        setParticipate(10000);\n        if (dumVal.package2 === 1) {\n          dumVal.package2 = 0;\n        } else if (dumVal.package3 === 1) {\n          dumVal.package3 = 0;\n        }\n      } else {\n        setParticipate(0);\n        dumVal.package1 = 0;\n        setTier(0);\n      }\n    } else if (val === 2) {\n      if (packag?.package2 === 0) {\n        dumVal.package2 = 1;\n        setTier(2);\n        setParticipate(30000);\n        if (dumVal.package1 === 1) {\n          dumVal.package1 = 0;\n        } else if (dumVal.package3 === 1) {\n          dumVal.package3 = 0;\n        }\n      } else {\n        dumVal.package2 = 0;\n        setTier(0);\n        setParticipate(0);\n      }\n    } else if (val === 3) {\n      if (packag?.package3 === 0) {\n        setParticipate(50000);\n        setTier(1);\n        dumVal.package3 = 1;\n        if (dumVal.package2 === 1) {\n          dumVal.package2 = 0;\n        } else if (dumVal.package1 === 1) {\n          dumVal.package1 = 0;\n        }\n      } else {\n        dumVal.package3 = 0;\n        setTier(0);\n        setParticipate(0);\n      }\n    }\n    setPackage(dumVal);\n    setRend(!rend);\n  };\n\n  const getParticipated = async () => {\n    if (busdBalance <= participate) {\n      alert(\"Insufficient funds..!\")\n    }\n    else if (participate > 0 && account) {\n      setLoader(true);\n      if (chAppr === true) {\n        letsParticipate();\n      } else {\n        const res0 = await userPartApprove(account, participate, tier);\n        if (res0?.code === 4001) {\n          await setLoader(false);\n        } else if (res0?.code) {\n          await setLoader(false);\n        } else {\n          await setChAppr(true);\n          await setLoader(false);\n        }\n      }\n    }\n  };\n\n  const letsParticipate = async () => {\n    const res = await userParticipating(account, participate, tier);\n    await getPackages();\n    await setLoader(false);\n  };\n\n  const getClaimed = async () => {\n    console.log(\"called\");\n    const res = await userClaim(account);\n  };\n\n  return (\n    <>\n      <Backdrop className=\"loader\" sx={{ color: \"#fff\" }} open={loader}>\n        <img\n          src=\"/projectstarter/header/loader.svg\"\n          alt=\"\"\n          className=\"img-fluid shdshhgdss\"\n        />\n      </Backdrop>\n      <div className={dark}>\n        <section className=\"main-banner \" id=\"banner\">\n          <Navbar />\n          <div className=\"\">\n            <div className=\"row ptb\">\n              <div className=\"col-sm-11 m-auto\">\n                <div className=\"inner-content text-center\">\n                  <div className=\"inner-img \">\n                    {/* <h6 className=\"common mb-3\">Welcome to <b>Projectstarter</b> </h6> */}\n                    {/* <h1 className=\"\"> Launchpad ipsam quia dolor voluptatem quia<span className=\"common \">voluptas sit aspernatur aut odit </span></h1> */}\n                    {/* <p className=\"ptb20 grey\">At vero eos et accusamus et iusto odio dignissimos ducimus qui blandis praesentium voluptatum deleniti <br /> atque corrupti quos dolores et quas molestias excepturi sint occaecati.</p> */}\n                    {/* <ul className=\"list-inline d-sm-block mt-2 d-none\">\n                                            <li className=\"list-inline-item mt-4\">\n                                                <Link to=''><a href=\"#\" target=\"_blank\" className=\"btn-common2\">Join us Telegram</a></Link>\n                                            </li>\n                                            <li className=\"list-inline-item mt-4\">\n                                                <Link to=''> <a href=\"#\" target=\"_blank\" className=\"btn-common2\">Follow our Twitter</a></Link>\n                                            </li>\n                                            <li className=\"list-inline-item mt-4\">\n                                                <Link to=''> <a href=\"#\" target=\"_blank\" className=\"btn-common2\">Github <img src=\"/projectstarter/banner/github.svg\" className=\"img-fluid ml-2 mb-1 pancakeBtn \" alt=\"\" /></a></Link>\n                                            </li>\n                                        </ul>\n                                        <div className='d-flex flex-column d-sm-none d-block'>\n                                            <Link to=''> <button href=\"#\" target=\"_blank\" className=\"btn-common w-100 mt-3\"><img src=\"/projectstarter/banner/pancakeImg.svg\" className=\"img-fluid mr-2 mb-1  pancakeBtn\" alt=\"\" /> Buy on PancakeSwap</button></Link>\n                                            <Link to='/idoform'><button href=\"#\" target=\"_blank\" className=\"btn-common w-100 mt-3\">Apply for IDO</button></Link>\n                                            <Link to='/projects'> <button href=\"#\" target=\"_blank\" className=\"btn-common w-100 mt-3\">View All Projects</button></Link>\n                                        </div> */}\n                    <div className=\"w-100\">\n                      <p className=\"main-heading\">\n                        ProjectStarter Seed Round Presale\n                      </p>\n                      <p className=\"submain-heading\">\n                        ProjectStarter Seed Round Presale\n                      </p>\n                      <div className=\"card-wraps\">\n                        <div\n                          // onClick={() => selectPack(1)}\n                          className={\n                            \"cards bg-white shvxsc cursor-pointer \" +\n                            (tier === 3\n                              ? \"card-bord\"\n                              : \"card-bordwhite\")\n                          }\n                        >\n                          <div className=\"header\">VC Package 1</div>\n                          <div className=\"sold-out111\">Sold Out</div>\n                          <div className=\"heading\">\n                            <p>\n                              10,000<span>USDT</span>\n                            </p>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks\">\n                              <p className=\"sub\">No. of Tokens</p>\n                              <p className=\"titl\">15,000,000</p>\n                            </div>\n                            <div className=\"toks\">\n                              <p className=\"sub\">Raise</p>\n                              <p className=\"titl\">$750,000</p>\n                            </div>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks\">\n                              <p className=\"sub\">Price</p>\n                              <p className=\"titl\">$0.05</p>\n                            </div>\n                            <div className=\"toks\">\n                              <p className=\"sub\">Supply%</p>\n                              <p className=\"titl\">15.00%</p>\n                            </div>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks text-left pb-4\">\n                              <p className=\"sub\">TGE + Vesting</p>\n                              <p className=\"titl\">\n                                100% vesting for 12 months 5% Released Monthly\n                                from 13th month onwards\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          onClick={() => selectPack(2)}\n                          className={\n                            \"cards bg-white cursor-pointer \" +\n                            (tier === 2\n                              ? \"card-bord\"\n                              : \"card-bordwhite\")\n                          }\n                        >\n                          <div className=\"header\">VC Package 2</div>\n                          <div className=\"heading\">\n                            <p>\n                              30,000<span>USDT</span>\n                            </p>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks\">\n                              <p className=\"sub\">No. of Tokens</p>\n                              <p className=\"titl\">15,000,000</p>\n                            </div>\n                            <div className=\"toks\">\n                              <p className=\"sub\">Raise</p>\n                              <p className=\"titl\">$750,000</p>\n                            </div>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks\">\n                              <p className=\"sub\">Price</p>\n                              <p className=\"titl\">$0.05</p>\n                            </div>\n                            <div className=\"toks\">\n                              <p className=\"sub\">Supply%</p>\n                              <p className=\"titl\">15.00%</p>\n                            </div>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks text-left pb-4\">\n                              <p className=\"sub\">TGE + Vesting</p>\n                              <p className=\"titl\">\n                                100% vesting for 12 months 5% Released Monthly\n                                from 13th month onwards\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          onClick={() => selectPack(3)}\n                          className={\n                            \"cards bg-white cursor-pointer \" +\n                            (tier === 1\n                              ? \"card-bord\"\n                              : \"card-bordwhite\")\n                          }\n                        >\n                          <div className=\"header\">VC Package 3</div>\n                          <div className=\"heading\">\n                            <p>\n                              50,000<span>USDT</span>\n                            </p>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks\">\n                              <p className=\"sub\">No. of Tokens</p>\n                              <p className=\"titl\">15,000,000</p>\n                            </div>\n                            <div className=\"toks\">\n                              <p className=\"sub\">Raise</p>\n                              <p className=\"titl\">$750,000</p>\n                            </div>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks\">\n                              <p className=\"sub\">Price</p>\n                              <p className=\"titl\">$0.05</p>\n                            </div>\n                            <div className=\"toks\">\n                              <p className=\"sub\">Supply%</p>\n                              <p className=\"titl\">15.00%</p>\n                            </div>\n                          </div>\n                          <div className=\"d-flex pt-3 justify-content-between w-75 m-auto\">\n                            <div className=\"toks text-left pb-4\">\n                              <p className=\"sub\">TGE + Vesting</p>\n                              <p className=\"titl\">\n                                100% vesting for 12 months 5% Released Monthly\n                                from 13th month onwards\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"pt-5 d-flex justify-content-center align-items-center\">\n                      <button onClick={() => getClaimed()} className=\"but my_btn ml-4\">\n                        Claim\n                      </button>\n                      {/* <button className=\"but\">Approve</button> */}\n                      <button\n                        onClick={() => getParticipated()}\n                        className=\"but  my_btn ml-4\"\n                      >\n                        {busdBalance <= participate ? (\n                          \"Insufficient Funds\"\n                        ) : (\n                          <> {chAppr ? \"Participate\" : \"Approve\"}</>\n                        )}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* <Footer /> */}\n          {/* <div className={dark}>\n            <section className=\"main-footer ptb\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-sm-3 text-center\">\n                    <div className=\"inner-icon\">\n                      <a className=\"navbar-brand\" href=\"/\">\n                        <img\n                          src={\n                            dark === \"dark\"\n                              ? \"/projectstarter-dark/logo-footer.svg\"\n                              : \"/projectstarter/header/logo.svg\"\n                          }\n                          className=\"img-fluid\"\n                          alt=\"\"\n                        />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div> */}\n        </section>\n      </div>\n    </>\n  );\n};\n\nexport default Banner1;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Landing from './components/landing/Landing.js';\nimport Projects from \"./components/projects/Projects.js\";\nimport Rounds from \"./components/roundPresale/presale.js\";\nimport './App.scss';\nimport Staking from \"./components/staking/Staking.js\"\nimport ProjectDetail from \"./components/projects/Project-detail.js\"\n// import useEagerConnect from './hooks/useEagerConnect'\nimport IdoForm from './components/idoform/IdoForm';\nimport Admin from './components/admin/Admin';\nimport Car from './components/kyc';\nimport AdminDetail from './components/admin/AdminDetail'\nimport Verification from './components/kyc-verification/Verification';\nimport useEagerConnect from './hooks/useEagerConnect';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Banner1 from './components/main-banner1/Banner1.js';\n\nfunction App() {\n  useEagerConnect()\n  return (\n    <>\n      <Router>\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggabless\n          pauseOnHover\n        />\n        <Switch>\n          {/* <Route exact path='/' component={Landing} /> */}\n          <Route exact path='/kyc1' component={Car} />\n          <Route exact path='/projects' component={Projects} />\n          {/* <Route exact path='/rounds' component={Rounds} /> */}\n          <Route exact path='/' component={Staking} />\n          <Route exact path='/rounds' component={Banner1} />\n          <Route exact path='/projectdetail/:id' component={ProjectDetail} />\n          <Route exact path='/idoform' component={IdoForm} />\n          <Route exact path='/verification' component={Verification} />\n          <Route exact path='/admin' component={Admin} />\n          <Route exact path='/admindetail/:id' component={AdminDetail} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n","let initState = {};\n\nexport const UserReducer = (state = initState, action) => {\n  const { type, payload } = action; //object destructring\n  switch (type) {\n    case \"USER_THEME\":\n      return {\n        ...state,\n        theme: payload,\n      };\n    case \"GET_USER\":\n      return {\n        ...state,\n        status: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { UserReducer } from \"../Reducers/Index\";\n\nconst rootReducer = combineReducers({\n  UserReducer,\n});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\n// compose are enhancers used for composing middlewares for redux\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n};\n\nconst store = configureStore();\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store/index';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { getLibrary } from './utils/web3React'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}